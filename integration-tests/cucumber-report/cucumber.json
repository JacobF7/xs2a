[
  {
    "line": 1,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 54349388,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 14,
        "name": "Successful consent request creation (redirect)",
        "description": "",
        "id": "account-information-service;successful-consent-request-creation-(redirect);;2",
        "after": [
          {
            "result": {
              "duration": 326965,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 242940477,
              "status": "passed"
            },
            "line": 9,
            "name": "PSU wants to create a consent consent-dedicated-successful.json",
            "match": {
              "arguments": [
                {
                  "val": "consent-dedicated-successful.json",
                  "offset": 30
                }
              ],
              "location": "ConsentRequestSuccessfulSteps.loadTestData(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1949206788,
              "status": "passed"
            },
            "line": 10,
            "name": "PSU sends the create consent request",
            "match": {
              "location": "ConsentRequestSuccessfulSteps.sendConsentRequest()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3675575,
              "status": "passed"
            },
            "line": 11,
            "name": "a successful response code and the appropriate consent response data is delivered to the PSU",
            "match": {
              "location": "ConsentRequestSuccessfulSteps.checkResponseCode()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 15,
            "value": "#            | consent-all-psd2-accounts-successful.json  |"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 9994568,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 16,
        "name": "Successful consent request creation (redirect)",
        "description": "",
        "id": "account-information-service;successful-consent-request-creation-(redirect);;3",
        "after": [
          {
            "result": {
              "duration": 134505,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1362658,
              "status": "passed"
            },
            "line": 9,
            "name": "PSU wants to create a consent consent-all-accounts-successful.json",
            "match": {
              "arguments": [
                {
                  "val": "consent-all-accounts-successful.json",
                  "offset": 30
                }
              ],
              "location": "ConsentRequestSuccessfulSteps.loadTestData(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1761457542,
              "status": "passed"
            },
            "line": 10,
            "name": "PSU sends the create consent request",
            "match": {
              "location": "ConsentRequestSuccessfulSteps.sendConsentRequest()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 42140,
              "status": "passed"
            },
            "line": 11,
            "name": "a successful response code and the appropriate consent response data is delivered to the PSU",
            "match": {
              "location": "ConsentRequestSuccessfulSteps.checkResponseCode()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 24,
            "value": "#| consent-all-psd2-no-psu-id.json       |"
          },
          {
            "line": 25,
            "value": "#| consent-all-psd2-wrong-psu-id.json    |"
          },
          {
            "line": 26,
            "value": "#| consent-all-psd2-wrong-value.json          |"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 12130727,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 27,
        "name": "Failed consent request creation (redirect)",
        "description": "",
        "id": "account-information-service;failed-consent-request-creation-(redirect);;2",
        "after": [
          {
            "result": {
              "duration": 129244,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 9264136,
              "status": "passed"
            },
            "line": 19,
            "name": "PSU wants to create an errorful consent consent-dedicated-incorrect-iban.json",
            "match": {
              "arguments": [
                {
                  "val": "consent-dedicated-incorrect-iban.json",
                  "offset": 40
                }
              ],
              "location": "ConsentRequestErrorfulSteps.loadTestData(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 18975900,
              "status": "passed"
            },
            "line": 20,
            "name": "PSU sends the create consent request with error",
            "match": {
              "location": "ConsentRequestErrorfulSteps.sendErrorfulConsentRequest()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3978669,
              "status": "passed"
            },
            "line": 21,
            "name": "an error response code is displayed and an appropriate error response is shown",
            "match": {
              "location": "CommonSteps.checkErrorCodeAndResponse()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 20223487,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 80,
        "name": "Errorful deletion of consent (redirect)",
        "description": "",
        "id": "account-information-service;errorful-deletion-of-consent-(redirect);;2",
        "after": [
          {
            "result": {
              "duration": 263263,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1025483,
              "status": "passed"
            },
            "line": 73,
            "name": "PSU wants to create a consent consent-dedicated-successful.json",
            "match": {
              "arguments": [
                {
                  "val": "consent-dedicated-successful.json",
                  "offset": 30
                }
              ],
              "location": "ConsentRequestSuccessfulSteps.loadTestData(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1694928162,
              "status": "passed"
            },
            "line": 74,
            "name": "PSU sends the create consent request",
            "match": {
              "location": "ConsentRequestSuccessfulSteps.sendConsentRequest()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4520073,
              "status": "passed"
            },
            "line": 75,
            "name": "PSU wants to delete the consent consent-deletion-no-request-id.json",
            "match": {
              "arguments": [
                {
                  "val": "consent-deletion-no-request-id.json",
                  "offset": 32
                }
              ],
              "location": "ConsentDeletionErrorfulSteps.loadTestData(String)"
            },
            "matchedColumns": [
              1
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9138178,
              "status": "passed"
            },
            "line": 76,
            "name": "PSU sends the consent deletion request with errors",
            "match": {
              "location": "ConsentDeletionErrorfulSteps.deleteConsent()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 319660,
              "status": "passed"
            },
            "line": 77,
            "name": "an error response code is displayed and an appropriate error response is shown",
            "match": {
              "location": "CommonSteps.checkErrorCodeAndResponse()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 11275626,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 81,
        "name": "Errorful deletion of consent (redirect)",
        "description": "",
        "id": "account-information-service;errorful-deletion-of-consent-(redirect);;3",
        "after": [
          {
            "result": {
              "duration": 153711,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 820993,
              "status": "passed"
            },
            "line": 73,
            "name": "PSU wants to create a consent consent-dedicated-successful.json",
            "match": {
              "arguments": [
                {
                  "val": "consent-dedicated-successful.json",
                  "offset": 30
                }
              ],
              "location": "ConsentRequestSuccessfulSteps.loadTestData(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1688132133,
              "status": "passed"
            },
            "line": 74,
            "name": "PSU sends the create consent request",
            "match": {
              "location": "ConsentRequestSuccessfulSteps.sendConsentRequest()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 925584,
              "status": "passed"
            },
            "line": 75,
            "name": "PSU wants to delete the consent consent-deletion-wrong-format-request-id.json",
            "match": {
              "arguments": [
                {
                  "val": "consent-deletion-wrong-format-request-id.json",
                  "offset": 32
                }
              ],
              "location": "ConsentDeletionErrorfulSteps.loadTestData(String)"
            },
            "matchedColumns": [
              1
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6663180,
              "status": "passed"
            },
            "line": 76,
            "name": "PSU sends the consent deletion request with errors",
            "match": {
              "location": "ConsentDeletionErrorfulSteps.deleteConsent()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 278265,
              "status": "passed"
            },
            "line": 77,
            "name": "an error response code is displayed and an appropriate error response is shown",
            "match": {
              "location": "CommonSteps.checkErrorCodeAndResponse()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 11231201,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 82,
        "name": "Errorful deletion of consent (redirect)",
        "description": "",
        "id": "account-information-service;errorful-deletion-of-consent-(redirect);;4",
        "after": [
          {
            "result": {
              "duration": 240308,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 730089,
              "status": "passed"
            },
            "line": 73,
            "name": "PSU wants to create a consent consent-dedicated-successful.json",
            "match": {
              "arguments": [
                {
                  "val": "consent-dedicated-successful.json",
                  "offset": 30
                }
              ],
              "location": "ConsentRequestSuccessfulSteps.loadTestData(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1921404441,
              "status": "passed"
            },
            "line": 74,
            "name": "PSU sends the create consent request",
            "match": {
              "location": "ConsentRequestSuccessfulSteps.sendConsentRequest()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1160611,
              "status": "passed"
            },
            "line": 75,
            "name": "PSU wants to delete the consent consent-deletion-no-consent-id.json",
            "match": {
              "arguments": [
                {
                  "val": "consent-deletion-no-consent-id.json",
                  "offset": 32
                }
              ],
              "location": "ConsentDeletionErrorfulSteps.loadTestData(String)"
            },
            "matchedColumns": [
              1
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2171865080,
              "status": "passed"
            },
            "line": 76,
            "name": "PSU sends the consent deletion request with errors",
            "match": {
              "location": "ConsentDeletionErrorfulSteps.deleteConsent()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1639499,
              "error_message": "java.lang.AssertionError: \nExpected: \u003c404\u003e\n     but: was null\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)\n\tat de.adorsys.aspsp.xs2a.integtest.stepdefinitions.ais.CommonSteps.checkErrorCodeAndResponse(CommonSteps.java:50)\n\tat ✽.Then an error response code is displayed and an appropriate error response is shown(AIS_01.feature:77)\n",
              "status": "failed"
            },
            "line": 77,
            "name": "an error response code is displayed and an appropriate error response is shown",
            "match": {
              "location": "CommonSteps.checkErrorCodeAndResponse()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 17338618,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 119,
        "name": "Request account list successfully",
        "description": "",
        "id": "account-information-service;request-account-list-successfully;;2",
        "after": [
          {
            "result": {
              "duration": 178553,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 20719933,
              "error_message": "com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field \"frequencyPerDay\" (class de.adorsys.psd2.consent.api.ais.CreateAisConsentRequest), not marked as ignorable (9 known properties: \"tppRedirectPreferred\", \"validUntil\", \"allowedFrequencyPerDay\", \"access\", \"psuData\", \"requestedFrequencyPerDay\", \"tppId\", \"recurringIndicator\", \"combinedServiceIndicator\"])\n at [Source: {\n  \"access\": {\n    \"accounts\": [\n      {\n        \"resourceId\": \"11111-999999999\",\n        \"currency\": \"EUR\",\n        \"iban\": \"DE89370400440532013000\"\n      }\n    ],\n\n    \"balances\": [\n      {\n        \"resourceId\": \"11111-999999999\",\n        \"currency\": \"EUR\",\n        \"iban\": \"DE89370400440532013000\"\n      }\n    ],\n    \"transactions\": [\n      {\n        \"resourceId\": \"11111-999999999\",\n        \"currency\": \"EUR\",\n        \"iban\": \"DE89370400440532013000\"\n      }\n    ]\n  },\n  \"psuData\": {\n    \"psuId\": null\n  },\n  \"combinedServiceIndicator\": false,\n  \"frequencyPerDay\": 4,\n  \"recurringIndicator\": false,\n  \"tppId\": \"12345987\",\n  \"tppRedirectPreferred\": true,\n  \"validUntil\": \"2020-10-10\"\n}; line: 30, column: 23] (through reference chain: de.adorsys.psd2.consent.api.ais.CreateAisConsentRequest[\"frequencyPerDay\"])\n\tat com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:62)\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:834)\n\tat com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:1093)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1489)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1467)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:282)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:140)\n\tat com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:3814)\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:2858)\n\tat de.adorsys.aspsp.xs2a.integtest.util.AisConsentService.getConsentFromJsonData(AisConsentService.java:83)\n\tat de.adorsys.aspsp.xs2a.integtest.util.AisConsentService.createConsentWithStatus(AisConsentService.java:63)\n\tat de.adorsys.aspsp.xs2a.integtest.stepdefinitions.ais.CommonSteps.psu_already_has_an_existing_consent(CommonSteps.java:62)\n\tat ✽.Given PSU already has an existing valid consent account/accounts-create-consent.json(AIS_01.feature:113)\n",
              "status": "failed"
            },
            "line": 113,
            "name": "PSU already has an existing valid consent account/accounts-create-consent.json",
            "match": {
              "arguments": [
                {
                  "val": "valid",
                  "offset": 28
                },
                {
                  "val": "account/accounts-create-consent.json",
                  "offset": 42
                }
              ],
              "location": "CommonSteps.psu_already_has_an_existing_consent(String,String)"
            },
            "matchedColumns": [
              1
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 114,
            "name": "wants to get a list of accounts using accountList-successful.json",
            "match": {
              "arguments": [
                {
                  "val": "accountList-successful.json",
                  "offset": 38
                }
              ],
              "location": "AccountListRequestSuccessfulSteps.wants_to_get_a_list_of_accounts_using(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 115,
            "name": "PSU requests the list of accounts",
            "match": {
              "location": "AccountListRequestSuccessfulSteps.psu_requests_the_list_of_accounts()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 116,
            "name": "a successful response code and the appropriate list of accounts get returned",
            "match": {
              "location": "AccountListRequestSuccessfulSteps.a_successful_response_code_and_the_appropriate_list_of_accounts_get_returned()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 19279459,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 159,
        "name": "Request account details successfully",
        "description": "",
        "id": "account-information-service;request-account-details-successfully;;2",
        "after": [
          {
            "result": {
              "duration": 217629,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1288970,
              "error_message": "com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field \"frequencyPerDay\" (class de.adorsys.psd2.consent.api.ais.CreateAisConsentRequest), not marked as ignorable (9 known properties: \"tppRedirectPreferred\", \"validUntil\", \"allowedFrequencyPerDay\", \"access\", \"psuData\", \"requestedFrequencyPerDay\", \"tppId\", \"recurringIndicator\", \"combinedServiceIndicator\"])\n at [Source: {\n  \"access\": {\n    \"accounts\": [\n      {\n        \"resourceId\": \"11111-999999999\",\n        \"currency\": \"EUR\",\n        \"iban\": \"DE89370400440532013000\"\n      }\n    ],\n\n    \"balances\": [\n      {\n        \"resourceId\": \"11111-999999999\",\n        \"currency\": \"EUR\",\n        \"iban\": \"DE89370400440532013000\"\n      }\n    ],\n    \"transactions\": [\n      {\n        \"resourceId\": \"11111-999999999\",\n        \"currency\": \"EUR\",\n        \"iban\": \"DE89370400440532013000\"\n      }\n    ]\n  },\n  \"psuData\": {\n    \"psuId\": null\n  },\n  \"combinedServiceIndicator\": false,\n  \"frequencyPerDay\": 4,\n  \"recurringIndicator\": false,\n  \"tppId\": \"12345987\",\n  \"tppRedirectPreferred\": true,\n  \"validUntil\": \"2020-10-10\"\n}; line: 30, column: 23] (through reference chain: de.adorsys.psd2.consent.api.ais.CreateAisConsentRequest[\"frequencyPerDay\"])\n\tat com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:62)\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:834)\n\tat com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:1093)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1489)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1467)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:282)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:140)\n\tat com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:3814)\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:2858)\n\tat de.adorsys.aspsp.xs2a.integtest.util.AisConsentService.getConsentFromJsonData(AisConsentService.java:83)\n\tat de.adorsys.aspsp.xs2a.integtest.util.AisConsentService.createConsentWithStatus(AisConsentService.java:63)\n\tat de.adorsys.aspsp.xs2a.integtest.stepdefinitions.ais.CommonSteps.psu_already_has_an_existing_consent(CommonSteps.java:62)\n\tat ✽.Given PSU already has an existing valid consent account/accounts-create-consent.json(AIS_01.feature:152)\n",
              "status": "failed"
            },
            "line": 152,
            "name": "PSU already has an existing valid consent account/accounts-create-consent.json",
            "match": {
              "arguments": [
                {
                  "val": "valid",
                  "offset": 28
                },
                {
                  "val": "account/accounts-create-consent.json",
                  "offset": 42
                }
              ],
              "location": "CommonSteps.psu_already_has_an_existing_consent(String,String)"
            },
            "matchedColumns": [
              2
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 153,
            "name": "account id 11111-999999999",
            "match": {
              "arguments": [
                {
                  "val": "11111-999999999",
                  "offset": 11
                }
              ],
              "location": "AccountDetailRequestSuccessfulSteps.account_id(String)"
            },
            "matchedColumns": [
              1
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 154,
            "name": "wants to get account details using accountDetail-successful.json",
            "match": {
              "arguments": [
                {
                  "val": "accountDetail-successful.json",
                  "offset": 35
                }
              ],
              "location": "AccountDetailRequestSuccessfulSteps.wants_to_get_account_details_using(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 155,
            "name": "PSU requests the account details",
            "match": {
              "location": "AccountDetailRequestSuccessfulSteps.psu_requests_the_account_details()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 156,
            "name": "a successful response code and the appropriate details of accounts get returned",
            "match": {
              "location": "AccountDetailRequestSuccessfulSteps.a_successful_response_code_and_the_appropriate_details_of_accounts_get_returned()"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Account Information Service",
    "description": "",
    "id": "account-information-service",
    "keyword": "Feature",
    "uri": "AIS_01.feature"
  },
  {
    "line": 1,
    "elements": [
      {
        "comments": [
          {
            "line": 15,
            "value": "#            | payments            | sepa-credit-transfers         | singlePayInit-incorrect-syntax.json            |"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 17874686,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 16,
        "name": "Failed payment initiation request for single payments (redirect)",
        "description": "",
        "id": "payment-initiation-service---common;failed-payment-initiation-request-for-single-payments-(redirect);;2",
        "after": [
          {
            "result": {
              "duration": 238199,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 16303583,
              "status": "passed"
            },
            "line": 10,
            "name": "PSU initiates an errorful single payment singlePayInit-incorrect-payment-product.json using the payment service payments and the payment product sepa-credit-trans",
            "match": {
              "arguments": [
                {
                  "val": "singlePayInit-incorrect-payment-product.json",
                  "offset": 41
                },
                {
                  "val": "payments",
                  "offset": 112
                },
                {
                  "val": "sepa-credit-trans",
                  "offset": 145
                }
              ],
              "location": "SinglePaymentErrorfulSteps.loadTestData(String,String,String)"
            },
            "matchedColumns": [
              0,
              1,
              2
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 16056747,
              "status": "passed"
            },
            "line": 11,
            "name": "PSU sends the single payment initiating request with error",
            "match": {
              "location": "SinglePaymentErrorfulSteps.sendPaymentInitiatingRequestWithError()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8121861,
              "status": "passed"
            },
            "line": 12,
            "name": "an error response code and the appropriate error response are received",
            "match": {
              "location": "GlobalErrorfulSteps.checkErrorCodeAndResponse()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 18680645,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 17,
        "name": "Failed payment initiation request for single payments (redirect)",
        "description": "",
        "id": "payment-initiation-service---common;failed-payment-initiation-request-for-single-payments-(redirect);;3",
        "after": [
          {
            "result": {
              "duration": 801812,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1290298,
              "status": "passed"
            },
            "line": 10,
            "name": "PSU initiates an errorful single payment singlePayInit-no-request-id.json using the payment service payments and the payment product sepa-credit-transfers",
            "match": {
              "arguments": [
                {
                  "val": "singlePayInit-no-request-id.json",
                  "offset": 41
                },
                {
                  "val": "payments",
                  "offset": 100
                },
                {
                  "val": "sepa-credit-transfers",
                  "offset": 133
                }
              ],
              "location": "SinglePaymentErrorfulSteps.loadTestData(String,String,String)"
            },
            "matchedColumns": [
              0,
              1,
              2
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 23428861,
              "status": "passed"
            },
            "line": 11,
            "name": "PSU sends the single payment initiating request with error",
            "match": {
              "location": "SinglePaymentErrorfulSteps.sendPaymentInitiatingRequestWithError()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 403784,
              "status": "passed"
            },
            "line": 12,
            "name": "an error response code and the appropriate error response are received",
            "match": {
              "location": "GlobalErrorfulSteps.checkErrorCodeAndResponse()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 26494509,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 18,
        "name": "Failed payment initiation request for single payments (redirect)",
        "description": "",
        "id": "payment-initiation-service---common;failed-payment-initiation-request-for-single-payments-(redirect);;4",
        "after": [
          {
            "result": {
              "duration": 171182,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1686462,
              "status": "passed"
            },
            "line": 10,
            "name": "PSU initiates an errorful single payment singlePayInit-no-ip-address.json using the payment service payments and the payment product sepa-credit-transfers",
            "match": {
              "arguments": [
                {
                  "val": "singlePayInit-no-ip-address.json",
                  "offset": 41
                },
                {
                  "val": "payments",
                  "offset": 100
                },
                {
                  "val": "sepa-credit-transfers",
                  "offset": 133
                }
              ],
              "location": "SinglePaymentErrorfulSteps.loadTestData(String,String,String)"
            },
            "matchedColumns": [
              0,
              1,
              2
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 19123260,
              "status": "passed"
            },
            "line": 11,
            "name": "PSU sends the single payment initiating request with error",
            "match": {
              "location": "SinglePaymentErrorfulSteps.sendPaymentInitiatingRequestWithError()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 330336,
              "status": "passed"
            },
            "line": 12,
            "name": "an error response code and the appropriate error response are received",
            "match": {
              "location": "GlobalErrorfulSteps.checkErrorCodeAndResponse()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 19,
            "value": "#            | payments            | sepa-credit-transfers         | singlePayInit-wrong-format-request-id.json     |"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 35891670,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 20,
        "name": "Failed payment initiation request for single payments (redirect)",
        "description": "",
        "id": "payment-initiation-service---common;failed-payment-initiation-request-for-single-payments-(redirect);;5",
        "after": [
          {
            "result": {
              "duration": 235154,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1947921,
              "status": "passed"
            },
            "line": 10,
            "name": "PSU initiates an errorful single payment singlePayInit-wrong-format-psu-ip-address.json using the payment service payments and the payment product sepa-credit-transfers",
            "match": {
              "arguments": [
                {
                  "val": "singlePayInit-wrong-format-psu-ip-address.json",
                  "offset": 41
                },
                {
                  "val": "payments",
                  "offset": 114
                },
                {
                  "val": "sepa-credit-transfers",
                  "offset": 147
                }
              ],
              "location": "SinglePaymentErrorfulSteps.loadTestData(String,String,String)"
            },
            "matchedColumns": [
              0,
              1,
              2
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 17191549,
              "status": "passed"
            },
            "line": 11,
            "name": "PSU sends the single payment initiating request with error",
            "match": {
              "location": "SinglePaymentErrorfulSteps.sendPaymentInitiatingRequestWithError()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 417353,
              "status": "passed"
            },
            "line": 12,
            "name": "an error response code and the appropriate error response are received",
            "match": {
              "location": "GlobalErrorfulSteps.checkErrorCodeAndResponse()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 57,
            "value": "#            | periodic-payments | sepa-credit-transfers | recPayInit-incorrect-syntax.json            |"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 19117187,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 58,
        "name": "Failed payment initiation request for recurring payments (redirect)",
        "description": "",
        "id": "payment-initiation-service---common;failed-payment-initiation-request-for-recurring-payments-(redirect);;2",
        "after": [
          {
            "result": {
              "duration": 391636,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 21963277,
              "status": "passed"
            },
            "line": 52,
            "name": "PSU loads an errorful recurring payment recPayInit-incorrect-payment-product.json using the payment service periodic-payments and the payment product sepa-credit-trans",
            "match": {
              "arguments": [
                {
                  "val": "recPayInit-incorrect-payment-product.json",
                  "offset": 40
                },
                {
                  "val": "periodic-payments",
                  "offset": 108
                },
                {
                  "val": "sepa-credit-trans",
                  "offset": 150
                }
              ],
              "location": "PeriodicPaymentErrorfulSteps.loadTestDataForErrorfulPeriodicPayment(String,String,String)"
            },
            "matchedColumns": [
              0,
              1,
              2
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 17833180,
              "status": "passed"
            },
            "line": 53,
            "name": "PSU sends the recurring payment initiating request with error",
            "match": {
              "location": "PeriodicPaymentErrorfulSteps.sendFalsePeriodicPaymentInitiatingRequest()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 478602,
              "status": "passed"
            },
            "line": 54,
            "name": "an error response code and the appropriate error response are received",
            "match": {
              "location": "GlobalErrorfulSteps.checkErrorCodeAndResponse()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 16011328,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 59,
        "name": "Failed payment initiation request for recurring payments (redirect)",
        "description": "",
        "id": "payment-initiation-service---common;failed-payment-initiation-request-for-recurring-payments-(redirect);;3",
        "after": [
          {
            "result": {
              "duration": 396269,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2626960,
              "status": "passed"
            },
            "line": 52,
            "name": "PSU loads an errorful recurring payment recPayInit-no-frequency.json using the payment service periodic-payments and the payment product sepa-credit-transfers",
            "match": {
              "arguments": [
                {
                  "val": "recPayInit-no-frequency.json",
                  "offset": 40
                },
                {
                  "val": "periodic-payments",
                  "offset": 95
                },
                {
                  "val": "sepa-credit-transfers",
                  "offset": 137
                }
              ],
              "location": "PeriodicPaymentErrorfulSteps.loadTestDataForErrorfulPeriodicPayment(String,String,String)"
            },
            "matchedColumns": [
              0,
              1,
              2
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 19982383,
              "status": "passed"
            },
            "line": 53,
            "name": "PSU sends the recurring payment initiating request with error",
            "match": {
              "location": "PeriodicPaymentErrorfulSteps.sendFalsePeriodicPaymentInitiatingRequest()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 340759,
              "status": "passed"
            },
            "line": 54,
            "name": "an error response code and the appropriate error response are received",
            "match": {
              "location": "GlobalErrorfulSteps.checkErrorCodeAndResponse()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 18640001,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 60,
        "name": "Failed payment initiation request for recurring payments (redirect)",
        "description": "",
        "id": "payment-initiation-service---common;failed-payment-initiation-request-for-recurring-payments-(redirect);;4",
        "after": [
          {
            "result": {
              "duration": 173502,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2965048,
              "status": "passed"
            },
            "line": 52,
            "name": "PSU loads an errorful recurring payment recPayInit-not-defined-frequency.json using the payment service periodic-payments and the payment product sepa-credit-transfers",
            "match": {
              "arguments": [
                {
                  "val": "recPayInit-not-defined-frequency.json",
                  "offset": 40
                },
                {
                  "val": "periodic-payments",
                  "offset": 104
                },
                {
                  "val": "sepa-credit-transfers",
                  "offset": 146
                }
              ],
              "location": "PeriodicPaymentErrorfulSteps.loadTestDataForErrorfulPeriodicPayment(String,String,String)"
            },
            "matchedColumns": [
              0,
              1,
              2
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 17897975,
              "status": "passed"
            },
            "line": 53,
            "name": "PSU sends the recurring payment initiating request with error",
            "match": {
              "location": "PeriodicPaymentErrorfulSteps.sendFalsePeriodicPaymentInitiatingRequest()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 256728,
              "status": "passed"
            },
            "line": 54,
            "name": "an error response code and the appropriate error response are received",
            "match": {
              "location": "GlobalErrorfulSteps.checkErrorCodeAndResponse()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 13515035,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 61,
        "name": "Failed payment initiation request for recurring payments (redirect)",
        "description": "",
        "id": "payment-initiation-service---common;failed-payment-initiation-request-for-recurring-payments-(redirect);;5",
        "after": [
          {
            "result": {
              "duration": 752942,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1184858,
              "status": "passed"
            },
            "line": 52,
            "name": "PSU loads an errorful recurring payment recPayInit-no-request-id.json using the payment service periodic-payments and the payment product sepa-credit-transfers",
            "match": {
              "arguments": [
                {
                  "val": "recPayInit-no-request-id.json",
                  "offset": 40
                },
                {
                  "val": "periodic-payments",
                  "offset": 96
                },
                {
                  "val": "sepa-credit-transfers",
                  "offset": 138
                }
              ],
              "location": "PeriodicPaymentErrorfulSteps.loadTestDataForErrorfulPeriodicPayment(String,String,String)"
            },
            "matchedColumns": [
              0,
              1,
              2
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12466842,
              "status": "passed"
            },
            "line": 53,
            "name": "PSU sends the recurring payment initiating request with error",
            "match": {
              "location": "PeriodicPaymentErrorfulSteps.sendFalsePeriodicPaymentInitiatingRequest()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 463198,
              "status": "passed"
            },
            "line": 54,
            "name": "an error response code and the appropriate error response are received",
            "match": {
              "location": "GlobalErrorfulSteps.checkErrorCodeAndResponse()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 14361973,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 62,
        "name": "Failed payment initiation request for recurring payments (redirect)",
        "description": "",
        "id": "payment-initiation-service---common;failed-payment-initiation-request-for-recurring-payments-(redirect);;6",
        "after": [
          {
            "result": {
              "duration": 237308,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1499811,
              "status": "passed"
            },
            "line": 52,
            "name": "PSU loads an errorful recurring payment recPayInit-no-ip-address.json using the payment service periodic-payments and the payment product sepa-credit-transfers",
            "match": {
              "arguments": [
                {
                  "val": "recPayInit-no-ip-address.json",
                  "offset": 40
                },
                {
                  "val": "periodic-payments",
                  "offset": 96
                },
                {
                  "val": "sepa-credit-transfers",
                  "offset": 138
                }
              ],
              "location": "PeriodicPaymentErrorfulSteps.loadTestDataForErrorfulPeriodicPayment(String,String,String)"
            },
            "matchedColumns": [
              0,
              1,
              2
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 13383775,
              "status": "passed"
            },
            "line": 53,
            "name": "PSU sends the recurring payment initiating request with error",
            "match": {
              "location": "PeriodicPaymentErrorfulSteps.sendFalsePeriodicPaymentInitiatingRequest()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 286909,
              "status": "passed"
            },
            "line": 54,
            "name": "an error response code and the appropriate error response are received",
            "match": {
              "location": "GlobalErrorfulSteps.checkErrorCodeAndResponse()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 63,
            "value": "#            | periodic-payments | sepa-credit-transfers | recPayInit-wrong-format-request-id.json     |"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 17256937,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 64,
        "name": "Failed payment initiation request for recurring payments (redirect)",
        "description": "",
        "id": "payment-initiation-service---common;failed-payment-initiation-request-for-recurring-payments-(redirect);;7",
        "after": [
          {
            "result": {
              "duration": 386254,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1349130,
              "status": "passed"
            },
            "line": 52,
            "name": "PSU loads an errorful recurring payment recPayInit-wrong-format-psu-ip-address.json using the payment service periodic-payments and the payment product sepa-credit-transfers",
            "match": {
              "arguments": [
                {
                  "val": "recPayInit-wrong-format-psu-ip-address.json",
                  "offset": 40
                },
                {
                  "val": "periodic-payments",
                  "offset": 110
                },
                {
                  "val": "sepa-credit-transfers",
                  "offset": 152
                }
              ],
              "location": "PeriodicPaymentErrorfulSteps.loadTestDataForErrorfulPeriodicPayment(String,String,String)"
            },
            "matchedColumns": [
              0,
              1,
              2
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 14618952,
              "status": "passed"
            },
            "line": 53,
            "name": "PSU sends the recurring payment initiating request with error",
            "match": {
              "location": "PeriodicPaymentErrorfulSteps.sendFalsePeriodicPaymentInitiatingRequest()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 404369,
              "status": "passed"
            },
            "line": 54,
            "name": "an error response code and the appropriate error response are received",
            "match": {
              "location": "GlobalErrorfulSteps.checkErrorCodeAndResponse()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 17458955,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 81,
        "name": "Successful payment status request",
        "description": "",
        "id": "payment-initiation-service---common;successful-payment-status-request;;2",
        "after": [
          {
            "result": {
              "duration": 116518,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2428424043,
              "status": "passed"
            },
            "line": 75,
            "name": "PSU sends the single payment initiation request and receives the paymentId",
            "match": {
              "location": "GlobalSuccessfulSteps.sendSinglePaymentInitiationRequestAndStoreId()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 6898075,
              "status": "passed"
            },
            "line": 76,
            "name": "PSU wants to request the payment status by using a set of data paymentStatus-RCVD-successful.json",
            "match": {
              "arguments": [
                {
                  "val": "paymentStatus-RCVD-successful.json",
                  "offset": 63
                }
              ],
              "location": "PaymentStatusSuccessfulSteps.loadPaymentStatusTestData(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2468139113,
              "status": "passed"
            },
            "line": 77,
            "name": "PSU requests the status of the payment",
            "match": {
              "location": "PaymentStatusSuccessfulSteps.sendPaymentStatusRequest()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 84737,
              "status": "passed"
            },
            "line": 78,
            "name": "a successful response code and the correct payment status is delivered to the PSU",
            "match": {
              "location": "PaymentStatusSuccessfulSteps.checkResponseCodeAndPaymentStatus()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 91,
            "value": "#            |paymentStatus-not-existing-paymentId.json  | payments               |"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 12529489,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 92,
        "name": "Failed payment status request",
        "description": "",
        "id": "payment-initiation-service---common;failed-payment-status-request;;2",
        "after": [
          {
            "result": {
              "duration": 159546,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2359994762,
              "status": "passed"
            },
            "line": 85,
            "name": "PSU sends the single payment initiation request and receives the paymentId",
            "match": {
              "location": "GlobalSuccessfulSteps.sendSinglePaymentInitiationRequestAndStoreId()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 5077230,
              "status": "passed"
            },
            "line": 86,
            "name": "PSU prepares the errorful payment status request data paymentStatus-no-request-id.json with the payment service payments",
            "match": {
              "arguments": [
                {
                  "val": "paymentStatus-no-request-id.json",
                  "offset": 54
                },
                {
                  "val": "payments",
                  "offset": 112
                }
              ],
              "location": "PaymentStatusErrorfulSteps.loadErrorfulPaymentStatusTestData(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9331529,
              "status": "passed"
            },
            "line": 87,
            "name": "PSU requests the status of the payment with error",
            "match": {
              "location": "PaymentStatusErrorfulSteps.sendPaymentStatusRequestWithoutExistingPaymentId()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 373551,
              "status": "passed"
            },
            "line": 88,
            "name": "an error response code and the appropriate error response are received",
            "match": {
              "location": "GlobalErrorfulSteps.checkErrorCodeAndResponse()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 16043062,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 109,
        "name": "Successful Single Payment Information Request",
        "description": "",
        "id": "payment-initiation-service---common;successful-single-payment-information-request;;2",
        "after": [
          {
            "result": {
              "duration": 111515,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2267397425,
              "status": "passed"
            },
            "line": 103,
            "name": "PSU sends the single payment initiation request and receives the paymentId",
            "match": {
              "location": "GlobalSuccessfulSteps.sendSinglePaymentInitiationRequestAndStoreId()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 8070715,
              "status": "passed"
            },
            "line": 104,
            "name": "PSU wants to request the payment information by using a set of data singlePayInformation-successful.json",
            "match": {
              "arguments": [
                {
                  "val": "singlePayInformation-successful.json",
                  "offset": 68
                }
              ],
              "location": "PaymentInformationSuccessfulSteps.loadPaymentInformationTestData(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2232509083,
              "status": "passed"
            },
            "line": 105,
            "name": "PSU requests the information of the payment",
            "match": {
              "location": "PaymentInformationSuccessfulSteps.sendPaymentInformationRequest()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 105370,
              "status": "passed"
            },
            "line": 106,
            "name": "a successful response code and the payment information is delivered to the PSU",
            "match": {
              "location": "PaymentInformationSuccessfulSteps.checkResponseCodeAndPaymentInformation()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 119,
            "value": "#           | singlePayInformation-not-existing-paymentId.json  | payments                    |"
          },
          {
            "line": 120,
            "value": "#           | singlePayInformation-wrong-format-request-id.json | payments                    |"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 10803537,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 121,
        "name": "Failed Payment Information Request",
        "description": "",
        "id": "payment-initiation-service---common;failed-payment-information-request;;2",
        "after": [
          {
            "result": {
              "duration": 113911,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2186691923,
              "status": "passed"
            },
            "line": 113,
            "name": "PSU sends the single payment initiation request and receives the paymentId",
            "match": {
              "location": "GlobalSuccessfulSteps.sendSinglePaymentInitiationRequestAndStoreId()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 3385317,
              "status": "passed"
            },
            "line": 114,
            "name": "PSU prepares the errorful payment information request data singlePayInformation-no-request-id.json with the payment service payments",
            "match": {
              "arguments": [
                {
                  "val": "singlePayInformation-no-request-id.json",
                  "offset": 59
                },
                {
                  "val": "payments",
                  "offset": 124
                }
              ],
              "location": "SinglePaymentInformationErrorfulSteps.loadErrorfulPaymentInformationTestData(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7976325,
              "status": "passed"
            },
            "line": 115,
            "name": "PSU requests the information of the payment with error",
            "match": {
              "location": "SinglePaymentInformationErrorfulSteps.sendPaymentInformationRequestWithError()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 195789,
              "status": "passed"
            },
            "line": 116,
            "name": "an error response code and the appropriate error response are received",
            "match": {
              "location": "GlobalErrorfulSteps.checkErrorCodeAndResponse()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 148,
            "value": "#            | paymentCancellation-not-existing-paymentId.json  | payments                    |"
          },
          {
            "line": 149,
            "value": "#            | paymentCancellation-wrong-format-request-id.json | payments                    |"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 10980692,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 150,
        "name": "Failed payment cancellation request",
        "description": "",
        "id": "payment-initiation-service---common;failed-payment-cancellation-request;;2",
        "after": [
          {
            "result": {
              "duration": 115491,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2212096897,
              "status": "passed"
            },
            "line": 142,
            "name": "PSU sends the single payment initiation request and receives the paymentId",
            "match": {
              "location": "GlobalSuccessfulSteps.sendSinglePaymentInitiationRequestAndStoreId()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 3195429,
              "status": "passed"
            },
            "line": 143,
            "name": "PSU prepares the errorful cancellation request data paymentCancellation-no-request-id.json with the payment service payments",
            "match": {
              "arguments": [
                {
                  "val": "paymentCancellation-no-request-id.json",
                  "offset": 52
                },
                {
                  "val": "payments",
                  "offset": 116
                }
              ],
              "location": "PaymentCancellationErrorfulSteps.loadErrorfulPaymentCancellationTestData(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8455455,
              "status": "passed"
            },
            "line": 144,
            "name": "PSU initiates the cancellation of the payment with error",
            "match": {
              "location": "PaymentCancellationErrorfulSteps.sendPaymentCancellationRequestWithError()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 292883,
              "status": "passed"
            },
            "line": 145,
            "name": "an error response code and the appropriate error response are received",
            "match": {
              "location": "GlobalErrorfulSteps.checkErrorCodeAndResponse()"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Payment Initiation Service - Common",
    "description": "",
    "id": "payment-initiation-service---common",
    "keyword": "Feature",
    "uri": "PIS_Common.feature"
  },
  {
    "line": 1,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 14061395,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 15,
        "name": "Successful payment initiation request for single payments (embedded)",
        "description": "",
        "id": "payment-initiation-service---embedded-approach;successful-payment-initiation-request-for-single-payments-(embedded);;2",
        "after": [
          {
            "result": {
              "duration": 161139,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 528249,
              "status": "passed"
            },
            "line": 10,
            "name": "PSU wants to initiate a single payment singlePayInit-successful.json using the payment service payments and the payment product sepa-credit-transfers",
            "match": {
              "arguments": [
                {
                  "val": "singlePayInit-successful.json",
                  "offset": 39
                },
                {
                  "val": "payments",
                  "offset": 95
                },
                {
                  "val": "sepa-credit-transfers",
                  "offset": 128
                }
              ],
              "location": "GlobalSuccessfulSteps.loadTestData(String,String,String)"
            },
            "matchedColumns": [
              0,
              1,
              2
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2234024761,
              "status": "passed"
            },
            "line": 11,
            "name": "PSU sends the single payment initiating request",
            "match": {
              "location": "GlobalSuccessfulSteps.sendSinglePaymentInitiatingRequest()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3137533,
              "status": "passed"
            },
            "line": 12,
            "name": "a successful response code and the appropriate authentication URL is delivered to the PSU",
            "match": {
              "location": "PaymentInitiationEmbeddedSuccessfulSteps.checkResponseCodeAndAuthorisationLink()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 12012054,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 30,
        "name": "Successful start of authorisation (embedded)",
        "description": "",
        "id": "payment-initiation-service---embedded-approach;successful-start-of-authorisation-(embedded);;2",
        "after": [
          {
            "result": {
              "duration": 117226,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2199540904,
              "status": "passed"
            },
            "line": 24,
            "name": "PSU sends the single payment initiation request and receives the paymentId",
            "match": {
              "location": "GlobalSuccessfulSteps.sendSinglePaymentInitiationRequestAndStoreId()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 7273075,
              "status": "passed"
            },
            "line": 25,
            "name": "PSU wants to start the authorisation using the authorisation data startAuth-successful.json",
            "match": {
              "arguments": [
                {
                  "val": "startAuth-successful.json",
                  "offset": 66
                }
              ],
              "location": "StartAuthorisationSuccessfulSteps.loadAuthorisationData(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 223124347,
              "status": "passed"
            },
            "line": 26,
            "name": "PSU sends the start authorisation request",
            "match": {
              "location": "StartAuthorisationSuccessfulSteps.sendAuthorisationRequest()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 117828,
              "status": "passed"
            },
            "line": 27,
            "name": "PSU checks if a link is received and the SCA status is correct",
            "match": {
              "location": "StartAuthorisationSuccessfulSteps.checkLinkAndScaStatusEmbedded()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 40,
            "value": "#            | payments                  | startAuth-not-existing-paymentId.json  |"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 10825729,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 41,
        "name": "Failed start of authorisation (embedded)",
        "description": "",
        "id": "payment-initiation-service---embedded-approach;failed-start-of-authorisation-(embedded);;2",
        "after": [
          {
            "result": {
              "duration": 129651,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2212587873,
              "status": "passed"
            },
            "line": 34,
            "name": "PSU sends the single payment initiation request and receives the paymentId",
            "match": {
              "location": "GlobalSuccessfulSteps.sendSinglePaymentInitiationRequestAndStoreId()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1046606,
              "status": "passed"
            },
            "line": 35,
            "name": "PSU prepares the errorful data startAuth-no-request-id.json with the payment service payments",
            "match": {
              "arguments": [
                {
                  "val": "startAuth-no-request-id.json",
                  "offset": 31
                },
                {
                  "val": "payments",
                  "offset": 85
                }
              ],
              "location": "GlobalErrorfulSteps.loadErrorfulDataEmbedded(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12821011,
              "status": "passed"
            },
            "line": 36,
            "name": "PSU sends the errorful start authorisation request",
            "match": {
              "location": "StartAuthorisationErrorfulSteps.sendErrorfulAuthorisationRequest()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 71100,
              "status": "passed"
            },
            "line": 37,
            "name": "an error response code and the appropriate error response are received",
            "match": {
              "location": "GlobalErrorfulSteps.checkErrorCodeAndResponse()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 13806711,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 60,
        "name": "Successful update of identification data (embedded)",
        "description": "",
        "id": "payment-initiation-service---embedded-approach;successful-update-of-identification-data-(embedded);;2",
        "after": [
          {
            "result": {
              "duration": 122384,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2344950414,
              "status": "passed"
            },
            "line": 53,
            "name": "PSU sends the single payment initiation request and receives the paymentId",
            "match": {
              "location": "GlobalSuccessfulSteps.sendSinglePaymentInitiationRequestAndStoreId()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 222082442,
              "status": "passed"
            },
            "line": 54,
            "name": "PSU sends the start authorisation request and receives the authorisationId",
            "match": {
              "location": "GlobalSuccessfulSteps.startAuthorisationAndStoreId()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10798286,
              "status": "passed"
            },
            "line": 55,
            "name": "PSU wants to update the resource with his identification data updateIdentificationNoSca-successful.json",
            "match": {
              "arguments": [
                {
                  "val": "updateIdentificationNoSca-successful.json",
                  "offset": 62
                }
              ],
              "location": "UpdateAuthorisationWithIdentificationSuccessfulSteps.loadIdentificationData(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3620420293,
              "status": "passed"
            },
            "line": 56,
            "name": "PSU sends the update identification data request",
            "match": {
              "location": "UpdateAuthorisationWithIdentificationSuccessfulSteps.sendUpdateAuthorisationWithIdentificationRequest()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 86684,
              "status": "passed"
            },
            "line": 57,
            "name": "PSU checks if the correct SCA status and response code is received",
            "match": {
              "location": "UpdateAuthorisationWithIdentificationSuccessfulSteps.checkScaStatusAndResponseCode()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 61,
            "value": "#            | updateIdentificationOneSca-successful.json       |"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 12923936,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 62,
        "name": "Successful update of identification data (embedded)",
        "description": "",
        "id": "payment-initiation-service---embedded-approach;successful-update-of-identification-data-(embedded);;3",
        "after": [
          {
            "result": {
              "duration": 119083,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2208210046,
              "status": "passed"
            },
            "line": 53,
            "name": "PSU sends the single payment initiation request and receives the paymentId",
            "match": {
              "location": "GlobalSuccessfulSteps.sendSinglePaymentInitiationRequestAndStoreId()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 225459240,
              "status": "passed"
            },
            "line": 54,
            "name": "PSU sends the start authorisation request and receives the authorisationId",
            "match": {
              "location": "GlobalSuccessfulSteps.startAuthorisationAndStoreId()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1386715,
              "status": "passed"
            },
            "line": 55,
            "name": "PSU wants to update the resource with his identification data updateIdentificationMultipleSca-successful.json",
            "match": {
              "arguments": [
                {
                  "val": "updateIdentificationMultipleSca-successful.json",
                  "offset": 62
                }
              ],
              "location": "UpdateAuthorisationWithIdentificationSuccessfulSteps.loadIdentificationData(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1136336557,
              "error_message": "org.springframework.web.client.HttpServerErrorException: 500 null\n\tat org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:89)\n\tat org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:708)\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:661)\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:621)\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:539)\n\tat de.adorsys.aspsp.xs2a.integtest.stepdefinitions.TestService.sendRestCall(TestService.java:55)\n\tat de.adorsys.aspsp.xs2a.integtest.stepdefinitions.pis.embedded.UpdateAuthorisationWithIdentificationSuccessfulSteps.sendUpdateAuthorisationWithIdentificationRequest(UpdateAuthorisationWithIdentificationSuccessfulSteps.java:63)\n\tat ✽.When PSU sends the update identification data request(PIS_Embedded.feature:56)\n",
              "status": "failed"
            },
            "line": 56,
            "name": "PSU sends the update identification data request",
            "match": {
              "location": "UpdateAuthorisationWithIdentificationSuccessfulSteps.sendUpdateAuthorisationWithIdentificationRequest()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 57,
            "name": "PSU checks if the correct SCA status and response code is received",
            "match": {
              "location": "UpdateAuthorisationWithIdentificationSuccessfulSteps.checkScaStatusAndResponseCode()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 12406924,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 73,
        "name": "Errorful update of identification data (embedded)",
        "description": "",
        "id": "payment-initiation-service---embedded-approach;errorful-update-of-identification-data-(embedded);;2",
        "after": [
          {
            "result": {
              "duration": 229853,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2198725978,
              "status": "passed"
            },
            "line": 66,
            "name": "PSU sends the single payment initiation request and receives the paymentId",
            "match": {
              "location": "GlobalSuccessfulSteps.sendSinglePaymentInitiationRequestAndStoreId()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 224550111,
              "status": "passed"
            },
            "line": 67,
            "name": "PSU sends the start authorisation request and receives the authorisationId",
            "match": {
              "location": "GlobalSuccessfulSteps.startAuthorisationAndStoreId()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 802301,
              "status": "passed"
            },
            "line": 68,
            "name": "PSU prepares the errorful data updateIdentification-no-request-id.json with the payment service payments",
            "match": {
              "arguments": [
                {
                  "val": "updateIdentification-no-request-id.json",
                  "offset": 31
                },
                {
                  "val": "payments",
                  "offset": 96
                }
              ],
              "location": "GlobalErrorfulSteps.loadErrorfulDataEmbedded(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8194071,
              "status": "passed"
            },
            "line": 69,
            "name": "PSU sends the errorful update authorisation data request",
            "match": {
              "location": "GlobalErrorfulSteps.sendErrorfulUpdateAuthorisationRequest()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 145253,
              "status": "passed"
            },
            "line": 70,
            "name": "an error response code and the appropriate error response are received",
            "match": {
              "location": "GlobalErrorfulSteps.checkErrorCodeAndResponse()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 108,
            "value": "#             | payments           | selectAuth-not-existing-paymentId.json   |"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 21561545,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 109,
        "name": "Errorful selection of PSU sca method (embedded)",
        "description": "",
        "id": "payment-initiation-service---embedded-approach;errorful-selection-of-psu-sca-method-(embedded);;2",
        "after": [
          {
            "result": {
              "duration": 145870,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2228831597,
              "status": "passed"
            },
            "line": 100,
            "name": "PSU sends the single payment initiation request and receives the paymentId",
            "match": {
              "location": "GlobalSuccessfulSteps.sendSinglePaymentInitiationRequestAndStoreId()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 217323316,
              "status": "passed"
            },
            "line": 101,
            "name": "PSU sends the start authorisation request and receives the authorisationId",
            "match": {
              "location": "GlobalSuccessfulSteps.startAuthorisationAndStoreId()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3491137032,
              "status": "passed"
            },
            "line": 102,
            "name": "PSU updates his identification data",
            "match": {
              "location": "GlobalSuccessfulSteps.updatePsuIdentification()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1050843,
              "status": "passed"
            },
            "line": 103,
            "name": "PSU prepares the errorful data selectAuth-no-request-id.json with the payment service payments",
            "match": {
              "arguments": [
                {
                  "val": "selectAuth-no-request-id.json",
                  "offset": 31
                },
                {
                  "val": "payments",
                  "offset": 86
                }
              ],
              "location": "GlobalErrorfulSteps.loadErrorfulDataEmbedded(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6614507,
              "status": "passed"
            },
            "line": 104,
            "name": "PSU sends the errorful update authorisation data request",
            "match": {
              "location": "GlobalErrorfulSteps.sendErrorfulUpdateAuthorisationRequest()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 330705,
              "status": "passed"
            },
            "line": 105,
            "name": "an error response code and the appropriate error response are received",
            "match": {
              "location": "GlobalErrorfulSteps.checkErrorCodeAndResponse()"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Payment Initiation Service - Embedded approach",
    "description": "",
    "id": "payment-initiation-service---embedded-approach",
    "keyword": "Feature",
    "uri": "PIS_Embedded.feature"
  },
  {
    "line": 1,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 15705086,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 16,
        "name": "Successful payment initiation request for single payments (redirect)",
        "description": "",
        "id": "payment-initiation-service---redirect-approach;successful-payment-initiation-request-for-single-payments-(redirect);;2",
        "after": [
          {
            "result": {
              "duration": 144424,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 490123,
              "status": "passed"
            },
            "line": 10,
            "name": "PSU wants to initiate a single payment singlePayInit-successful.json using the payment service payments and the payment product sepa-credit-transfers",
            "match": {
              "arguments": [
                {
                  "val": "singlePayInit-successful.json",
                  "offset": 39
                },
                {
                  "val": "payments",
                  "offset": 95
                },
                {
                  "val": "sepa-credit-transfers",
                  "offset": 128
                }
              ],
              "location": "GlobalSuccessfulSteps.loadTestData(String,String,String)"
            },
            "matchedColumns": [
              0,
              1,
              2
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2178454307,
              "status": "passed"
            },
            "line": 11,
            "name": "PSU sends the single payment initiating request",
            "match": {
              "location": "GlobalSuccessfulSteps.sendSinglePaymentInitiatingRequest()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 61896,
              "status": "passed"
            },
            "line": 12,
            "name": "a successful response code and the appropriate payment response data are received",
            "match": {
              "location": "GlobalSuccessfulSteps.checkResponseCode()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 20717,
              "status": "passed"
            },
            "line": 13,
            "name": "a redirect URL is delivered to the PSU",
            "match": {
              "location": "GlobalSuccessfulSteps.checkRedirectUrl()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 11359849,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 17,
        "name": "Successful payment initiation request for single payments (redirect)",
        "description": "",
        "id": "payment-initiation-service---redirect-approach;successful-payment-initiation-request-for-single-payments-(redirect);;3",
        "after": [
          {
            "result": {
              "duration": 104238,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 870683,
              "status": "passed"
            },
            "line": 10,
            "name": "PSU wants to initiate a single payment singlePayInit-exceeding-amount.json using the payment service payments and the payment product sepa-credit-transfers",
            "match": {
              "arguments": [
                {
                  "val": "singlePayInit-exceeding-amount.json",
                  "offset": 39
                },
                {
                  "val": "payments",
                  "offset": 101
                },
                {
                  "val": "sepa-credit-transfers",
                  "offset": 134
                }
              ],
              "location": "GlobalSuccessfulSteps.loadTestData(String,String,String)"
            },
            "matchedColumns": [
              0,
              1,
              2
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2132809685,
              "status": "passed"
            },
            "line": 11,
            "name": "PSU sends the single payment initiating request",
            "match": {
              "location": "GlobalSuccessfulSteps.sendSinglePaymentInitiatingRequest()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 41933,
              "status": "passed"
            },
            "line": 12,
            "name": "a successful response code and the appropriate payment response data are received",
            "match": {
              "location": "GlobalSuccessfulSteps.checkResponseCode()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 19303,
              "status": "passed"
            },
            "line": 13,
            "name": "a redirect URL is delivered to the PSU",
            "match": {
              "location": "GlobalSuccessfulSteps.checkRedirectUrl()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 11113239,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 50,
        "name": "Payment initiation request for recurring payments (redirect)",
        "description": "",
        "id": "payment-initiation-service---redirect-approach;payment-initiation-request-for-recurring-payments-(redirect);;2",
        "after": [
          {
            "result": {
              "duration": 104104,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 5580127,
              "status": "passed"
            },
            "line": 44,
            "name": "PSU wants to initiate a recurring payment recPayInit-successful.json using the payment service periodic-payments and the payment product sepa-credit-transfers",
            "match": {
              "arguments": [
                {
                  "val": "recPayInit-successful.json",
                  "offset": 42
                },
                {
                  "val": "periodic-payments",
                  "offset": 95
                },
                {
                  "val": "sepa-credit-transfers",
                  "offset": 137
                }
              ],
              "location": "PeriodicPaymentSuccessfulSteps.loadTestDataForSuccessfulPeriodicPayment(String,String,String)"
            },
            "matchedColumns": [
              0,
              1,
              2
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2147801733,
              "status": "passed"
            },
            "line": 45,
            "name": "PSU sends the recurring payment initiating request",
            "match": {
              "location": "PeriodicPaymentSuccessfulSteps.sendSuccessfulPeriodicPaymentInitiatingRequest()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 45745,
              "status": "passed"
            },
            "line": 46,
            "name": "a successful response code and the appropriate payment response data are received",
            "match": {
              "location": "GlobalSuccessfulSteps.checkResponseCode()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 18012,
              "status": "passed"
            },
            "line": 47,
            "name": "a redirect URL is delivered to the PSU",
            "match": {
              "location": "GlobalSuccessfulSteps.checkRedirectUrl()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 12003130,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 51,
        "name": "Payment initiation request for recurring payments (redirect)",
        "description": "",
        "id": "payment-initiation-service---redirect-approach;payment-initiation-request-for-recurring-payments-(redirect);;3",
        "after": [
          {
            "result": {
              "duration": 104318,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1079337,
              "status": "passed"
            },
            "line": 44,
            "name": "PSU wants to initiate a recurring payment recPayInit-exceeding-amount.json using the payment service periodic-payments and the payment product sepa-credit-transfers",
            "match": {
              "arguments": [
                {
                  "val": "recPayInit-exceeding-amount.json",
                  "offset": 42
                },
                {
                  "val": "periodic-payments",
                  "offset": 101
                },
                {
                  "val": "sepa-credit-transfers",
                  "offset": 143
                }
              ],
              "location": "PeriodicPaymentSuccessfulSteps.loadTestDataForSuccessfulPeriodicPayment(String,String,String)"
            },
            "matchedColumns": [
              0,
              1,
              2
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2139791818,
              "status": "passed"
            },
            "line": 45,
            "name": "PSU sends the recurring payment initiating request",
            "match": {
              "location": "PeriodicPaymentSuccessfulSteps.sendSuccessfulPeriodicPaymentInitiatingRequest()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 38661,
              "status": "passed"
            },
            "line": 46,
            "name": "a successful response code and the appropriate payment response data are received",
            "match": {
              "location": "GlobalSuccessfulSteps.checkResponseCode()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 16496,
              "status": "passed"
            },
            "line": 47,
            "name": "a redirect URL is delivered to the PSU",
            "match": {
              "location": "GlobalSuccessfulSteps.checkRedirectUrl()"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Payment Initiation Service - Redirect approach",
    "description": "",
    "id": "payment-initiation-service---redirect-approach",
    "keyword": "Feature",
    "uri": "PIS_Redirect.feature"
  }
]