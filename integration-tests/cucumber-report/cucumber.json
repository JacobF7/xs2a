[
  {
    "line": 1,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 271105898,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 15,
        "name": "Successful consent request creation (redirect)",
        "description": "",
        "id": "account-information-service;successful-consent-request-creation-(redirect);;2",
        "after": [
          {
            "result": {
              "duration": 209797,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 340985882,
              "status": "passed"
            },
            "line": 10,
            "name": "PSU wants to create a consent consent-dedicated-successful.json",
            "match": {
              "arguments": [
                {
                  "val": "consent-dedicated-successful.json",
                  "offset": 30
                }
              ],
              "location": "ConsentRequestSuccessfulSteps.loadTestData(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 3136815386,
              "status": "passed"
            },
            "line": 11,
            "name": "PSU sends the create consent request",
            "match": {
              "location": "ConsentRequestSuccessfulSteps.sendConsentRequest()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3050732,
              "status": "passed"
            },
            "line": 12,
            "name": "a successful response code and the appropriate consent response data is delivered to the PSU",
            "match": {
              "location": "ConsentRequestSuccessfulSteps.checkResponseCode()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 16,
            "value": "#            | consent-all-psd2-accounts-successful.json  |"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 24187522,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 17,
        "name": "Successful consent request creation (redirect)",
        "description": "",
        "id": "account-information-service;successful-consent-request-creation-(redirect);;3",
        "after": [
          {
            "result": {
              "duration": 244764,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1251272,
              "status": "passed"
            },
            "line": 10,
            "name": "PSU wants to create a consent consent-all-accounts-successful.json",
            "match": {
              "arguments": [
                {
                  "val": "consent-all-accounts-successful.json",
                  "offset": 30
                }
              ],
              "location": "ConsentRequestSuccessfulSteps.loadTestData(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1572771652,
              "status": "passed"
            },
            "line": 11,
            "name": "PSU sends the create consent request",
            "match": {
              "location": "ConsentRequestSuccessfulSteps.sendConsentRequest()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 89072,
              "status": "passed"
            },
            "line": 12,
            "name": "a successful response code and the appropriate consent response data is delivered to the PSU",
            "match": {
              "location": "ConsentRequestSuccessfulSteps.checkResponseCode()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 25,
            "value": "#| consent-all-psd2-no-psu-id.json       |"
          },
          {
            "line": 26,
            "value": "#| consent-all-psd2-wrong-psu-id.json    |"
          },
          {
            "line": 27,
            "value": "#| consent-all-psd2-wrong-value.json          |"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 20584260,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 28,
        "name": "Failed consent request creation (redirect)",
        "description": "",
        "id": "account-information-service;failed-consent-request-creation-(redirect);;2",
        "after": [
          {
            "result": {
              "duration": 195452,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 8032118,
              "status": "passed"
            },
            "line": 20,
            "name": "PSU wants to create an erroful consent consent-dedicated-incorrect-iban.json",
            "match": {
              "arguments": [
                {
                  "val": "consent-dedicated-incorrect-iban.json",
                  "offset": 39
                }
              ],
              "location": "ConsentRequestErrorfulSteps.loadTestData(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 40833856,
              "status": "passed"
            },
            "line": 21,
            "name": "PSU sends the create consent request with error",
            "match": {
              "location": "ConsentRequestErrorfulSteps.sendErrorfulConsentRequest()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3513104,
              "status": "passed"
            },
            "line": 22,
            "name": "an error response code is displayed and an appropriate error response is shown",
            "match": {
              "location": "CommonSteps.checkErrorCodeAndResponse()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 27295928,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 36,
        "name": "Expired consent request creation (redirect)",
        "description": "",
        "id": "account-information-service;expired-consent-request-creation-(redirect);;2",
        "after": [
          {
            "result": {
              "duration": 235073,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1834718,
              "status": "passed"
            },
            "line": 31,
            "name": "PSU wants to create an expired consent consent-dedicated-expired-consent.json",
            "match": {
              "arguments": [
                {
                  "val": "consent-dedicated-expired-consent.json",
                  "offset": 39
                }
              ],
              "location": "ConsentRequestErrorfulSteps.loadTestDataExpired(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 41734426,
              "status": "passed"
            },
            "line": 32,
            "name": "PSU sends the create consent request with error",
            "match": {
              "location": "ConsentRequestErrorfulSteps.sendErrorfulConsentRequest()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 235296,
              "status": "passed"
            },
            "line": 33,
            "name": "an error response code is displayed and an appropriate error response is shown",
            "match": {
              "location": "CommonSteps.checkErrorCodeAndResponse()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 18684953,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 45,
        "name": "Successful consent status request (redirect)",
        "description": "",
        "id": "account-information-service;successful-consent-status-request-(redirect);;2",
        "after": [
          {
            "result": {
              "duration": 212784,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1579560757,
              "status": "passed"
            },
            "line": 39,
            "name": "PSU created a consent resource consent-dedicated-successful.json",
            "match": {
              "arguments": [
                {
                  "val": "consent-dedicated-successful.json",
                  "offset": 31
                }
              ],
              "location": "ConsentStatusRequestSuccessfulSteps.loadTestData(String)"
            },
            "matchedColumns": [
              1
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 491365927,
              "status": "passed"
            },
            "line": 40,
            "name": "AISP wants to get the status consent-status-expired.json of that consent",
            "match": {
              "arguments": [
                {
                  "val": "consent-status-expired.json",
                  "offset": 29
                }
              ],
              "location": "ConsentStatusRequestSuccessfulSteps.updateConsentStatus(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 504445578,
              "status": "passed"
            },
            "line": 41,
            "name": "AISP requests consent status",
            "match": {
              "location": "ConsentStatusRequestSuccessfulSteps.getConsentStatus()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 56488,
              "status": "passed"
            },
            "line": 42,
            "name": "a successful response code and the appropriate consent status gets returned",
            "match": {
              "location": "ConsentStatusRequestSuccessfulSteps.checkResponseStatus()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 20354203,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 46,
        "name": "Successful consent status request (redirect)",
        "description": "",
        "id": "account-information-service;successful-consent-status-request-(redirect);;3",
        "after": [
          {
            "result": {
              "duration": 226250,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1512357220,
              "status": "passed"
            },
            "line": 39,
            "name": "PSU created a consent resource consent-dedicated-successful.json",
            "match": {
              "arguments": [
                {
                  "val": "consent-dedicated-successful.json",
                  "offset": 31
                }
              ],
              "location": "ConsentStatusRequestSuccessfulSteps.loadTestData(String)"
            },
            "matchedColumns": [
              1
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 218886519,
              "status": "passed"
            },
            "line": 40,
            "name": "AISP wants to get the status consent-status-received.json of that consent",
            "match": {
              "arguments": [
                {
                  "val": "consent-status-received.json",
                  "offset": 29
                }
              ],
              "location": "ConsentStatusRequestSuccessfulSteps.updateConsentStatus(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 427710579,
              "status": "passed"
            },
            "line": 41,
            "name": "AISP requests consent status",
            "match": {
              "location": "ConsentStatusRequestSuccessfulSteps.getConsentStatus()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 39653,
              "status": "passed"
            },
            "line": 42,
            "name": "a successful response code and the appropriate consent status gets returned",
            "match": {
              "location": "ConsentStatusRequestSuccessfulSteps.checkResponseStatus()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 16165729,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 47,
        "name": "Successful consent status request (redirect)",
        "description": "",
        "id": "account-information-service;successful-consent-status-request-(redirect);;4",
        "after": [
          {
            "result": {
              "duration": 348740,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1517664549,
              "status": "passed"
            },
            "line": 39,
            "name": "PSU created a consent resource consent-dedicated-successful.json",
            "match": {
              "arguments": [
                {
                  "val": "consent-dedicated-successful.json",
                  "offset": 31
                }
              ],
              "location": "ConsentStatusRequestSuccessfulSteps.loadTestData(String)"
            },
            "matchedColumns": [
              1
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 218516919,
              "status": "passed"
            },
            "line": 40,
            "name": "AISP wants to get the status consent-status-rejected.json of that consent",
            "match": {
              "arguments": [
                {
                  "val": "consent-status-rejected.json",
                  "offset": 29
                }
              ],
              "location": "ConsentStatusRequestSuccessfulSteps.updateConsentStatus(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 446650810,
              "status": "passed"
            },
            "line": 41,
            "name": "AISP requests consent status",
            "match": {
              "location": "ConsentStatusRequestSuccessfulSteps.getConsentStatus()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 52493,
              "status": "passed"
            },
            "line": 42,
            "name": "a successful response code and the appropriate consent status gets returned",
            "match": {
              "location": "ConsentStatusRequestSuccessfulSteps.checkResponseStatus()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 16639127,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 48,
        "name": "Successful consent status request (redirect)",
        "description": "",
        "id": "account-information-service;successful-consent-status-request-(redirect);;5",
        "after": [
          {
            "result": {
              "duration": 217366,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1507934407,
              "status": "passed"
            },
            "line": 39,
            "name": "PSU created a consent resource consent-dedicated-successful.json",
            "match": {
              "arguments": [
                {
                  "val": "consent-dedicated-successful.json",
                  "offset": 31
                }
              ],
              "location": "ConsentStatusRequestSuccessfulSteps.loadTestData(String)"
            },
            "matchedColumns": [
              1
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 206452168,
              "status": "passed"
            },
            "line": 40,
            "name": "AISP wants to get the status consent-status-revoked-by-psu.json of that consent",
            "match": {
              "arguments": [
                {
                  "val": "consent-status-revoked-by-psu.json",
                  "offset": 29
                }
              ],
              "location": "ConsentStatusRequestSuccessfulSteps.updateConsentStatus(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 442335833,
              "status": "passed"
            },
            "line": 41,
            "name": "AISP requests consent status",
            "match": {
              "location": "ConsentStatusRequestSuccessfulSteps.getConsentStatus()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 38433,
              "status": "passed"
            },
            "line": 42,
            "name": "a successful response code and the appropriate consent status gets returned",
            "match": {
              "location": "ConsentStatusRequestSuccessfulSteps.checkResponseStatus()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 15356462,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 49,
        "name": "Successful consent status request (redirect)",
        "description": "",
        "id": "account-information-service;successful-consent-status-request-(redirect);;6",
        "after": [
          {
            "result": {
              "duration": 201522,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1512785127,
              "status": "passed"
            },
            "line": 39,
            "name": "PSU created a consent resource consent-dedicated-successful.json",
            "match": {
              "arguments": [
                {
                  "val": "consent-dedicated-successful.json",
                  "offset": 31
                }
              ],
              "location": "ConsentStatusRequestSuccessfulSteps.loadTestData(String)"
            },
            "matchedColumns": [
              1
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 213565662,
              "status": "passed"
            },
            "line": 40,
            "name": "AISP wants to get the status consent-status-terminated-by-tpp.json of that consent",
            "match": {
              "arguments": [
                {
                  "val": "consent-status-terminated-by-tpp.json",
                  "offset": 29
                }
              ],
              "location": "ConsentStatusRequestSuccessfulSteps.updateConsentStatus(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 436939651,
              "status": "passed"
            },
            "line": 41,
            "name": "AISP requests consent status",
            "match": {
              "location": "ConsentStatusRequestSuccessfulSteps.getConsentStatus()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 40696,
              "status": "passed"
            },
            "line": 42,
            "name": "a successful response code and the appropriate consent status gets returned",
            "match": {
              "location": "ConsentStatusRequestSuccessfulSteps.checkResponseStatus()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 15613313,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 50,
        "name": "Successful consent status request (redirect)",
        "description": "",
        "id": "account-information-service;successful-consent-status-request-(redirect);;7",
        "after": [
          {
            "result": {
              "duration": 204072,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1469181170,
              "status": "passed"
            },
            "line": 39,
            "name": "PSU created a consent resource consent-dedicated-successful.json",
            "match": {
              "arguments": [
                {
                  "val": "consent-dedicated-successful.json",
                  "offset": 31
                }
              ],
              "location": "ConsentStatusRequestSuccessfulSteps.loadTestData(String)"
            },
            "matchedColumns": [
              1
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 210599200,
              "status": "passed"
            },
            "line": 40,
            "name": "AISP wants to get the status consent-status-valid.json of that consent",
            "match": {
              "arguments": [
                {
                  "val": "consent-status-valid.json",
                  "offset": 29
                }
              ],
              "location": "ConsentStatusRequestSuccessfulSteps.updateConsentStatus(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 424457276,
              "status": "passed"
            },
            "line": 41,
            "name": "AISP requests consent status",
            "match": {
              "location": "ConsentStatusRequestSuccessfulSteps.getConsentStatus()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 37707,
              "status": "passed"
            },
            "line": 42,
            "name": "a successful response code and the appropriate consent status gets returned",
            "match": {
              "location": "ConsentStatusRequestSuccessfulSteps.checkResponseStatus()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 15978094,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 51,
        "name": "Successful consent status request (redirect)",
        "description": "",
        "id": "account-information-service;successful-consent-status-request-(redirect);;8",
        "after": [
          {
            "result": {
              "duration": 200063,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1463667708,
              "status": "passed"
            },
            "line": 39,
            "name": "PSU created a consent resource consent-all-accounts-successful.json",
            "match": {
              "arguments": [
                {
                  "val": "consent-all-accounts-successful.json",
                  "offset": 31
                }
              ],
              "location": "ConsentStatusRequestSuccessfulSteps.loadTestData(String)"
            },
            "matchedColumns": [
              1
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 207662461,
              "status": "passed"
            },
            "line": 40,
            "name": "AISP wants to get the status consent-status-expired.json of that consent",
            "match": {
              "arguments": [
                {
                  "val": "consent-status-expired.json",
                  "offset": 29
                }
              ],
              "location": "ConsentStatusRequestSuccessfulSteps.updateConsentStatus(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 426870480,
              "status": "passed"
            },
            "line": 41,
            "name": "AISP requests consent status",
            "match": {
              "location": "ConsentStatusRequestSuccessfulSteps.getConsentStatus()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 36303,
              "status": "passed"
            },
            "line": 42,
            "name": "a successful response code and the appropriate consent status gets returned",
            "match": {
              "location": "ConsentStatusRequestSuccessfulSteps.checkResponseStatus()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 13550565,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 52,
        "name": "Successful consent status request (redirect)",
        "description": "",
        "id": "account-information-service;successful-consent-status-request-(redirect);;9",
        "after": [
          {
            "result": {
              "duration": 224639,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1471709060,
              "status": "passed"
            },
            "line": 39,
            "name": "PSU created a consent resource consent-all-accounts-successful.json",
            "match": {
              "arguments": [
                {
                  "val": "consent-all-accounts-successful.json",
                  "offset": 31
                }
              ],
              "location": "ConsentStatusRequestSuccessfulSteps.loadTestData(String)"
            },
            "matchedColumns": [
              1
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 204827044,
              "status": "passed"
            },
            "line": 40,
            "name": "AISP wants to get the status consent-status-received.json of that consent",
            "match": {
              "arguments": [
                {
                  "val": "consent-status-received.json",
                  "offset": 29
                }
              ],
              "location": "ConsentStatusRequestSuccessfulSteps.updateConsentStatus(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 425574577,
              "status": "passed"
            },
            "line": 41,
            "name": "AISP requests consent status",
            "match": {
              "location": "ConsentStatusRequestSuccessfulSteps.getConsentStatus()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 34466,
              "status": "passed"
            },
            "line": 42,
            "name": "a successful response code and the appropriate consent status gets returned",
            "match": {
              "location": "ConsentStatusRequestSuccessfulSteps.checkResponseStatus()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 13914706,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 53,
        "name": "Successful consent status request (redirect)",
        "description": "",
        "id": "account-information-service;successful-consent-status-request-(redirect);;10",
        "after": [
          {
            "result": {
              "duration": 178664,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1478561330,
              "status": "passed"
            },
            "line": 39,
            "name": "PSU created a consent resource consent-all-accounts-successful.json",
            "match": {
              "arguments": [
                {
                  "val": "consent-all-accounts-successful.json",
                  "offset": 31
                }
              ],
              "location": "ConsentStatusRequestSuccessfulSteps.loadTestData(String)"
            },
            "matchedColumns": [
              1
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 202406786,
              "status": "passed"
            },
            "line": 40,
            "name": "AISP wants to get the status consent-status-rejected.json of that consent",
            "match": {
              "arguments": [
                {
                  "val": "consent-status-rejected.json",
                  "offset": 29
                }
              ],
              "location": "ConsentStatusRequestSuccessfulSteps.updateConsentStatus(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 440720988,
              "status": "passed"
            },
            "line": 41,
            "name": "AISP requests consent status",
            "match": {
              "location": "ConsentStatusRequestSuccessfulSteps.getConsentStatus()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 37346,
              "status": "passed"
            },
            "line": 42,
            "name": "a successful response code and the appropriate consent status gets returned",
            "match": {
              "location": "ConsentStatusRequestSuccessfulSteps.checkResponseStatus()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 18205006,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 54,
        "name": "Successful consent status request (redirect)",
        "description": "",
        "id": "account-information-service;successful-consent-status-request-(redirect);;11",
        "after": [
          {
            "result": {
              "duration": 884298,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1488849935,
              "status": "passed"
            },
            "line": 39,
            "name": "PSU created a consent resource consent-all-accounts-successful.json",
            "match": {
              "arguments": [
                {
                  "val": "consent-all-accounts-successful.json",
                  "offset": 31
                }
              ],
              "location": "ConsentStatusRequestSuccessfulSteps.loadTestData(String)"
            },
            "matchedColumns": [
              1
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 202593085,
              "status": "passed"
            },
            "line": 40,
            "name": "AISP wants to get the status consent-status-revoked-by-psu.json of that consent",
            "match": {
              "arguments": [
                {
                  "val": "consent-status-revoked-by-psu.json",
                  "offset": 29
                }
              ],
              "location": "ConsentStatusRequestSuccessfulSteps.updateConsentStatus(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 417772556,
              "status": "passed"
            },
            "line": 41,
            "name": "AISP requests consent status",
            "match": {
              "location": "ConsentStatusRequestSuccessfulSteps.getConsentStatus()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 40341,
              "status": "passed"
            },
            "line": 42,
            "name": "a successful response code and the appropriate consent status gets returned",
            "match": {
              "location": "ConsentStatusRequestSuccessfulSteps.checkResponseStatus()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 17228290,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 55,
        "name": "Successful consent status request (redirect)",
        "description": "",
        "id": "account-information-service;successful-consent-status-request-(redirect);;12",
        "after": [
          {
            "result": {
              "duration": 205495,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2036300130,
              "status": "passed"
            },
            "line": 39,
            "name": "PSU created a consent resource consent-all-accounts-successful.json",
            "match": {
              "arguments": [
                {
                  "val": "consent-all-accounts-successful.json",
                  "offset": 31
                }
              ],
              "location": "ConsentStatusRequestSuccessfulSteps.loadTestData(String)"
            },
            "matchedColumns": [
              1
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 208132714,
              "status": "passed"
            },
            "line": 40,
            "name": "AISP wants to get the status consent-status-terminated-by-tpp.json of that consent",
            "match": {
              "arguments": [
                {
                  "val": "consent-status-terminated-by-tpp.json",
                  "offset": 29
                }
              ],
              "location": "ConsentStatusRequestSuccessfulSteps.updateConsentStatus(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 421722438,
              "status": "passed"
            },
            "line": 41,
            "name": "AISP requests consent status",
            "match": {
              "location": "ConsentStatusRequestSuccessfulSteps.getConsentStatus()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 40908,
              "status": "passed"
            },
            "line": 42,
            "name": "a successful response code and the appropriate consent status gets returned",
            "match": {
              "location": "ConsentStatusRequestSuccessfulSteps.checkResponseStatus()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 17964001,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 56,
        "name": "Successful consent status request (redirect)",
        "description": "",
        "id": "account-information-service;successful-consent-status-request-(redirect);;13",
        "after": [
          {
            "result": {
              "duration": 416367,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1460044015,
              "status": "passed"
            },
            "line": 39,
            "name": "PSU created a consent resource consent-all-accounts-successful.json",
            "match": {
              "arguments": [
                {
                  "val": "consent-all-accounts-successful.json",
                  "offset": 31
                }
              ],
              "location": "ConsentStatusRequestSuccessfulSteps.loadTestData(String)"
            },
            "matchedColumns": [
              1
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 204963834,
              "status": "passed"
            },
            "line": 40,
            "name": "AISP wants to get the status consent-status-valid.json of that consent",
            "match": {
              "arguments": [
                {
                  "val": "consent-status-valid.json",
                  "offset": 29
                }
              ],
              "location": "ConsentStatusRequestSuccessfulSteps.updateConsentStatus(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 420852341,
              "status": "passed"
            },
            "line": 41,
            "name": "AISP requests consent status",
            "match": {
              "location": "ConsentStatusRequestSuccessfulSteps.getConsentStatus()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 37915,
              "status": "passed"
            },
            "line": 42,
            "name": "a successful response code and the appropriate consent status gets returned",
            "match": {
              "location": "ConsentStatusRequestSuccessfulSteps.checkResponseStatus()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 14042624,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 65,
        "name": "Errorful consent status request (redirect)",
        "description": "",
        "id": "account-information-service;errorful-consent-status-request-(redirect);;2",
        "after": [
          {
            "result": {
              "duration": 205142,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 3798074,
              "status": "passed"
            },
            "line": 60,
            "name": "AISP wants to get the status of that consent and the data consent-status-with-not-existing-consent-id.json with not existing consent id",
            "match": {
              "arguments": [
                {
                  "val": "consent-status-with-not-existing-consent-id.json",
                  "offset": 58
                }
              ],
              "location": "ConsentStatusRequestErrorfulSteps.loadTestData(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 29120808,
              "status": "passed"
            },
            "line": 61,
            "name": "AISP requests errorFull consent status",
            "match": {
              "location": "ConsentStatusRequestErrorfulSteps.sendErrorfulConsentRequest()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 297410,
              "status": "passed"
            },
            "line": 62,
            "name": "an error response code is displayed and an appropriate error response is shown",
            "match": {
              "location": "CommonSteps.checkErrorCodeAndResponse()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 12871140,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 85,
        "name": "Successful deletion of consent (redirect)",
        "description": "",
        "id": "account-information-service;successful-deletion-of-consent-(redirect);;2",
        "after": [
          {
            "result": {
              "duration": 274531,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1074813,
              "status": "passed"
            },
            "line": 78,
            "name": "PSU wants to create a consent consent-dedicated-successful.json",
            "match": {
              "arguments": [
                {
                  "val": "consent-dedicated-successful.json",
                  "offset": 30
                }
              ],
              "location": "ConsentRequestSuccessfulSteps.loadTestData(String)"
            },
            "matchedColumns": [
              1
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1450460778,
              "status": "passed"
            },
            "line": 79,
            "name": "PSU sends the create consent request",
            "match": {
              "location": "ConsentRequestSuccessfulSteps.sendConsentRequest()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6945803,
              "status": "passed"
            },
            "line": 80,
            "name": "PSU wants to delete the consent consent-deletion-successful.json",
            "match": {
              "arguments": [
                {
                  "val": "consent-deletion-successful.json",
                  "offset": 32
                }
              ],
              "location": "ConsentDeletionSuccessfulSteps.loadTestData(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1834588199,
              "status": "passed"
            },
            "line": 81,
            "name": "PSU deletes consent",
            "match": {
              "location": "ConsentDeletionSuccessfulSteps.initiateDeletion()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 58771,
              "status": "passed"
            },
            "line": 82,
            "name": "a successful response code and the appropriate messages get returned",
            "match": {
              "location": "ConsentDeletionSuccessfulSteps.checkResponse()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 14400339,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 131,
        "name": "Request account list successfully",
        "description": "",
        "id": "account-information-service;request-account-list-successfully;;2",
        "after": [
          {
            "result": {
              "duration": 187960,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 17035491,
              "error_message": "com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field \"tppId\" (class de.adorsys.psd2.consent.api.ais.CreateAisConsentRequest), not marked as ignorable (9 known properties: \"tppRedirectPreferred\", \"tppInfo\", \"allowedFrequencyPerDay\", \"access\", \"psuData\", \"requestedFrequencyPerDay\", \"combinedServiceIndicator\", \"validUntil\", \"recurringIndicator\"])\n at [Source: (String)\"{\n  \"access\": {\n    \"accounts\": [\n      {\n        \"resourceId\": \"11111-999999999\",\n        \"currency\": \"EUR\",\n        \"iban\": \"DE89370400440532013000\"\n      }\n    ],\n\n    \"balances\": [\n      {\n        \"resourceId\": \"11111-999999999\",\n        \"currency\": \"EUR\",\n        \"iban\": \"DE89370400440532013000\"\n      }\n    ],\n    \"transactions\": [\n      {\n\n        \"resourceId\": \"11111-999999999\",\n        \"currency\": \"EUR\",\n        \"iban\": \"DE89370400440532013000\"\n      }\n    ]\n  },\n  \"psuData\": {\n    \"psuI\"[truncated 199 chars]; line: 33, column: 13] (through reference chain: de.adorsys.psd2.consent.api.ais.CreateAisConsentRequest[\"tppId\"])\n\tat com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:60)\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:823)\n\tat com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:1153)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1589)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1567)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:294)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:151)\n\tat com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4013)\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3004)\n\tat de.adorsys.aspsp.xs2a.integtest.util.AisConsentService.getConsentFromJsonData(AisConsentService.java:83)\n\tat de.adorsys.aspsp.xs2a.integtest.util.AisConsentService.createConsentWithStatus(AisConsentService.java:63)\n\tat de.adorsys.aspsp.xs2a.integtest.stepdefinitions.ais.CommonSteps.psu_already_has_an_existing_consent(CommonSteps.java:71)\n\tat ✽.Given PSU already has an existing valid consent account/accounts-create-consent.json(AIS_01.feature:125)\n",
              "status": "failed"
            },
            "line": 125,
            "name": "PSU already has an existing valid consent account/accounts-create-consent.json",
            "match": {
              "arguments": [
                {
                  "val": "valid",
                  "offset": 28
                },
                {
                  "val": "account/accounts-create-consent.json",
                  "offset": 42
                }
              ],
              "location": "CommonSteps.psu_already_has_an_existing_consent(String,String)"
            },
            "matchedColumns": [
              1,
              2
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 126,
            "name": "wants to get a list of accounts using accountList-successful.json",
            "match": {
              "arguments": [
                {
                  "val": "accountList-successful.json",
                  "offset": 38
                }
              ],
              "location": "AccountListRequestSuccessfulSteps.wants_to_get_a_list_of_accounts_using(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 127,
            "name": "PSU requests the list of accounts",
            "match": {
              "location": "AccountListRequestSuccessfulSteps.psu_requests_the_list_of_accounts()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 128,
            "name": "a successful response code and the appropriate list of accounts get returned",
            "match": {
              "location": "AccountListRequestSuccessfulSteps.a_successful_response_code_and_the_appropriate_list_of_accounts_get_returned()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 13389658,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 141,
        "name": "Request account list errorful",
        "description": "",
        "id": "account-information-service;request-account-list-errorful;;2",
        "after": [
          {
            "result": {
              "duration": 142875,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 851342,
              "error_message": "com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field \"tppId\" (class de.adorsys.psd2.consent.api.ais.CreateAisConsentRequest), not marked as ignorable (9 known properties: \"tppRedirectPreferred\", \"tppInfo\", \"allowedFrequencyPerDay\", \"access\", \"psuData\", \"requestedFrequencyPerDay\", \"combinedServiceIndicator\", \"validUntil\", \"recurringIndicator\"])\n at [Source: (String)\"{\n  \"access\": {\n    \"accounts\": [\n      {\n        \"resourceId\": \"11111-999999999\",\n        \"currency\": \"EUR\",\n        \"iban\": \"DE89370400440532013000\"\n      }\n    ],\n\n    \"balances\": [\n      {\n        \"resourceId\": \"11111-999999999\",\n        \"currency\": \"EUR\",\n        \"iban\": \"DE89370400440532013000\"\n      }\n    ],\n    \"transactions\": [\n      {\n\n        \"resourceId\": \"11111-999999999\",\n        \"currency\": \"EUR\",\n        \"iban\": \"DE89370400440532013000\"\n      }\n    ]\n  },\n  \"psuData\": {\n    \"psuI\"[truncated 199 chars]; line: 33, column: 13] (through reference chain: de.adorsys.psd2.consent.api.ais.CreateAisConsentRequest[\"tppId\"])\n\tat com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:60)\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:823)\n\tat com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:1153)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1589)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1567)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:294)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:151)\n\tat com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4013)\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3004)\n\tat de.adorsys.aspsp.xs2a.integtest.util.AisConsentService.getConsentFromJsonData(AisConsentService.java:83)\n\tat de.adorsys.aspsp.xs2a.integtest.util.AisConsentService.createConsentWithStatus(AisConsentService.java:63)\n\tat de.adorsys.aspsp.xs2a.integtest.stepdefinitions.ais.CommonSteps.psu_already_has_an_existing_consent(CommonSteps.java:71)\n\tat ✽.Given PSU already has an existing valid consent account/accounts-create-consent.json(AIS_01.feature:135)\n",
              "status": "failed"
            },
            "line": 135,
            "name": "PSU already has an existing valid consent account/accounts-create-consent.json",
            "match": {
              "arguments": [
                {
                  "val": "valid",
                  "offset": 28
                },
                {
                  "val": "account/accounts-create-consent.json",
                  "offset": 42
                }
              ],
              "location": "CommonSteps.psu_already_has_an_existing_consent(String,String)"
            },
            "matchedColumns": [
              1,
              2
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 136,
            "name": "PSU wants to get a list of accounts errorful using accountList-no-request-id.json",
            "match": {
              "arguments": [
                {
                  "val": "accountList-no-request-id.json",
                  "offset": 51
                }
              ],
              "location": "AccountListRequestErrofulSteps.psu_wants_to_get_a_list_of_accounts_errorful_using(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 137,
            "name": "PSU sends get request",
            "match": {
              "location": "AccountListRequestErrofulSteps.psu_sends_get_request()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 138,
            "name": "an error response code is displayed and an appropriate error response is shown",
            "match": {
              "location": "CommonSteps.checkErrorCodeAndResponse()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 12001742,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 142,
        "name": "Request account list errorful",
        "description": "",
        "id": "account-information-service;request-account-list-errorful;;3",
        "after": [
          {
            "result": {
              "duration": 208635,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 959112,
              "error_message": "com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field \"tppId\" (class de.adorsys.psd2.consent.api.ais.CreateAisConsentRequest), not marked as ignorable (9 known properties: \"tppRedirectPreferred\", \"tppInfo\", \"allowedFrequencyPerDay\", \"access\", \"psuData\", \"requestedFrequencyPerDay\", \"combinedServiceIndicator\", \"validUntil\", \"recurringIndicator\"])\n at [Source: (String)\"{\n  \"access\": {\n    \"accounts\": [\n      {\n        \"resourceId\": \"11111-999999999\",\n        \"currency\": \"EUR\",\n        \"iban\": \"DE89370400440532013000\"\n      }\n    ],\n\n    \"balances\": [\n      {\n        \"resourceId\": \"11111-999999999\",\n        \"currency\": \"EUR\",\n        \"iban\": \"DE89370400440532013000\"\n      }\n    ],\n    \"transactions\": [\n      {\n\n        \"resourceId\": \"11111-999999999\",\n        \"currency\": \"EUR\",\n        \"iban\": \"DE89370400440532013000\"\n      }\n    ]\n  },\n  \"psuData\": {\n    \"psuI\"[truncated 199 chars]; line: 33, column: 13] (through reference chain: de.adorsys.psd2.consent.api.ais.CreateAisConsentRequest[\"tppId\"])\n\tat com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:60)\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:823)\n\tat com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:1153)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1589)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1567)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:294)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:151)\n\tat com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4013)\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3004)\n\tat de.adorsys.aspsp.xs2a.integtest.util.AisConsentService.getConsentFromJsonData(AisConsentService.java:83)\n\tat de.adorsys.aspsp.xs2a.integtest.util.AisConsentService.createConsentWithStatus(AisConsentService.java:63)\n\tat de.adorsys.aspsp.xs2a.integtest.stepdefinitions.ais.CommonSteps.psu_already_has_an_existing_consent(CommonSteps.java:71)\n\tat ✽.Given PSU already has an existing valid consent account/accounts-create-consent.json(AIS_01.feature:135)\n",
              "status": "failed"
            },
            "line": 135,
            "name": "PSU already has an existing valid consent account/accounts-create-consent.json",
            "match": {
              "arguments": [
                {
                  "val": "valid",
                  "offset": 28
                },
                {
                  "val": "account/accounts-create-consent.json",
                  "offset": 42
                }
              ],
              "location": "CommonSteps.psu_already_has_an_existing_consent(String,String)"
            },
            "matchedColumns": [
              1,
              2
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 136,
            "name": "PSU wants to get a list of accounts errorful using accountList-wrong-format-request-id.json",
            "match": {
              "arguments": [
                {
                  "val": "accountList-wrong-format-request-id.json",
                  "offset": 51
                }
              ],
              "location": "AccountListRequestErrofulSteps.psu_wants_to_get_a_list_of_accounts_errorful_using(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 137,
            "name": "PSU sends get request",
            "match": {
              "location": "AccountListRequestErrofulSteps.psu_sends_get_request()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 138,
            "name": "an error response code is displayed and an appropriate error response is shown",
            "match": {
              "location": "CommonSteps.checkErrorCodeAndResponse()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 14408042,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 143,
        "name": "Request account list errorful",
        "description": "",
        "id": "account-information-service;request-account-list-errorful;;4",
        "after": [
          {
            "result": {
              "duration": 184098,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 785771,
              "error_message": "com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field \"tppId\" (class de.adorsys.psd2.consent.api.ais.CreateAisConsentRequest), not marked as ignorable (9 known properties: \"tppRedirectPreferred\", \"tppInfo\", \"allowedFrequencyPerDay\", \"access\", \"psuData\", \"requestedFrequencyPerDay\", \"combinedServiceIndicator\", \"validUntil\", \"recurringIndicator\"])\n at [Source: (String)\"{\n  \"access\": {\n    \"accounts\": [\n      {\n        \"resourceId\": \"11111-999999999\",\n        \"currency\": \"EUR\",\n        \"iban\": \"DE89370400440532013000\"\n      }\n    ],\n\n    \"balances\": [\n      {\n        \"resourceId\": \"11111-999999999\",\n        \"currency\": \"EUR\",\n        \"iban\": \"DE89370400440532013000\"\n      }\n    ],\n    \"transactions\": [\n      {\n\n        \"resourceId\": \"11111-999999999\",\n        \"currency\": \"EUR\",\n        \"iban\": \"DE89370400440532013000\"\n      }\n    ]\n  },\n  \"psuData\": {\n    \"psuI\"[truncated 199 chars]; line: 33, column: 13] (through reference chain: de.adorsys.psd2.consent.api.ais.CreateAisConsentRequest[\"tppId\"])\n\tat com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:60)\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:823)\n\tat com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:1153)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1589)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1567)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:294)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:151)\n\tat com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4013)\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3004)\n\tat de.adorsys.aspsp.xs2a.integtest.util.AisConsentService.getConsentFromJsonData(AisConsentService.java:83)\n\tat de.adorsys.aspsp.xs2a.integtest.util.AisConsentService.createConsentWithStatus(AisConsentService.java:63)\n\tat de.adorsys.aspsp.xs2a.integtest.stepdefinitions.ais.CommonSteps.psu_already_has_an_existing_consent(CommonSteps.java:71)\n\tat ✽.Given PSU already has an existing expired consent account/accounts-create-consent.json(AIS_01.feature:135)\n",
              "status": "failed"
            },
            "line": 135,
            "name": "PSU already has an existing expired consent account/accounts-create-consent.json",
            "match": {
              "arguments": [
                {
                  "val": "expired",
                  "offset": 28
                },
                {
                  "val": "account/accounts-create-consent.json",
                  "offset": 44
                }
              ],
              "location": "CommonSteps.psu_already_has_an_existing_consent(String,String)"
            },
            "matchedColumns": [
              1,
              2
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 136,
            "name": "PSU wants to get a list of accounts errorful using accountList-with-expired-consent.json",
            "match": {
              "arguments": [
                {
                  "val": "accountList-with-expired-consent.json",
                  "offset": 51
                }
              ],
              "location": "AccountListRequestErrofulSteps.psu_wants_to_get_a_list_of_accounts_errorful_using(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 137,
            "name": "PSU sends get request",
            "match": {
              "location": "AccountListRequestErrofulSteps.psu_sends_get_request()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 138,
            "name": "an error response code is displayed and an appropriate error response is shown",
            "match": {
              "location": "CommonSteps.checkErrorCodeAndResponse()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 12545206,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 144,
        "name": "Request account list errorful",
        "description": "",
        "id": "account-information-service;request-account-list-errorful;;5",
        "after": [
          {
            "result": {
              "duration": 181946,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 922920,
              "error_message": "com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field \"tppId\" (class de.adorsys.psd2.consent.api.ais.CreateAisConsentRequest), not marked as ignorable (9 known properties: \"tppRedirectPreferred\", \"tppInfo\", \"allowedFrequencyPerDay\", \"access\", \"psuData\", \"requestedFrequencyPerDay\", \"combinedServiceIndicator\", \"validUntil\", \"recurringIndicator\"])\n at [Source: (String)\"{\n  \"access\": {\n    \"accounts\": [\n      {\n        \"resourceId\": \"11111-999999999\",\n        \"currency\": \"EUR\",\n        \"iban\": \"DE89370400440532013000\"\n      }\n    ],\n\n    \"balances\": [\n      {\n        \"resourceId\": \"11111-999999999\",\n        \"currency\": \"EUR\",\n        \"iban\": \"DE89370400440532013000\"\n      }\n    ],\n    \"transactions\": [\n      {\n\n        \"resourceId\": \"11111-999999999\",\n        \"currency\": \"EUR\",\n        \"iban\": \"DE89370400440532013000\"\n      }\n    ]\n  },\n  \"psuData\": {\n    \"psuI\"[truncated 199 chars]; line: 33, column: 13] (through reference chain: de.adorsys.psd2.consent.api.ais.CreateAisConsentRequest[\"tppId\"])\n\tat com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:60)\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:823)\n\tat com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:1153)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1589)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1567)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:294)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:151)\n\tat com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4013)\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3004)\n\tat de.adorsys.aspsp.xs2a.integtest.util.AisConsentService.getConsentFromJsonData(AisConsentService.java:83)\n\tat de.adorsys.aspsp.xs2a.integtest.util.AisConsentService.createConsentWithStatus(AisConsentService.java:63)\n\tat de.adorsys.aspsp.xs2a.integtest.stepdefinitions.ais.CommonSteps.psu_already_has_an_existing_consent(CommonSteps.java:71)\n\tat ✽.Given PSU already has an existing received consent account/accounts-create-consent.json(AIS_01.feature:135)\n",
              "status": "failed"
            },
            "line": 135,
            "name": "PSU already has an existing received consent account/accounts-create-consent.json",
            "match": {
              "arguments": [
                {
                  "val": "received",
                  "offset": 28
                },
                {
                  "val": "account/accounts-create-consent.json",
                  "offset": 45
                }
              ],
              "location": "CommonSteps.psu_already_has_an_existing_consent(String,String)"
            },
            "matchedColumns": [
              1,
              2
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 136,
            "name": "PSU wants to get a list of accounts errorful using accountList-with-received-consent.json",
            "match": {
              "arguments": [
                {
                  "val": "accountList-with-received-consent.json",
                  "offset": 51
                }
              ],
              "location": "AccountListRequestErrofulSteps.psu_wants_to_get_a_list_of_accounts_errorful_using(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 137,
            "name": "PSU sends get request",
            "match": {
              "location": "AccountListRequestErrofulSteps.psu_sends_get_request()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 138,
            "name": "an error response code is displayed and an appropriate error response is shown",
            "match": {
              "location": "CommonSteps.checkErrorCodeAndResponse()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 15601595,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 145,
        "name": "Request account list errorful",
        "description": "",
        "id": "account-information-service;request-account-list-errorful;;6",
        "after": [
          {
            "result": {
              "duration": 159327,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1994308,
              "error_message": "com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field \"tppId\" (class de.adorsys.psd2.consent.api.ais.CreateAisConsentRequest), not marked as ignorable (9 known properties: \"tppRedirectPreferred\", \"tppInfo\", \"allowedFrequencyPerDay\", \"access\", \"psuData\", \"requestedFrequencyPerDay\", \"combinedServiceIndicator\", \"validUntil\", \"recurringIndicator\"])\n at [Source: (String)\"{\n  \"access\": {\n    \"accounts\": [\n      {\n        \"resourceId\": \"11111-999999999\",\n        \"currency\": \"EUR\",\n        \"iban\": \"DE89370400440532013000\"\n      }\n    ],\n\n    \"balances\": [\n      {\n        \"resourceId\": \"11111-999999999\",\n        \"currency\": \"EUR\",\n        \"iban\": \"DE89370400440532013000\"\n      }\n    ],\n    \"transactions\": [\n      {\n\n        \"resourceId\": \"11111-999999999\",\n        \"currency\": \"EUR\",\n        \"iban\": \"DE89370400440532013000\"\n      }\n    ]\n  },\n  \"psuData\": {\n    \"psuI\"[truncated 199 chars]; line: 33, column: 13] (through reference chain: de.adorsys.psd2.consent.api.ais.CreateAisConsentRequest[\"tppId\"])\n\tat com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:60)\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:823)\n\tat com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:1153)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1589)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1567)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:294)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:151)\n\tat com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4013)\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3004)\n\tat de.adorsys.aspsp.xs2a.integtest.util.AisConsentService.getConsentFromJsonData(AisConsentService.java:83)\n\tat de.adorsys.aspsp.xs2a.integtest.util.AisConsentService.createConsentWithStatus(AisConsentService.java:63)\n\tat de.adorsys.aspsp.xs2a.integtest.stepdefinitions.ais.CommonSteps.psu_already_has_an_existing_consent(CommonSteps.java:71)\n\tat ✽.Given PSU already has an existing rejected consent account/accounts-create-consent.json(AIS_01.feature:135)\n",
              "status": "failed"
            },
            "line": 135,
            "name": "PSU already has an existing rejected consent account/accounts-create-consent.json",
            "match": {
              "arguments": [
                {
                  "val": "rejected",
                  "offset": 28
                },
                {
                  "val": "account/accounts-create-consent.json",
                  "offset": 45
                }
              ],
              "location": "CommonSteps.psu_already_has_an_existing_consent(String,String)"
            },
            "matchedColumns": [
              1,
              2
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 136,
            "name": "PSU wants to get a list of accounts errorful using accountList-with-rejected-consent.json",
            "match": {
              "arguments": [
                {
                  "val": "accountList-with-rejected-consent.json",
                  "offset": 51
                }
              ],
              "location": "AccountListRequestErrofulSteps.psu_wants_to_get_a_list_of_accounts_errorful_using(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 137,
            "name": "PSU sends get request",
            "match": {
              "location": "AccountListRequestErrofulSteps.psu_sends_get_request()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 138,
            "name": "an error response code is displayed and an appropriate error response is shown",
            "match": {
              "location": "CommonSteps.checkErrorCodeAndResponse()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 14417057,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 146,
        "name": "Request account list errorful",
        "description": "",
        "id": "account-information-service;request-account-list-errorful;;7",
        "after": [
          {
            "result": {
              "duration": 183120,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 903748,
              "error_message": "com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field \"tppId\" (class de.adorsys.psd2.consent.api.ais.CreateAisConsentRequest), not marked as ignorable (9 known properties: \"tppRedirectPreferred\", \"tppInfo\", \"allowedFrequencyPerDay\", \"access\", \"psuData\", \"requestedFrequencyPerDay\", \"combinedServiceIndicator\", \"validUntil\", \"recurringIndicator\"])\n at [Source: (String)\"{\n  \"access\": {\n    \"accounts\": [\n      {\n        \"resourceId\": \"11111-999999999\",\n        \"currency\": \"EUR\",\n        \"iban\": \"DE89370400440532013000\"\n      }\n    ],\n\n    \"balances\": [\n      {\n        \"resourceId\": \"11111-999999999\",\n        \"currency\": \"EUR\",\n        \"iban\": \"DE89370400440532013000\"\n      }\n    ],\n    \"transactions\": [\n      {\n\n        \"resourceId\": \"11111-999999999\",\n        \"currency\": \"EUR\",\n        \"iban\": \"DE89370400440532013000\"\n      }\n    ]\n  },\n  \"psuData\": {\n    \"psuI\"[truncated 199 chars]; line: 33, column: 13] (through reference chain: de.adorsys.psd2.consent.api.ais.CreateAisConsentRequest[\"tppId\"])\n\tat com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:60)\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:823)\n\tat com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:1153)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1589)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1567)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:294)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:151)\n\tat com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4013)\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3004)\n\tat de.adorsys.aspsp.xs2a.integtest.util.AisConsentService.getConsentFromJsonData(AisConsentService.java:83)\n\tat de.adorsys.aspsp.xs2a.integtest.util.AisConsentService.createConsentWithStatus(AisConsentService.java:63)\n\tat de.adorsys.aspsp.xs2a.integtest.stepdefinitions.ais.CommonSteps.psu_already_has_an_existing_consent(CommonSteps.java:71)\n\tat ✽.Given PSU already has an existing revokedByPsu consent account/accounts-create-consent.json(AIS_01.feature:135)\n",
              "status": "failed"
            },
            "line": 135,
            "name": "PSU already has an existing revokedByPsu consent account/accounts-create-consent.json",
            "match": {
              "arguments": [
                {
                  "val": "revokedByPsu",
                  "offset": 28
                },
                {
                  "val": "account/accounts-create-consent.json",
                  "offset": 49
                }
              ],
              "location": "CommonSteps.psu_already_has_an_existing_consent(String,String)"
            },
            "matchedColumns": [
              1,
              2
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 136,
            "name": "PSU wants to get a list of accounts errorful using accountList-with-revokedByPsu-consent.json",
            "match": {
              "arguments": [
                {
                  "val": "accountList-with-revokedByPsu-consent.json",
                  "offset": 51
                }
              ],
              "location": "AccountListRequestErrofulSteps.psu_wants_to_get_a_list_of_accounts_errorful_using(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 137,
            "name": "PSU sends get request",
            "match": {
              "location": "AccountListRequestErrofulSteps.psu_sends_get_request()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 138,
            "name": "an error response code is displayed and an appropriate error response is shown",
            "match": {
              "location": "CommonSteps.checkErrorCodeAndResponse()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 14548537,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 147,
        "name": "Request account list errorful",
        "description": "",
        "id": "account-information-service;request-account-list-errorful;;8",
        "after": [
          {
            "result": {
              "duration": 170887,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 890218,
              "error_message": "com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field \"tppId\" (class de.adorsys.psd2.consent.api.ais.CreateAisConsentRequest), not marked as ignorable (9 known properties: \"tppRedirectPreferred\", \"tppInfo\", \"allowedFrequencyPerDay\", \"access\", \"psuData\", \"requestedFrequencyPerDay\", \"combinedServiceIndicator\", \"validUntil\", \"recurringIndicator\"])\n at [Source: (String)\"{\n  \"access\": {\n    \"accounts\": [\n      {\n        \"resourceId\": \"11111-999999999\",\n        \"currency\": \"EUR\",\n        \"iban\": \"DE89370400440532013000\"\n      }\n    ],\n\n    \"balances\": [\n      {\n        \"resourceId\": \"11111-999999999\",\n        \"currency\": \"EUR\",\n        \"iban\": \"DE89370400440532013000\"\n      }\n    ],\n    \"transactions\": [\n      {\n\n        \"resourceId\": \"11111-999999999\",\n        \"currency\": \"EUR\",\n        \"iban\": \"DE89370400440532013000\"\n      }\n    ]\n  },\n  \"psuData\": {\n    \"psuI\"[truncated 199 chars]; line: 33, column: 13] (through reference chain: de.adorsys.psd2.consent.api.ais.CreateAisConsentRequest[\"tppId\"])\n\tat com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:60)\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:823)\n\tat com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:1153)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1589)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1567)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:294)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:151)\n\tat com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4013)\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3004)\n\tat de.adorsys.aspsp.xs2a.integtest.util.AisConsentService.getConsentFromJsonData(AisConsentService.java:83)\n\tat de.adorsys.aspsp.xs2a.integtest.util.AisConsentService.createConsentWithStatus(AisConsentService.java:63)\n\tat de.adorsys.aspsp.xs2a.integtest.stepdefinitions.ais.CommonSteps.psu_already_has_an_existing_consent(CommonSteps.java:71)\n\tat ✽.Given PSU already has an existing terminatedByTpp consent account/accounts-create-consent.json(AIS_01.feature:135)\n",
              "status": "failed"
            },
            "line": 135,
            "name": "PSU already has an existing terminatedByTpp consent account/accounts-create-consent.json",
            "match": {
              "arguments": [
                {
                  "val": "terminatedByTpp",
                  "offset": 28
                },
                {
                  "val": "account/accounts-create-consent.json",
                  "offset": 52
                }
              ],
              "location": "CommonSteps.psu_already_has_an_existing_consent(String,String)"
            },
            "matchedColumns": [
              1,
              2
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 136,
            "name": "PSU wants to get a list of accounts errorful using accountList-with-terminatedByTpp-consent.json",
            "match": {
              "arguments": [
                {
                  "val": "accountList-with-terminatedByTpp-consent.json",
                  "offset": 51
                }
              ],
              "location": "AccountListRequestErrofulSteps.psu_wants_to_get_a_list_of_accounts_errorful_using(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 137,
            "name": "PSU sends get request",
            "match": {
              "location": "AccountListRequestErrofulSteps.psu_sends_get_request()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 138,
            "name": "an error response code is displayed and an appropriate error response is shown",
            "match": {
              "location": "CommonSteps.checkErrorCodeAndResponse()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 21031622,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 148,
        "name": "Request account list errorful",
        "description": "",
        "id": "account-information-service;request-account-list-errorful;;9",
        "after": [
          {
            "result": {
              "duration": 179527,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1243380,
              "error_message": "com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field \"tppId\" (class de.adorsys.psd2.consent.api.ais.CreateAisConsentRequest), not marked as ignorable (9 known properties: \"tppRedirectPreferred\", \"tppInfo\", \"allowedFrequencyPerDay\", \"access\", \"psuData\", \"requestedFrequencyPerDay\", \"combinedServiceIndicator\", \"validUntil\", \"recurringIndicator\"])\n at [Source: (String)\"{\n  \"access\": {\n    \"accounts\": [\n      {\n        \"resourceId\": \"11111-999999999\",\n        \"currency\": \"EUR\",\n        \"iban\": \"DE89370400440532013000\"\n      }\n    ],\n\n    \"balances\": [\n      {\n        \"resourceId\": \"11111-999999999\",\n        \"currency\": \"EUR\",\n        \"iban\": \"DE89370400440532013000\"\n      }\n    ],\n    \"transactions\": [\n      {\n        \"resourceId\": \"11111-999999999\",\n        \"currency\": \"EUR\",\n        \"iban\": \"DE89370400440532013000\"\n      }\n    ]\n  },\n  \"psuData\": {\n    \"psuId\"[truncated 197 chars]; line: 32, column: 13] (through reference chain: de.adorsys.psd2.consent.api.ais.CreateAisConsentRequest[\"tppId\"])\n\tat com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:60)\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:823)\n\tat com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:1153)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1589)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1567)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:294)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:151)\n\tat com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4013)\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3004)\n\tat de.adorsys.aspsp.xs2a.integtest.util.AisConsentService.getConsentFromJsonData(AisConsentService.java:83)\n\tat de.adorsys.aspsp.xs2a.integtest.util.AisConsentService.createConsentWithStatus(AisConsentService.java:63)\n\tat de.adorsys.aspsp.xs2a.integtest.stepdefinitions.ais.CommonSteps.psu_already_has_an_existing_consent(CommonSteps.java:71)\n\tat ✽.Given PSU already has an existing valid consent account/accounts-create-consent-exceeded.json(AIS_01.feature:135)\n",
              "status": "failed"
            },
            "line": 135,
            "name": "PSU already has an existing valid consent account/accounts-create-consent-exceeded.json",
            "match": {
              "arguments": [
                {
                  "val": "valid",
                  "offset": 28
                },
                {
                  "val": "account/accounts-create-consent-exceeded.json",
                  "offset": 42
                }
              ],
              "location": "CommonSteps.psu_already_has_an_existing_consent(String,String)"
            },
            "matchedColumns": [
              1,
              2
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 136,
            "name": "PSU wants to get a list of accounts errorful using accountList-with-exceeded-frequencePerDay-consent.json",
            "match": {
              "arguments": [
                {
                  "val": "accountList-with-exceeded-frequencePerDay-consent.json",
                  "offset": 51
                }
              ],
              "location": "AccountListRequestErrofulSteps.psu_wants_to_get_a_list_of_accounts_errorful_using(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 137,
            "name": "PSU sends get request",
            "match": {
              "location": "AccountListRequestErrofulSteps.psu_sends_get_request()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 138,
            "name": "an error response code is displayed and an appropriate error response is shown",
            "match": {
              "location": "CommonSteps.checkErrorCodeAndResponse()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 14716632,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 158,
        "name": "Request account list with no consent errorful",
        "description": "",
        "id": "account-information-service;request-account-list-with-no-consent-errorful;;2",
        "after": [
          {
            "result": {
              "duration": 194104,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 4866616,
              "status": "passed"
            },
            "line": 153,
            "name": "PSU wants to get a list of accounts errorful using accountList-no-consent.json",
            "match": {
              "arguments": [
                {
                  "val": "accountList-no-consent.json",
                  "offset": 51
                }
              ],
              "location": "AccountListRequestErrofulSteps.psu_wants_to_get_a_list_of_accounts_errorful_using(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 88698220,
              "error_message": "com.fasterxml.jackson.core.JsonParseException: Unrecognized token \u0027Internal\u0027: was expecting \u0027null\u0027, \u0027true\u0027, \u0027false\u0027 or NaN\n at [Source: (String)\"Internal Server Error\"; line: 1, column: 9]\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:1804)\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:679)\n\tat com.fasterxml.jackson.core.json.ReaderBasedJsonParser._reportInvalidToken(ReaderBasedJsonParser.java:2839)\n\tat com.fasterxml.jackson.core.json.ReaderBasedJsonParser._reportInvalidToken(ReaderBasedJsonParser.java:2817)\n\tat com.fasterxml.jackson.core.json.ReaderBasedJsonParser._matchToken(ReaderBasedJsonParser.java:2606)\n\tat com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleOddValue(ReaderBasedJsonParser.java:1875)\n\tat com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken(ReaderBasedJsonParser.java:749)\n\tat com.fasterxml.jackson.databind.ObjectMapper._initForReading(ObjectMapper.java:4141)\n\tat com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4000)\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3004)\n\tat de.adorsys.aspsp.xs2a.integtest.util.Context.handleRequestError(Context.java:52)\n\tat de.adorsys.aspsp.xs2a.integtest.stepdefinitions.ais.AccountListRequestErrofulSteps.psu_sends_get_request(AccountListRequestErrofulSteps.java:91)\n\tat ✽.When PSU sends get request(AIS_01.feature:154)\n",
              "status": "failed"
            },
            "line": 154,
            "name": "PSU sends get request",
            "match": {
              "location": "AccountListRequestErrofulSteps.psu_sends_get_request()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 155,
            "name": "an error response code is displayed and an appropriate error response is shown",
            "match": {
              "location": "CommonSteps.checkErrorCodeAndResponse()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 13455284,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 168,
        "name": "Request account details successfully",
        "description": "",
        "id": "account-information-service;request-account-details-successfully;;2",
        "after": [
          {
            "result": {
              "duration": 180135,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 878526,
              "error_message": "com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field \"tppId\" (class de.adorsys.psd2.consent.api.ais.CreateAisConsentRequest), not marked as ignorable (9 known properties: \"tppRedirectPreferred\", \"tppInfo\", \"allowedFrequencyPerDay\", \"access\", \"psuData\", \"requestedFrequencyPerDay\", \"combinedServiceIndicator\", \"validUntil\", \"recurringIndicator\"])\n at [Source: (String)\"{\n  \"access\": {\n    \"accounts\": [\n      {\n        \"resourceId\": \"11111-999999999\",\n        \"currency\": \"EUR\",\n        \"iban\": \"DE89370400440532013000\"\n      }\n    ],\n\n    \"balances\": [\n      {\n        \"resourceId\": \"11111-999999999\",\n        \"currency\": \"EUR\",\n        \"iban\": \"DE89370400440532013000\"\n      }\n    ],\n    \"transactions\": [\n      {\n\n        \"resourceId\": \"11111-999999999\",\n        \"currency\": \"EUR\",\n        \"iban\": \"DE89370400440532013000\"\n      }\n    ]\n  },\n  \"psuData\": {\n    \"psuI\"[truncated 199 chars]; line: 33, column: 13] (through reference chain: de.adorsys.psd2.consent.api.ais.CreateAisConsentRequest[\"tppId\"])\n\tat com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:60)\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:823)\n\tat com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:1153)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1589)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1567)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:294)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:151)\n\tat com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4013)\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3004)\n\tat de.adorsys.aspsp.xs2a.integtest.util.AisConsentService.getConsentFromJsonData(AisConsentService.java:83)\n\tat de.adorsys.aspsp.xs2a.integtest.util.AisConsentService.createConsentWithStatus(AisConsentService.java:63)\n\tat de.adorsys.aspsp.xs2a.integtest.stepdefinitions.ais.CommonSteps.psu_already_has_an_existing_consent(CommonSteps.java:71)\n\tat ✽.Given PSU already has an existing valid consent account/accounts-create-consent.json(AIS_01.feature:161)\n",
              "status": "failed"
            },
            "line": 161,
            "name": "PSU already has an existing valid consent account/accounts-create-consent.json",
            "match": {
              "arguments": [
                {
                  "val": "valid",
                  "offset": 28
                },
                {
                  "val": "account/accounts-create-consent.json",
                  "offset": 42
                }
              ],
              "location": "CommonSteps.psu_already_has_an_existing_consent(String,String)"
            },
            "matchedColumns": [
              2,
              3
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 162,
            "name": "account id 11111-999999999",
            "match": {
              "arguments": [
                {
                  "val": "11111-999999999",
                  "offset": 11
                }
              ],
              "location": "AccountDetailRequestSuccessfulSteps.account_id(String)"
            },
            "matchedColumns": [
              1
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 163,
            "name": "wants to get account details using accountDetail-successful.json",
            "match": {
              "arguments": [
                {
                  "val": "accountDetail-successful.json",
                  "offset": 35
                }
              ],
              "location": "AccountDetailRequestSuccessfulSteps.wants_to_get_account_details_using(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 164,
            "name": "PSU requests the account details",
            "match": {
              "location": "AccountDetailRequestSuccessfulSteps.psu_requests_the_account_details()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 165,
            "name": "a successful response code and the appropriate details of accounts get returned",
            "match": {
              "location": "AccountDetailRequestSuccessfulSteps.a_successful_response_code_and_the_appropriate_details_of_accounts_get_returned()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 15157996,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 179,
        "name": "Request account details errorful",
        "description": "",
        "id": "account-information-service;request-account-details-errorful;;2",
        "after": [
          {
            "result": {
              "duration": 179033,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1665864,
              "error_message": "com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field \"tppId\" (class de.adorsys.psd2.consent.api.ais.CreateAisConsentRequest), not marked as ignorable (9 known properties: \"tppRedirectPreferred\", \"tppInfo\", \"allowedFrequencyPerDay\", \"access\", \"psuData\", \"requestedFrequencyPerDay\", \"combinedServiceIndicator\", \"validUntil\", \"recurringIndicator\"])\n at [Source: (String)\"{\n  \"access\": {\n    \"accounts\": [\n      {\n        \"resourceId\": \"11111-999999999\",\n        \"currency\": \"EUR\",\n        \"iban\": \"DE89370400440532013000\"\n      }\n    ],\n\n    \"balances\": [\n      {\n        \"resourceId\": \"11111-999999999\",\n        \"currency\": \"EUR\",\n        \"iban\": \"DE89370400440532013000\"\n      }\n    ],\n    \"transactions\": [\n      {\n\n        \"resourceId\": \"11111-999999999\",\n        \"currency\": \"EUR\",\n        \"iban\": \"DE89370400440532013000\"\n      }\n    ]\n  },\n  \"psuData\": {\n    \"psuI\"[truncated 199 chars]; line: 33, column: 13] (through reference chain: de.adorsys.psd2.consent.api.ais.CreateAisConsentRequest[\"tppId\"])\n\tat com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:60)\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:823)\n\tat com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:1153)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1589)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1567)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:294)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:151)\n\tat com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4013)\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3004)\n\tat de.adorsys.aspsp.xs2a.integtest.util.AisConsentService.getConsentFromJsonData(AisConsentService.java:83)\n\tat de.adorsys.aspsp.xs2a.integtest.util.AisConsentService.createConsentWithStatus(AisConsentService.java:63)\n\tat de.adorsys.aspsp.xs2a.integtest.stepdefinitions.ais.CommonSteps.psu_already_has_an_existing_consent(CommonSteps.java:71)\n\tat ✽.Given PSU already has an existing valid consent account/accounts-create-consent.json(AIS_01.feature:172)\n",
              "status": "failed"
            },
            "line": 172,
            "name": "PSU already has an existing valid consent account/accounts-create-consent.json",
            "match": {
              "arguments": [
                {
                  "val": "valid",
                  "offset": 28
                },
                {
                  "val": "account/accounts-create-consent.json",
                  "offset": 42
                }
              ],
              "location": "CommonSteps.psu_already_has_an_existing_consent(String,String)"
            },
            "matchedColumns": [
              1,
              2
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 173,
            "name": "account id 42fb4cc3-91cb-45ba-9159-b87acf6d8add",
            "match": {
              "arguments": [
                {
                  "val": "42fb4cc3-91cb-45ba-9159-b87acf6d8add",
                  "offset": 11
                }
              ],
              "location": "AccountDetailRequestSuccessfulSteps.account_id(String)"
            },
            "matchedColumns": [
              3
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 174,
            "name": "PSU wants to get a detail of accounts erroful using accountDetail-with-accountid-nomatch-consent.json",
            "match": {
              "arguments": [
                {
                  "val": "accountDetail-with-accountid-nomatch-consent.json",
                  "offset": 52
                }
              ],
              "location": "AccountDetailRequestErrofulSteps.psu_wants_to_get_account_details_erroful_using(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 175,
            "name": "PSU requests the account details erroful",
            "match": {
              "location": "AccountDetailRequestErrofulSteps.psu_requests_the_account_details()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 176,
            "name": "an error response code is displayed and an appropriate error response is shown",
            "match": {
              "location": "CommonSteps.checkErrorCodeAndResponse()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 19734016,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 180,
        "name": "Request account details errorful",
        "description": "",
        "id": "account-information-service;request-account-details-errorful;;3",
        "after": [
          {
            "result": {
              "duration": 194634,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1371725,
              "error_message": "com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field \"tppId\" (class de.adorsys.psd2.consent.api.ais.CreateAisConsentRequest), not marked as ignorable (9 known properties: \"tppRedirectPreferred\", \"tppInfo\", \"allowedFrequencyPerDay\", \"access\", \"psuData\", \"requestedFrequencyPerDay\", \"combinedServiceIndicator\", \"validUntil\", \"recurringIndicator\"])\n at [Source: (String)\"{\n  \"access\": {\n    \"accounts\": [\n      {\n        \"resourceId\": \"11111-999999999\",\n        \"currency\": \"EUR\",\n        \"iban\": \"DE89370400440532013000\"\n      }\n    ],\n\n    \"balances\": [\n      {\n        \"resourceId\": \"11111-999999999\",\n        \"currency\": \"EUR\",\n        \"iban\": \"DE89370400440532013000\"\n      }\n    ],\n    \"transactions\": [\n      {\n\n        \"resourceId\": \"11111-999999999\",\n        \"currency\": \"EUR\",\n        \"iban\": \"DE89370400440532013000\"\n      }\n    ]\n  },\n  \"psuData\": {\n    \"psuI\"[truncated 199 chars]; line: 33, column: 13] (through reference chain: de.adorsys.psd2.consent.api.ais.CreateAisConsentRequest[\"tppId\"])\n\tat com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:60)\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:823)\n\tat com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:1153)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1589)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1567)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:294)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:151)\n\tat com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4013)\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3004)\n\tat de.adorsys.aspsp.xs2a.integtest.util.AisConsentService.getConsentFromJsonData(AisConsentService.java:83)\n\tat de.adorsys.aspsp.xs2a.integtest.util.AisConsentService.createConsentWithStatus(AisConsentService.java:63)\n\tat de.adorsys.aspsp.xs2a.integtest.stepdefinitions.ais.CommonSteps.psu_already_has_an_existing_consent(CommonSteps.java:71)\n\tat ✽.Given PSU already has an existing valid consent account/accounts-create-consent.json(AIS_01.feature:172)\n",
              "status": "failed"
            },
            "line": 172,
            "name": "PSU already has an existing valid consent account/accounts-create-consent.json",
            "match": {
              "arguments": [
                {
                  "val": "valid",
                  "offset": 28
                },
                {
                  "val": "account/accounts-create-consent.json",
                  "offset": 42
                }
              ],
              "location": "CommonSteps.psu_already_has_an_existing_consent(String,String)"
            },
            "matchedColumns": [
              1,
              2
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 173,
            "name": "account id 11111-999999999",
            "match": {
              "arguments": [
                {
                  "val": "11111-999999999",
                  "offset": 11
                }
              ],
              "location": "AccountDetailRequestSuccessfulSteps.account_id(String)"
            },
            "matchedColumns": [
              3
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 174,
            "name": "PSU wants to get a detail of accounts erroful using accountDetail-wrong-format-request-id.json",
            "match": {
              "arguments": [
                {
                  "val": "accountDetail-wrong-format-request-id.json",
                  "offset": 52
                }
              ],
              "location": "AccountDetailRequestErrofulSteps.psu_wants_to_get_account_details_erroful_using(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 175,
            "name": "PSU requests the account details erroful",
            "match": {
              "location": "AccountDetailRequestErrofulSteps.psu_requests_the_account_details()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 176,
            "name": "an error response code is displayed and an appropriate error response is shown",
            "match": {
              "location": "CommonSteps.checkErrorCodeAndResponse()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 24668980,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 181,
        "name": "Request account details errorful",
        "description": "",
        "id": "account-information-service;request-account-details-errorful;;4",
        "after": [
          {
            "result": {
              "duration": 181601,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1298095,
              "error_message": "com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field \"tppId\" (class de.adorsys.psd2.consent.api.ais.CreateAisConsentRequest), not marked as ignorable (9 known properties: \"tppRedirectPreferred\", \"tppInfo\", \"allowedFrequencyPerDay\", \"access\", \"psuData\", \"requestedFrequencyPerDay\", \"combinedServiceIndicator\", \"validUntil\", \"recurringIndicator\"])\n at [Source: (String)\"{\n  \"access\": {\n    \"accounts\": [\n      {\n        \"resourceId\": \"11111-999999999\",\n        \"currency\": \"EUR\",\n        \"iban\": \"DE89370400440532013000\"\n      }\n    ],\n\n    \"balances\": [\n      {\n        \"resourceId\": \"11111-999999999\",\n        \"currency\": \"EUR\",\n        \"iban\": \"DE89370400440532013000\"\n      }\n    ],\n    \"transactions\": [\n      {\n\n        \"resourceId\": \"11111-999999999\",\n        \"currency\": \"EUR\",\n        \"iban\": \"DE89370400440532013000\"\n      }\n    ]\n  },\n  \"psuData\": {\n    \"psuI\"[truncated 199 chars]; line: 33, column: 13] (through reference chain: de.adorsys.psd2.consent.api.ais.CreateAisConsentRequest[\"tppId\"])\n\tat com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:60)\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:823)\n\tat com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:1153)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1589)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1567)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:294)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:151)\n\tat com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4013)\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3004)\n\tat de.adorsys.aspsp.xs2a.integtest.util.AisConsentService.getConsentFromJsonData(AisConsentService.java:83)\n\tat de.adorsys.aspsp.xs2a.integtest.util.AisConsentService.createConsentWithStatus(AisConsentService.java:63)\n\tat de.adorsys.aspsp.xs2a.integtest.stepdefinitions.ais.CommonSteps.psu_already_has_an_existing_consent(CommonSteps.java:71)\n\tat ✽.Given PSU already has an existing expired consent account/accounts-create-consent.json(AIS_01.feature:172)\n",
              "status": "failed"
            },
            "line": 172,
            "name": "PSU already has an existing expired consent account/accounts-create-consent.json",
            "match": {
              "arguments": [
                {
                  "val": "expired",
                  "offset": 28
                },
                {
                  "val": "account/accounts-create-consent.json",
                  "offset": 44
                }
              ],
              "location": "CommonSteps.psu_already_has_an_existing_consent(String,String)"
            },
            "matchedColumns": [
              1,
              2
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 173,
            "name": "account id 11111-999999999",
            "match": {
              "arguments": [
                {
                  "val": "11111-999999999",
                  "offset": 11
                }
              ],
              "location": "AccountDetailRequestSuccessfulSteps.account_id(String)"
            },
            "matchedColumns": [
              3
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 174,
            "name": "PSU wants to get a detail of accounts erroful using accountDetail-with-expired-consent.json",
            "match": {
              "arguments": [
                {
                  "val": "accountDetail-with-expired-consent.json",
                  "offset": 52
                }
              ],
              "location": "AccountDetailRequestErrofulSteps.psu_wants_to_get_account_details_erroful_using(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 175,
            "name": "PSU requests the account details erroful",
            "match": {
              "location": "AccountDetailRequestErrofulSteps.psu_requests_the_account_details()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 176,
            "name": "an error response code is displayed and an appropriate error response is shown",
            "match": {
              "location": "CommonSteps.checkErrorCodeAndResponse()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 17571168,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 182,
        "name": "Request account details errorful",
        "description": "",
        "id": "account-information-service;request-account-details-errorful;;5",
        "after": [
          {
            "result": {
              "duration": 195596,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1048221,
              "error_message": "com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field \"tppId\" (class de.adorsys.psd2.consent.api.ais.CreateAisConsentRequest), not marked as ignorable (9 known properties: \"tppRedirectPreferred\", \"tppInfo\", \"allowedFrequencyPerDay\", \"access\", \"psuData\", \"requestedFrequencyPerDay\", \"combinedServiceIndicator\", \"validUntil\", \"recurringIndicator\"])\n at [Source: (String)\"{\n  \"access\": {\n    \"accounts\": [\n      {\n        \"resourceId\": \"11111-999999999\",\n        \"currency\": \"EUR\",\n        \"iban\": \"DE89370400440532013000\"\n      }\n    ],\n\n    \"balances\": [\n      {\n        \"resourceId\": \"11111-999999999\",\n        \"currency\": \"EUR\",\n        \"iban\": \"DE89370400440532013000\"\n      }\n    ],\n    \"transactions\": [\n      {\n\n        \"resourceId\": \"11111-999999999\",\n        \"currency\": \"EUR\",\n        \"iban\": \"DE89370400440532013000\"\n      }\n    ]\n  },\n  \"psuData\": {\n    \"psuI\"[truncated 199 chars]; line: 33, column: 13] (through reference chain: de.adorsys.psd2.consent.api.ais.CreateAisConsentRequest[\"tppId\"])\n\tat com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:60)\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:823)\n\tat com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:1153)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1589)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1567)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:294)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:151)\n\tat com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4013)\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3004)\n\tat de.adorsys.aspsp.xs2a.integtest.util.AisConsentService.getConsentFromJsonData(AisConsentService.java:83)\n\tat de.adorsys.aspsp.xs2a.integtest.util.AisConsentService.createConsentWithStatus(AisConsentService.java:63)\n\tat de.adorsys.aspsp.xs2a.integtest.stepdefinitions.ais.CommonSteps.psu_already_has_an_existing_consent(CommonSteps.java:71)\n\tat ✽.Given PSU already has an existing received consent account/accounts-create-consent.json(AIS_01.feature:172)\n",
              "status": "failed"
            },
            "line": 172,
            "name": "PSU already has an existing received consent account/accounts-create-consent.json",
            "match": {
              "arguments": [
                {
                  "val": "received",
                  "offset": 28
                },
                {
                  "val": "account/accounts-create-consent.json",
                  "offset": 45
                }
              ],
              "location": "CommonSteps.psu_already_has_an_existing_consent(String,String)"
            },
            "matchedColumns": [
              1,
              2
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 173,
            "name": "account id 11111-999999999",
            "match": {
              "arguments": [
                {
                  "val": "11111-999999999",
                  "offset": 11
                }
              ],
              "location": "AccountDetailRequestSuccessfulSteps.account_id(String)"
            },
            "matchedColumns": [
              3
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 174,
            "name": "PSU wants to get a detail of accounts erroful using accountDetail-with-received-consent.json",
            "match": {
              "arguments": [
                {
                  "val": "accountDetail-with-received-consent.json",
                  "offset": 52
                }
              ],
              "location": "AccountDetailRequestErrofulSteps.psu_wants_to_get_account_details_erroful_using(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 175,
            "name": "PSU requests the account details erroful",
            "match": {
              "location": "AccountDetailRequestErrofulSteps.psu_requests_the_account_details()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 176,
            "name": "an error response code is displayed and an appropriate error response is shown",
            "match": {
              "location": "CommonSteps.checkErrorCodeAndResponse()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 17683212,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 183,
        "name": "Request account details errorful",
        "description": "",
        "id": "account-information-service;request-account-details-errorful;;6",
        "after": [
          {
            "result": {
              "duration": 183020,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 962576,
              "error_message": "com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field \"tppId\" (class de.adorsys.psd2.consent.api.ais.CreateAisConsentRequest), not marked as ignorable (9 known properties: \"tppRedirectPreferred\", \"tppInfo\", \"allowedFrequencyPerDay\", \"access\", \"psuData\", \"requestedFrequencyPerDay\", \"combinedServiceIndicator\", \"validUntil\", \"recurringIndicator\"])\n at [Source: (String)\"{\n  \"access\": {\n    \"accounts\": [\n      {\n        \"resourceId\": \"11111-999999999\",\n        \"currency\": \"EUR\",\n        \"iban\": \"DE89370400440532013000\"\n      }\n    ],\n\n    \"balances\": [\n      {\n        \"resourceId\": \"11111-999999999\",\n        \"currency\": \"EUR\",\n        \"iban\": \"DE89370400440532013000\"\n      }\n    ],\n    \"transactions\": [\n      {\n\n        \"resourceId\": \"11111-999999999\",\n        \"currency\": \"EUR\",\n        \"iban\": \"DE89370400440532013000\"\n      }\n    ]\n  },\n  \"psuData\": {\n    \"psuI\"[truncated 199 chars]; line: 33, column: 13] (through reference chain: de.adorsys.psd2.consent.api.ais.CreateAisConsentRequest[\"tppId\"])\n\tat com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:60)\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:823)\n\tat com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:1153)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1589)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1567)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:294)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:151)\n\tat com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4013)\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3004)\n\tat de.adorsys.aspsp.xs2a.integtest.util.AisConsentService.getConsentFromJsonData(AisConsentService.java:83)\n\tat de.adorsys.aspsp.xs2a.integtest.util.AisConsentService.createConsentWithStatus(AisConsentService.java:63)\n\tat de.adorsys.aspsp.xs2a.integtest.stepdefinitions.ais.CommonSteps.psu_already_has_an_existing_consent(CommonSteps.java:71)\n\tat ✽.Given PSU already has an existing rejected consent account/accounts-create-consent.json(AIS_01.feature:172)\n",
              "status": "failed"
            },
            "line": 172,
            "name": "PSU already has an existing rejected consent account/accounts-create-consent.json",
            "match": {
              "arguments": [
                {
                  "val": "rejected",
                  "offset": 28
                },
                {
                  "val": "account/accounts-create-consent.json",
                  "offset": 45
                }
              ],
              "location": "CommonSteps.psu_already_has_an_existing_consent(String,String)"
            },
            "matchedColumns": [
              1,
              2
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 173,
            "name": "account id 11111-999999999",
            "match": {
              "arguments": [
                {
                  "val": "11111-999999999",
                  "offset": 11
                }
              ],
              "location": "AccountDetailRequestSuccessfulSteps.account_id(String)"
            },
            "matchedColumns": [
              3
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 174,
            "name": "PSU wants to get a detail of accounts erroful using accountDetail-with-rejected-consent.json",
            "match": {
              "arguments": [
                {
                  "val": "accountDetail-with-rejected-consent.json",
                  "offset": 52
                }
              ],
              "location": "AccountDetailRequestErrofulSteps.psu_wants_to_get_account_details_erroful_using(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 175,
            "name": "PSU requests the account details erroful",
            "match": {
              "location": "AccountDetailRequestErrofulSteps.psu_requests_the_account_details()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 176,
            "name": "an error response code is displayed and an appropriate error response is shown",
            "match": {
              "location": "CommonSteps.checkErrorCodeAndResponse()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 17148088,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 184,
        "name": "Request account details errorful",
        "description": "",
        "id": "account-information-service;request-account-details-errorful;;7",
        "after": [
          {
            "result": {
              "duration": 221411,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 3442673,
              "error_message": "com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field \"tppId\" (class de.adorsys.psd2.consent.api.ais.CreateAisConsentRequest), not marked as ignorable (9 known properties: \"tppRedirectPreferred\", \"tppInfo\", \"allowedFrequencyPerDay\", \"access\", \"psuData\", \"requestedFrequencyPerDay\", \"combinedServiceIndicator\", \"validUntil\", \"recurringIndicator\"])\n at [Source: (String)\"{\n  \"access\": {\n    \"accounts\": [\n      {\n        \"resourceId\": \"11111-999999999\",\n        \"currency\": \"EUR\",\n        \"iban\": \"DE89370400440532013000\"\n      }\n    ],\n\n    \"balances\": [\n      {\n        \"resourceId\": \"11111-999999999\",\n        \"currency\": \"EUR\",\n        \"iban\": \"DE89370400440532013000\"\n      }\n    ],\n    \"transactions\": [\n      {\n\n        \"resourceId\": \"11111-999999999\",\n        \"currency\": \"EUR\",\n        \"iban\": \"DE89370400440532013000\"\n      }\n    ]\n  },\n  \"psuData\": {\n    \"psuI\"[truncated 199 chars]; line: 33, column: 13] (through reference chain: de.adorsys.psd2.consent.api.ais.CreateAisConsentRequest[\"tppId\"])\n\tat com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:60)\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:823)\n\tat com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:1153)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1589)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1567)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:294)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:151)\n\tat com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4013)\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3004)\n\tat de.adorsys.aspsp.xs2a.integtest.util.AisConsentService.getConsentFromJsonData(AisConsentService.java:83)\n\tat de.adorsys.aspsp.xs2a.integtest.util.AisConsentService.createConsentWithStatus(AisConsentService.java:63)\n\tat de.adorsys.aspsp.xs2a.integtest.stepdefinitions.ais.CommonSteps.psu_already_has_an_existing_consent(CommonSteps.java:71)\n\tat ✽.Given PSU already has an existing revokedByPsu consent account/accounts-create-consent.json(AIS_01.feature:172)\n",
              "status": "failed"
            },
            "line": 172,
            "name": "PSU already has an existing revokedByPsu consent account/accounts-create-consent.json",
            "match": {
              "arguments": [
                {
                  "val": "revokedByPsu",
                  "offset": 28
                },
                {
                  "val": "account/accounts-create-consent.json",
                  "offset": 49
                }
              ],
              "location": "CommonSteps.psu_already_has_an_existing_consent(String,String)"
            },
            "matchedColumns": [
              1,
              2
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 173,
            "name": "account id 11111-999999999",
            "match": {
              "arguments": [
                {
                  "val": "11111-999999999",
                  "offset": 11
                }
              ],
              "location": "AccountDetailRequestSuccessfulSteps.account_id(String)"
            },
            "matchedColumns": [
              3
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 174,
            "name": "PSU wants to get a detail of accounts erroful using accountDetail-with-revokedByPsu-consent.json",
            "match": {
              "arguments": [
                {
                  "val": "accountDetail-with-revokedByPsu-consent.json",
                  "offset": 52
                }
              ],
              "location": "AccountDetailRequestErrofulSteps.psu_wants_to_get_account_details_erroful_using(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 175,
            "name": "PSU requests the account details erroful",
            "match": {
              "location": "AccountDetailRequestErrofulSteps.psu_requests_the_account_details()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 176,
            "name": "an error response code is displayed and an appropriate error response is shown",
            "match": {
              "location": "CommonSteps.checkErrorCodeAndResponse()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 17489011,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 185,
        "name": "Request account details errorful",
        "description": "",
        "id": "account-information-service;request-account-details-errorful;;8",
        "after": [
          {
            "result": {
              "duration": 222501,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1811806,
              "error_message": "com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field \"tppId\" (class de.adorsys.psd2.consent.api.ais.CreateAisConsentRequest), not marked as ignorable (9 known properties: \"tppRedirectPreferred\", \"tppInfo\", \"allowedFrequencyPerDay\", \"access\", \"psuData\", \"requestedFrequencyPerDay\", \"combinedServiceIndicator\", \"validUntil\", \"recurringIndicator\"])\n at [Source: (String)\"{\n  \"access\": {\n    \"accounts\": [\n      {\n        \"resourceId\": \"11111-999999999\",\n        \"currency\": \"EUR\",\n        \"iban\": \"DE89370400440532013000\"\n      }\n    ],\n\n    \"balances\": [\n      {\n        \"resourceId\": \"11111-999999999\",\n        \"currency\": \"EUR\",\n        \"iban\": \"DE89370400440532013000\"\n      }\n    ],\n    \"transactions\": [\n      {\n\n        \"resourceId\": \"11111-999999999\",\n        \"currency\": \"EUR\",\n        \"iban\": \"DE89370400440532013000\"\n      }\n    ]\n  },\n  \"psuData\": {\n    \"psuI\"[truncated 199 chars]; line: 33, column: 13] (through reference chain: de.adorsys.psd2.consent.api.ais.CreateAisConsentRequest[\"tppId\"])\n\tat com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:60)\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:823)\n\tat com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:1153)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1589)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1567)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:294)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:151)\n\tat com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4013)\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3004)\n\tat de.adorsys.aspsp.xs2a.integtest.util.AisConsentService.getConsentFromJsonData(AisConsentService.java:83)\n\tat de.adorsys.aspsp.xs2a.integtest.util.AisConsentService.createConsentWithStatus(AisConsentService.java:63)\n\tat de.adorsys.aspsp.xs2a.integtest.stepdefinitions.ais.CommonSteps.psu_already_has_an_existing_consent(CommonSteps.java:71)\n\tat ✽.Given PSU already has an existing terminatedByTpp consent account/accounts-create-consent.json(AIS_01.feature:172)\n",
              "status": "failed"
            },
            "line": 172,
            "name": "PSU already has an existing terminatedByTpp consent account/accounts-create-consent.json",
            "match": {
              "arguments": [
                {
                  "val": "terminatedByTpp",
                  "offset": 28
                },
                {
                  "val": "account/accounts-create-consent.json",
                  "offset": 52
                }
              ],
              "location": "CommonSteps.psu_already_has_an_existing_consent(String,String)"
            },
            "matchedColumns": [
              1,
              2
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 173,
            "name": "account id 11111-999999999",
            "match": {
              "arguments": [
                {
                  "val": "11111-999999999",
                  "offset": 11
                }
              ],
              "location": "AccountDetailRequestSuccessfulSteps.account_id(String)"
            },
            "matchedColumns": [
              3
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 174,
            "name": "PSU wants to get a detail of accounts erroful using accountDetail-with-terminatedByTpp-consent.json",
            "match": {
              "arguments": [
                {
                  "val": "accountDetail-with-terminatedByTpp-consent.json",
                  "offset": 52
                }
              ],
              "location": "AccountDetailRequestErrofulSteps.psu_wants_to_get_account_details_erroful_using(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 175,
            "name": "PSU requests the account details erroful",
            "match": {
              "location": "AccountDetailRequestErrofulSteps.psu_requests_the_account_details()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 176,
            "name": "an error response code is displayed and an appropriate error response is shown",
            "match": {
              "location": "CommonSteps.checkErrorCodeAndResponse()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 17520876,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 186,
        "name": "Request account details errorful",
        "description": "",
        "id": "account-information-service;request-account-details-errorful;;9",
        "after": [
          {
            "result": {
              "duration": 188450,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 952897,
              "error_message": "com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field \"tppId\" (class de.adorsys.psd2.consent.api.ais.CreateAisConsentRequest), not marked as ignorable (9 known properties: \"tppRedirectPreferred\", \"tppInfo\", \"allowedFrequencyPerDay\", \"access\", \"psuData\", \"requestedFrequencyPerDay\", \"combinedServiceIndicator\", \"validUntil\", \"recurringIndicator\"])\n at [Source: (String)\"{\n  \"access\": {\n    \"accounts\": [\n      {\n        \"resourceId\": \"11111-999999999\",\n        \"currency\": \"EUR\",\n        \"iban\": \"DE89370400440532013000\"\n      }\n    ],\n\n    \"balances\": [\n      {\n        \"resourceId\": \"11111-999999999\",\n        \"currency\": \"EUR\",\n        \"iban\": \"DE89370400440532013000\"\n      }\n    ],\n    \"transactions\": [\n      {\n        \"resourceId\": \"11111-999999999\",\n        \"currency\": \"EUR\",\n        \"iban\": \"DE89370400440532013000\"\n      }\n    ]\n  },\n  \"psuData\": {\n    \"psuId\"[truncated 197 chars]; line: 32, column: 13] (through reference chain: de.adorsys.psd2.consent.api.ais.CreateAisConsentRequest[\"tppId\"])\n\tat com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:60)\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:823)\n\tat com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:1153)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1589)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1567)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:294)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:151)\n\tat com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4013)\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3004)\n\tat de.adorsys.aspsp.xs2a.integtest.util.AisConsentService.getConsentFromJsonData(AisConsentService.java:83)\n\tat de.adorsys.aspsp.xs2a.integtest.util.AisConsentService.createConsentWithStatus(AisConsentService.java:63)\n\tat de.adorsys.aspsp.xs2a.integtest.stepdefinitions.ais.CommonSteps.psu_already_has_an_existing_consent(CommonSteps.java:71)\n\tat ✽.Given PSU already has an existing valid consent account/accounts-create-consent-exceeded.json(AIS_01.feature:172)\n",
              "status": "failed"
            },
            "line": 172,
            "name": "PSU already has an existing valid consent account/accounts-create-consent-exceeded.json",
            "match": {
              "arguments": [
                {
                  "val": "valid",
                  "offset": 28
                },
                {
                  "val": "account/accounts-create-consent-exceeded.json",
                  "offset": 42
                }
              ],
              "location": "CommonSteps.psu_already_has_an_existing_consent(String,String)"
            },
            "matchedColumns": [
              1,
              2
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 173,
            "name": "account id 11111-999999999",
            "match": {
              "arguments": [
                {
                  "val": "11111-999999999",
                  "offset": 11
                }
              ],
              "location": "AccountDetailRequestSuccessfulSteps.account_id(String)"
            },
            "matchedColumns": [
              3
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 174,
            "name": "PSU wants to get a detail of accounts erroful using accountDetail-with-exceeded-frequencePerDay-consent.json",
            "match": {
              "arguments": [
                {
                  "val": "accountDetail-with-exceeded-frequencePerDay-consent.json",
                  "offset": 52
                }
              ],
              "location": "AccountDetailRequestErrofulSteps.psu_wants_to_get_account_details_erroful_using(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 175,
            "name": "PSU requests the account details erroful",
            "match": {
              "location": "AccountDetailRequestErrofulSteps.psu_requests_the_account_details()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 176,
            "name": "an error response code is displayed and an appropriate error response is shown",
            "match": {
              "location": "CommonSteps.checkErrorCodeAndResponse()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 16596343,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 195,
        "name": "Request account details with no consent errorful",
        "description": "",
        "id": "account-information-service;request-account-details-with-no-consent-errorful;;2",
        "after": [
          {
            "result": {
              "duration": 222497,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 5826851,
              "status": "passed"
            },
            "line": 190,
            "name": "PSU wants to get a detail of accounts erroful using accountDetail-no-consent.json",
            "match": {
              "arguments": [
                {
                  "val": "accountDetail-no-consent.json",
                  "offset": 52
                }
              ],
              "location": "AccountDetailRequestErrofulSteps.psu_wants_to_get_account_details_erroful_using(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 29938861,
              "error_message": "com.fasterxml.jackson.core.JsonParseException: Unrecognized token \u0027Internal\u0027: was expecting \u0027null\u0027, \u0027true\u0027, \u0027false\u0027 or NaN\n at [Source: (String)\"Internal Server Error\"; line: 1, column: 9]\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:1804)\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:679)\n\tat com.fasterxml.jackson.core.json.ReaderBasedJsonParser._reportInvalidToken(ReaderBasedJsonParser.java:2839)\n\tat com.fasterxml.jackson.core.json.ReaderBasedJsonParser._reportInvalidToken(ReaderBasedJsonParser.java:2817)\n\tat com.fasterxml.jackson.core.json.ReaderBasedJsonParser._matchToken(ReaderBasedJsonParser.java:2606)\n\tat com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleOddValue(ReaderBasedJsonParser.java:1875)\n\tat com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken(ReaderBasedJsonParser.java:749)\n\tat com.fasterxml.jackson.databind.ObjectMapper._initForReading(ObjectMapper.java:4141)\n\tat com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4000)\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3004)\n\tat de.adorsys.aspsp.xs2a.integtest.util.Context.handleRequestError(Context.java:52)\n\tat de.adorsys.aspsp.xs2a.integtest.stepdefinitions.ais.AccountDetailRequestErrofulSteps.psu_requests_the_account_details(AccountDetailRequestErrofulSteps.java:94)\n\tat ✽.When PSU requests the account details erroful(AIS_01.feature:191)\n",
              "status": "failed"
            },
            "line": 191,
            "name": "PSU requests the account details erroful",
            "match": {
              "location": "AccountDetailRequestErrofulSteps.psu_requests_the_account_details()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 192,
            "name": "an error response code is displayed and an appropriate error response is shown",
            "match": {
              "location": "CommonSteps.checkErrorCodeAndResponse()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 17638701,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 211,
        "name": "Read balances successfully",
        "description": "",
        "id": "account-information-service;read-balances-successfully;;2",
        "after": [
          {
            "result": {
              "duration": 221565,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1223315,
              "error_message": "com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field \"tppId\" (class de.adorsys.psd2.consent.api.ais.CreateAisConsentRequest), not marked as ignorable (9 known properties: \"tppRedirectPreferred\", \"tppInfo\", \"allowedFrequencyPerDay\", \"access\", \"psuData\", \"requestedFrequencyPerDay\", \"combinedServiceIndicator\", \"validUntil\", \"recurringIndicator\"])\n at [Source: (String)\" {\n      \"access\": {\n        \"balances\": [\n              {\n                \"resourceId\": \"42fb4cc3-91cb-45ba-9159-b87acf6d8add\",\n                \"currency\": \"EUR\",\n                \"iban\": \"DE52500105173911841934\"\n              }\n            ]\n      },\n      \"psuData\": {\n        \"psuId\":null\n      },\n      \"combinedServiceIndicator\": false,\n      \"allowedFrequencyPerDay\":4,\n      \"recurringIndicator\": false,\n      \"tppId\": \"12345987\",\n      \"tppRedirectPreferred\": true,\n      \"validUntil\": \"2020-\"[truncated 13 chars]; line: 17, column: 17] (through reference chain: de.adorsys.psd2.consent.api.ais.CreateAisConsentRequest[\"tppId\"])\n\tat com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:60)\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:823)\n\tat com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:1153)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1589)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1567)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:294)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:151)\n\tat com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4013)\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3004)\n\tat de.adorsys.aspsp.xs2a.integtest.util.AisConsentService.getConsentFromJsonData(AisConsentService.java:83)\n\tat de.adorsys.aspsp.xs2a.integtest.util.AisConsentService.createConsentWithStatus(AisConsentService.java:63)\n\tat de.adorsys.aspsp.xs2a.integtest.stepdefinitions.ais.CommonSteps.psu_already_has_an_existing_consent(CommonSteps.java:71)\n\tat ✽.Given PSU already has an existing valid consent balance/readBalance_access_right_implicit_accounts.json(AIS_01.feature:204)\n",
              "status": "failed"
            },
            "line": 204,
            "name": "PSU already has an existing valid consent balance/readBalance_access_right_implicit_accounts.json",
            "match": {
              "arguments": [
                {
                  "val": "valid",
                  "offset": 28
                },
                {
                  "val": "balance/readBalance_access_right_implicit_accounts.json",
                  "offset": 42
                }
              ],
              "location": "CommonSteps.psu_already_has_an_existing_consent(String,String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 205,
            "name": "account id 42fb4cc3-91cb-45ba-9159-b87acf6d8add",
            "match": {
              "arguments": [
                {
                  "val": "42fb4cc3-91cb-45ba-9159-b87acf6d8add",
                  "offset": 11
                }
              ],
              "location": "AccountDetailRequestSuccessfulSteps.account_id(String)"
            },
            "matchedColumns": [
              1
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 206,
            "name": "wants to read all balances using readBalance-successful.json",
            "match": {
              "arguments": [
                {
                  "val": "readBalance-successful.json",
                  "offset": 33
                }
              ],
              "location": "ReadBalancesSuccessfulSteps.loadSuccessfulGetBalanceRequest(String)"
            },
            "matchedColumns": [
              2
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 207,
            "name": "PSU requests the balances",
            "match": {
              "location": "ReadBalancesSuccessfulSteps.request_the_balances()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 208,
            "name": "successful response code and the appropriate list of accounts get returned",
            "match": {
              "location": "ReadBalancesSuccessfulSteps.checkListOfAccounts()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 16120322,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 212,
        "name": "Read balances successfully",
        "description": "",
        "id": "account-information-service;read-balances-successfully;;3",
        "after": [
          {
            "result": {
              "duration": 215182,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1276596,
              "error_message": "com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field \"tppId\" (class de.adorsys.psd2.consent.api.ais.CreateAisConsentRequest), not marked as ignorable (9 known properties: \"tppRedirectPreferred\", \"tppInfo\", \"allowedFrequencyPerDay\", \"access\", \"psuData\", \"requestedFrequencyPerDay\", \"combinedServiceIndicator\", \"validUntil\", \"recurringIndicator\"])\n at [Source: (String)\"{\n  \"access\": {\n    \"accounts\": [\n      {\n        \"resourceId\": \"42fb4cc3-91cb-45ba-9159-b87acf6d8add\",\n        \"currency\": \"EUR\",\n        \"iban\": \"DE52500105173911841934\"\n      }\n    ],\n    \"balances\": [\n      {\n        \"resourceId\": \"42fb4cc3-91cb-45ba-9159-b87acf6d8add\",\n        \"currency\": \"EUR\",\n        \"iban\": \"DE52500105173911841934\"\n      }\n    ]\n  },\n  \"psuData\": {\n    \"psuId\":null\n  },\n  \"combinedServiceIndicator\": false,\n  \"allowedFrequencyPerDay\":4,\n  \"recurringIndicator\": false,\n  \"\"[truncated 86 chars]; line: 24, column: 13] (through reference chain: de.adorsys.psd2.consent.api.ais.CreateAisConsentRequest[\"tppId\"])\n\tat com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:60)\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:823)\n\tat com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:1153)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1589)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1567)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:294)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:151)\n\tat com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4013)\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3004)\n\tat de.adorsys.aspsp.xs2a.integtest.util.AisConsentService.getConsentFromJsonData(AisConsentService.java:83)\n\tat de.adorsys.aspsp.xs2a.integtest.util.AisConsentService.createConsentWithStatus(AisConsentService.java:63)\n\tat de.adorsys.aspsp.xs2a.integtest.stepdefinitions.ais.CommonSteps.psu_already_has_an_existing_consent(CommonSteps.java:71)\n\tat ✽.Given PSU already has an existing valid consent balance/readBalance_access_right_balances.json(AIS_01.feature:204)\n",
              "status": "failed"
            },
            "line": 204,
            "name": "PSU already has an existing valid consent balance/readBalance_access_right_balances.json",
            "match": {
              "arguments": [
                {
                  "val": "valid",
                  "offset": 28
                },
                {
                  "val": "balance/readBalance_access_right_balances.json",
                  "offset": 42
                }
              ],
              "location": "CommonSteps.psu_already_has_an_existing_consent(String,String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 205,
            "name": "account id 42fb4cc3-91cb-45ba-9159-b87acf6d8add",
            "match": {
              "arguments": [
                {
                  "val": "42fb4cc3-91cb-45ba-9159-b87acf6d8add",
                  "offset": 11
                }
              ],
              "location": "AccountDetailRequestSuccessfulSteps.account_id(String)"
            },
            "matchedColumns": [
              1
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 206,
            "name": "wants to read all balances using readBalance-successful.json",
            "match": {
              "arguments": [
                {
                  "val": "readBalance-successful.json",
                  "offset": 33
                }
              ],
              "location": "ReadBalancesSuccessfulSteps.loadSuccessfulGetBalanceRequest(String)"
            },
            "matchedColumns": [
              2
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 207,
            "name": "PSU requests the balances",
            "match": {
              "location": "ReadBalancesSuccessfulSteps.request_the_balances()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 208,
            "name": "successful response code and the appropriate list of accounts get returned",
            "match": {
              "location": "ReadBalancesSuccessfulSteps.checkListOfAccounts()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 75417995,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 262,
        "name": "Read transaction list successfully",
        "description": "",
        "id": "account-information-service;read-transaction-list-successfully;;2",
        "after": [
          {
            "result": {
              "duration": 257645,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1334389,
              "error_message": "com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field \"tppId\" (class de.adorsys.psd2.consent.api.ais.CreateAisConsentRequest), not marked as ignorable (9 known properties: \"tppRedirectPreferred\", \"tppInfo\", \"allowedFrequencyPerDay\", \"access\", \"psuData\", \"requestedFrequencyPerDay\", \"combinedServiceIndicator\", \"validUntil\", \"recurringIndicator\"])\n at [Source: (String)\"{\n  \"access\": {\n    \"transactions\": [\n      {\n        \"resourceId\": \"42fb4cc3-91cb-45ba-9159-b87acf6d8add\",\n        \"currency\": \"EUR\",\n        \"iban\": \"DE52500105173911841934\"\n      }\n    ]\n  },\n  \"psuData\": {\n    \"psuId\": null\n  },\n  \"combinedServiceIndicator\": false,\n  \"allowedFrequencyPerDay\": 4,\n  \"recurringIndicator\": false,\n  \"tppId\": \"12345987\",\n  \"tppRedirectPreferred\": true,\n  \"validUntil\": \"2020-10-10\"\n}\n\"; line: 17, column: 13] (through reference chain: de.adorsys.psd2.consent.api.ais.CreateAisConsentRequest[\"tppId\"])\n\tat com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:60)\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:823)\n\tat com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:1153)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1589)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1567)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:294)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:151)\n\tat com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4013)\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3004)\n\tat de.adorsys.aspsp.xs2a.integtest.util.AisConsentService.getConsentFromJsonData(AisConsentService.java:83)\n\tat de.adorsys.aspsp.xs2a.integtest.util.AisConsentService.createConsentWithStatus(AisConsentService.java:63)\n\tat de.adorsys.aspsp.xs2a.integtest.stepdefinitions.ais.CommonSteps.psu_already_has_an_existing_consent(CommonSteps.java:71)\n\tat ✽.Given PSU already has an existing valid consent transaction/transactions-create-consent.json(AIS_01.feature:254)\n",
              "status": "failed"
            },
            "line": 254,
            "name": "PSU already has an existing valid consent transaction/transactions-create-consent.json",
            "match": {
              "arguments": [
                {
                  "val": "valid",
                  "offset": 28
                },
                {
                  "val": "transaction/transactions-create-consent.json",
                  "offset": 42
                }
              ],
              "location": "CommonSteps.psu_already_has_an_existing_consent(String,String)"
            },
            "matchedColumns": [
              0,
              9
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 255,
            "name": "account id 42fb4cc3-91cb-45ba-9159-b87acf6d8add",
            "match": {
              "arguments": [
                {
                  "val": "42fb4cc3-91cb-45ba-9159-b87acf6d8add",
                  "offset": 11
                }
              ],
              "location": "AccountDetailRequestSuccessfulSteps.account_id(String)"
            },
            "matchedColumns": [
              1
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 256,
            "name": "balance false dateFrom 2008-09-15 dateTo  bookingStatus booked entryReferenceFrom  deltaList ",
            "match": {
              "arguments": [
                {
                  "val": "false",
                  "offset": 8
                },
                {
                  "val": "2008-09-15",
                  "offset": 23
                },
                {
                  "val": "",
                  "offset": 41
                },
                {
                  "val": "booked",
                  "offset": 56
                },
                {
                  "val": "",
                  "offset": 82
                },
                {
                  "val": "",
                  "offset": 93
                }
              ],
              "location": "TransactionListRequestSuccessfulSteps.setParameter(Boolean,String,String,String,String,Boolean)"
            },
            "matchedColumns": [
              3,
              4,
              5,
              6,
              7,
              8
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 257,
            "name": "wants to read all transactions using transactionList-successful.json",
            "match": {
              "arguments": [
                {
                  "val": "transactionList-successful.json",
                  "offset": 37
                }
              ],
              "location": "TransactionListRequestSuccessfulSteps.wants_to_read_all_transactions_using(String)"
            },
            "matchedColumns": [
              2
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 258,
            "name": "PSU requests the transactions",
            "match": {
              "location": "TransactionListRequestSuccessfulSteps.psu_requests_the_transactions()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 259,
            "name": "a successful response code and the appropriate list of transaction get returned",
            "match": {
              "location": "TransactionListRequestSuccessfulSteps.a_successful_response_code_and_the_appropriate_list_of_transaction_get_returned()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 17636627,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 263,
        "name": "Read transaction list successfully",
        "description": "",
        "id": "account-information-service;read-transaction-list-successfully;;3",
        "after": [
          {
            "result": {
              "duration": 214219,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 955244,
              "error_message": "com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field \"tppId\" (class de.adorsys.psd2.consent.api.ais.CreateAisConsentRequest), not marked as ignorable (9 known properties: \"tppRedirectPreferred\", \"tppInfo\", \"allowedFrequencyPerDay\", \"access\", \"psuData\", \"requestedFrequencyPerDay\", \"combinedServiceIndicator\", \"validUntil\", \"recurringIndicator\"])\n at [Source: (String)\"{\n  \"access\": {\n    \"transactions\": [\n      {\n        \"resourceId\": \"42fb4cc3-91cb-45ba-9159-b87acf6d8add\",\n        \"currency\": \"EUR\",\n        \"iban\": \"DE52500105173911841934\"\n      }\n    ]\n  },\n  \"psuData\": {\n    \"psuId\": null\n  },\n  \"combinedServiceIndicator\": false,\n  \"allowedFrequencyPerDay\": 4,\n  \"recurringIndicator\": false,\n  \"tppId\": \"12345987\",\n  \"tppRedirectPreferred\": true,\n  \"validUntil\": \"2020-10-10\"\n}\n\"; line: 17, column: 13] (through reference chain: de.adorsys.psd2.consent.api.ais.CreateAisConsentRequest[\"tppId\"])\n\tat com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:60)\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:823)\n\tat com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:1153)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1589)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1567)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:294)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:151)\n\tat com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4013)\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3004)\n\tat de.adorsys.aspsp.xs2a.integtest.util.AisConsentService.getConsentFromJsonData(AisConsentService.java:83)\n\tat de.adorsys.aspsp.xs2a.integtest.util.AisConsentService.createConsentWithStatus(AisConsentService.java:63)\n\tat de.adorsys.aspsp.xs2a.integtest.stepdefinitions.ais.CommonSteps.psu_already_has_an_existing_consent(CommonSteps.java:71)\n\tat ✽.Given PSU already has an existing valid consent transaction/transactions-create-consent.json(AIS_01.feature:254)\n",
              "status": "failed"
            },
            "line": 254,
            "name": "PSU already has an existing valid consent transaction/transactions-create-consent.json",
            "match": {
              "arguments": [
                {
                  "val": "valid",
                  "offset": 28
                },
                {
                  "val": "transaction/transactions-create-consent.json",
                  "offset": 42
                }
              ],
              "location": "CommonSteps.psu_already_has_an_existing_consent(String,String)"
            },
            "matchedColumns": [
              0,
              9
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 255,
            "name": "account id 42fb4cc3-91cb-45ba-9159-b87acf6d8add",
            "match": {
              "arguments": [
                {
                  "val": "42fb4cc3-91cb-45ba-9159-b87acf6d8add",
                  "offset": 11
                }
              ],
              "location": "AccountDetailRequestSuccessfulSteps.account_id(String)"
            },
            "matchedColumns": [
              1
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 256,
            "name": "balance  dateFrom 2008-09-15 dateTo 2028-09-15 bookingStatus booked entryReferenceFrom  deltaList ",
            "match": {
              "arguments": [
                {
                  "val": "",
                  "offset": 8
                },
                {
                  "val": "2008-09-15",
                  "offset": 18
                },
                {
                  "val": "2028-09-15",
                  "offset": 36
                },
                {
                  "val": "booked",
                  "offset": 61
                },
                {
                  "val": "",
                  "offset": 87
                },
                {
                  "val": "",
                  "offset": 98
                }
              ],
              "location": "TransactionListRequestSuccessfulSteps.setParameter(Boolean,String,String,String,String,Boolean)"
            },
            "matchedColumns": [
              3,
              4,
              5,
              6,
              7,
              8
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 257,
            "name": "wants to read all transactions using transactionList-successful.json",
            "match": {
              "arguments": [
                {
                  "val": "transactionList-successful.json",
                  "offset": 37
                }
              ],
              "location": "TransactionListRequestSuccessfulSteps.wants_to_read_all_transactions_using(String)"
            },
            "matchedColumns": [
              2
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 258,
            "name": "PSU requests the transactions",
            "match": {
              "location": "TransactionListRequestSuccessfulSteps.psu_requests_the_transactions()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 259,
            "name": "a successful response code and the appropriate list of transaction get returned",
            "match": {
              "location": "TransactionListRequestSuccessfulSteps.a_successful_response_code_and_the_appropriate_list_of_transaction_get_returned()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 18729299,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 264,
        "name": "Read transaction list successfully",
        "description": "",
        "id": "account-information-service;read-transaction-list-successfully;;4",
        "after": [
          {
            "result": {
              "duration": 242265,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 958324,
              "error_message": "com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field \"tppId\" (class de.adorsys.psd2.consent.api.ais.CreateAisConsentRequest), not marked as ignorable (9 known properties: \"tppRedirectPreferred\", \"tppInfo\", \"allowedFrequencyPerDay\", \"access\", \"psuData\", \"requestedFrequencyPerDay\", \"combinedServiceIndicator\", \"validUntil\", \"recurringIndicator\"])\n at [Source: (String)\"{\n  \"access\": {\n    \"transactions\": [\n      {\n        \"resourceId\": \"42fb4cc3-91cb-45ba-9159-b87acf6d8add\",\n        \"currency\": \"EUR\",\n        \"iban\": \"DE52500105173911841934\"\n      }\n    ]\n  },\n  \"psuData\": {\n    \"psuId\": null\n  },\n  \"combinedServiceIndicator\": false,\n  \"allowedFrequencyPerDay\": 4,\n  \"recurringIndicator\": false,\n  \"tppId\": \"12345987\",\n  \"tppRedirectPreferred\": true,\n  \"validUntil\": \"2020-10-10\"\n}\n\"; line: 17, column: 13] (through reference chain: de.adorsys.psd2.consent.api.ais.CreateAisConsentRequest[\"tppId\"])\n\tat com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:60)\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:823)\n\tat com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:1153)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1589)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1567)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:294)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:151)\n\tat com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4013)\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3004)\n\tat de.adorsys.aspsp.xs2a.integtest.util.AisConsentService.getConsentFromJsonData(AisConsentService.java:83)\n\tat de.adorsys.aspsp.xs2a.integtest.util.AisConsentService.createConsentWithStatus(AisConsentService.java:63)\n\tat de.adorsys.aspsp.xs2a.integtest.stepdefinitions.ais.CommonSteps.psu_already_has_an_existing_consent(CommonSteps.java:71)\n\tat ✽.Given PSU already has an existing valid consent transaction/transactions-create-consent.json(AIS_01.feature:254)\n",
              "status": "failed"
            },
            "line": 254,
            "name": "PSU already has an existing valid consent transaction/transactions-create-consent.json",
            "match": {
              "arguments": [
                {
                  "val": "valid",
                  "offset": 28
                },
                {
                  "val": "transaction/transactions-create-consent.json",
                  "offset": 42
                }
              ],
              "location": "CommonSteps.psu_already_has_an_existing_consent(String,String)"
            },
            "matchedColumns": [
              0,
              9
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 255,
            "name": "account id 42fb4cc3-91cb-45ba-9159-b87acf6d8add",
            "match": {
              "arguments": [
                {
                  "val": "42fb4cc3-91cb-45ba-9159-b87acf6d8add",
                  "offset": 11
                }
              ],
              "location": "AccountDetailRequestSuccessfulSteps.account_id(String)"
            },
            "matchedColumns": [
              1
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 256,
            "name": "balance true dateFrom 2008-09-15 dateTo  bookingStatus booked entryReferenceFrom  deltaList ",
            "match": {
              "arguments": [
                {
                  "val": "true",
                  "offset": 8
                },
                {
                  "val": "2008-09-15",
                  "offset": 22
                },
                {
                  "val": "",
                  "offset": 40
                },
                {
                  "val": "booked",
                  "offset": 55
                },
                {
                  "val": "",
                  "offset": 81
                },
                {
                  "val": "",
                  "offset": 92
                }
              ],
              "location": "TransactionListRequestSuccessfulSteps.setParameter(Boolean,String,String,String,String,Boolean)"
            },
            "matchedColumns": [
              3,
              4,
              5,
              6,
              7,
              8
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 257,
            "name": "wants to read all transactions using transactionList-successful.json",
            "match": {
              "arguments": [
                {
                  "val": "transactionList-successful.json",
                  "offset": 37
                }
              ],
              "location": "TransactionListRequestSuccessfulSteps.wants_to_read_all_transactions_using(String)"
            },
            "matchedColumns": [
              2
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 258,
            "name": "PSU requests the transactions",
            "match": {
              "location": "TransactionListRequestSuccessfulSteps.psu_requests_the_transactions()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 259,
            "name": "a successful response code and the appropriate list of transaction get returned",
            "match": {
              "location": "TransactionListRequestSuccessfulSteps.a_successful_response_code_and_the_appropriate_list_of_transaction_get_returned()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 19487591,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 265,
        "name": "Read transaction list successfully",
        "description": "",
        "id": "account-information-service;read-transaction-list-successfully;;5",
        "after": [
          {
            "result": {
              "duration": 275903,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 980231,
              "error_message": "com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field \"tppId\" (class de.adorsys.psd2.consent.api.ais.CreateAisConsentRequest), not marked as ignorable (9 known properties: \"tppRedirectPreferred\", \"tppInfo\", \"allowedFrequencyPerDay\", \"access\", \"psuData\", \"requestedFrequencyPerDay\", \"combinedServiceIndicator\", \"validUntil\", \"recurringIndicator\"])\n at [Source: (String)\"{\n  \"access\": {\n    \"transactions\": [\n      {\n        \"resourceId\": \"42fb4cc3-91cb-45ba-9159-b87acf6d8add\",\n        \"currency\": \"EUR\",\n        \"iban\": \"DE52500105173911841934\"\n      }\n    ]\n  },\n  \"psuData\": {\n    \"psuId\": null\n  },\n  \"combinedServiceIndicator\": false,\n  \"allowedFrequencyPerDay\": 4,\n  \"recurringIndicator\": false,\n  \"tppId\": \"12345987\",\n  \"tppRedirectPreferred\": true,\n  \"validUntil\": \"2020-10-10\"\n}\n\"; line: 17, column: 13] (through reference chain: de.adorsys.psd2.consent.api.ais.CreateAisConsentRequest[\"tppId\"])\n\tat com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:60)\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:823)\n\tat com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:1153)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1589)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1567)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:294)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:151)\n\tat com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4013)\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3004)\n\tat de.adorsys.aspsp.xs2a.integtest.util.AisConsentService.getConsentFromJsonData(AisConsentService.java:83)\n\tat de.adorsys.aspsp.xs2a.integtest.util.AisConsentService.createConsentWithStatus(AisConsentService.java:63)\n\tat de.adorsys.aspsp.xs2a.integtest.stepdefinitions.ais.CommonSteps.psu_already_has_an_existing_consent(CommonSteps.java:71)\n\tat ✽.Given PSU already has an existing valid consent transaction/transactions-create-consent.json(AIS_01.feature:254)\n",
              "status": "failed"
            },
            "line": 254,
            "name": "PSU already has an existing valid consent transaction/transactions-create-consent.json",
            "match": {
              "arguments": [
                {
                  "val": "valid",
                  "offset": 28
                },
                {
                  "val": "transaction/transactions-create-consent.json",
                  "offset": 42
                }
              ],
              "location": "CommonSteps.psu_already_has_an_existing_consent(String,String)"
            },
            "matchedColumns": [
              0,
              9
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 255,
            "name": "account id 42fb4cc3-91cb-45ba-9159-b87acf6d8add",
            "match": {
              "arguments": [
                {
                  "val": "42fb4cc3-91cb-45ba-9159-b87acf6d8add",
                  "offset": 11
                }
              ],
              "location": "AccountDetailRequestSuccessfulSteps.account_id(String)"
            },
            "matchedColumns": [
              1
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 256,
            "name": "balance  dateFrom 2008-09-15 dateTo  bookingStatus pending entryReferenceFrom  deltaList ",
            "match": {
              "arguments": [
                {
                  "val": "",
                  "offset": 8
                },
                {
                  "val": "2008-09-15",
                  "offset": 18
                },
                {
                  "val": "",
                  "offset": 36
                },
                {
                  "val": "pending",
                  "offset": 51
                },
                {
                  "val": "",
                  "offset": 78
                },
                {
                  "val": "",
                  "offset": 89
                }
              ],
              "location": "TransactionListRequestSuccessfulSteps.setParameter(Boolean,String,String,String,String,Boolean)"
            },
            "matchedColumns": [
              3,
              4,
              5,
              6,
              7,
              8
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 257,
            "name": "wants to read all transactions using transactionList-successful.json",
            "match": {
              "arguments": [
                {
                  "val": "transactionList-successful.json",
                  "offset": 37
                }
              ],
              "location": "TransactionListRequestSuccessfulSteps.wants_to_read_all_transactions_using(String)"
            },
            "matchedColumns": [
              2
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 258,
            "name": "PSU requests the transactions",
            "match": {
              "location": "TransactionListRequestSuccessfulSteps.psu_requests_the_transactions()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 259,
            "name": "a successful response code and the appropriate list of transaction get returned",
            "match": {
              "location": "TransactionListRequestSuccessfulSteps.a_successful_response_code_and_the_appropriate_list_of_transaction_get_returned()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 17845589,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 266,
        "name": "Read transaction list successfully",
        "description": "",
        "id": "account-information-service;read-transaction-list-successfully;;6",
        "after": [
          {
            "result": {
              "duration": 229245,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 985312,
              "error_message": "com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field \"tppId\" (class de.adorsys.psd2.consent.api.ais.CreateAisConsentRequest), not marked as ignorable (9 known properties: \"tppRedirectPreferred\", \"tppInfo\", \"allowedFrequencyPerDay\", \"access\", \"psuData\", \"requestedFrequencyPerDay\", \"combinedServiceIndicator\", \"validUntil\", \"recurringIndicator\"])\n at [Source: (String)\"{\n  \"access\": {\n    \"transactions\": [\n      {\n        \"resourceId\": \"42fb4cc3-91cb-45ba-9159-b87acf6d8add\",\n        \"currency\": \"EUR\",\n        \"iban\": \"DE52500105173911841934\"\n      }\n    ]\n  },\n  \"psuData\": {\n    \"psuId\": null\n  },\n  \"combinedServiceIndicator\": false,\n  \"allowedFrequencyPerDay\": 4,\n  \"recurringIndicator\": false,\n  \"tppId\": \"12345987\",\n  \"tppRedirectPreferred\": true,\n  \"validUntil\": \"2020-10-10\"\n}\n\"; line: 17, column: 13] (through reference chain: de.adorsys.psd2.consent.api.ais.CreateAisConsentRequest[\"tppId\"])\n\tat com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:60)\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:823)\n\tat com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:1153)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1589)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1567)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:294)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:151)\n\tat com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4013)\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3004)\n\tat de.adorsys.aspsp.xs2a.integtest.util.AisConsentService.getConsentFromJsonData(AisConsentService.java:83)\n\tat de.adorsys.aspsp.xs2a.integtest.util.AisConsentService.createConsentWithStatus(AisConsentService.java:63)\n\tat de.adorsys.aspsp.xs2a.integtest.stepdefinitions.ais.CommonSteps.psu_already_has_an_existing_consent(CommonSteps.java:71)\n\tat ✽.Given PSU already has an existing valid consent transaction/transactions-create-consent.json(AIS_01.feature:254)\n",
              "status": "failed"
            },
            "line": 254,
            "name": "PSU already has an existing valid consent transaction/transactions-create-consent.json",
            "match": {
              "arguments": [
                {
                  "val": "valid",
                  "offset": 28
                },
                {
                  "val": "transaction/transactions-create-consent.json",
                  "offset": 42
                }
              ],
              "location": "CommonSteps.psu_already_has_an_existing_consent(String,String)"
            },
            "matchedColumns": [
              0,
              9
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 255,
            "name": "account id 42fb4cc3-91cb-45ba-9159-b87acf6d8add",
            "match": {
              "arguments": [
                {
                  "val": "42fb4cc3-91cb-45ba-9159-b87acf6d8add",
                  "offset": 11
                }
              ],
              "location": "AccountDetailRequestSuccessfulSteps.account_id(String)"
            },
            "matchedColumns": [
              1
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 256,
            "name": "balance  dateFrom 2008-09-15 dateTo  bookingStatus both entryReferenceFrom  deltaList ",
            "match": {
              "arguments": [
                {
                  "val": "",
                  "offset": 8
                },
                {
                  "val": "2008-09-15",
                  "offset": 18
                },
                {
                  "val": "",
                  "offset": 36
                },
                {
                  "val": "both",
                  "offset": 51
                },
                {
                  "val": "",
                  "offset": 75
                },
                {
                  "val": "",
                  "offset": 86
                }
              ],
              "location": "TransactionListRequestSuccessfulSteps.setParameter(Boolean,String,String,String,String,Boolean)"
            },
            "matchedColumns": [
              3,
              4,
              5,
              6,
              7,
              8
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 257,
            "name": "wants to read all transactions using transactionList-successful.json",
            "match": {
              "arguments": [
                {
                  "val": "transactionList-successful.json",
                  "offset": 37
                }
              ],
              "location": "TransactionListRequestSuccessfulSteps.wants_to_read_all_transactions_using(String)"
            },
            "matchedColumns": [
              2
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 258,
            "name": "PSU requests the transactions",
            "match": {
              "location": "TransactionListRequestSuccessfulSteps.psu_requests_the_transactions()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 259,
            "name": "a successful response code and the appropriate list of transaction get returned",
            "match": {
              "location": "TransactionListRequestSuccessfulSteps.a_successful_response_code_and_the_appropriate_list_of_transaction_get_returned()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 22603833,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 267,
        "name": "Read transaction list successfully",
        "description": "",
        "id": "account-information-service;read-transaction-list-successfully;;7",
        "after": [
          {
            "result": {
              "duration": 337260,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 958801,
              "error_message": "com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field \"tppId\" (class de.adorsys.psd2.consent.api.ais.CreateAisConsentRequest), not marked as ignorable (9 known properties: \"tppRedirectPreferred\", \"tppInfo\", \"allowedFrequencyPerDay\", \"access\", \"psuData\", \"requestedFrequencyPerDay\", \"combinedServiceIndicator\", \"validUntil\", \"recurringIndicator\"])\n at [Source: (String)\"{\n  \"access\": {\n    \"transactions\": [\n      {\n        \"resourceId\": \"42fb4cc3-91cb-45ba-9159-b87acf6d8add\",\n        \"currency\": \"EUR\",\n        \"iban\": \"DE52500105173911841934\"\n      }\n    ]\n  },\n  \"psuData\": {\n    \"psuId\": null\n  },\n  \"combinedServiceIndicator\": false,\n  \"allowedFrequencyPerDay\": 4,\n  \"recurringIndicator\": false,\n  \"tppId\": \"12345987\",\n  \"tppRedirectPreferred\": true,\n  \"validUntil\": \"2020-10-10\"\n}\n\"; line: 17, column: 13] (through reference chain: de.adorsys.psd2.consent.api.ais.CreateAisConsentRequest[\"tppId\"])\n\tat com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:60)\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:823)\n\tat com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:1153)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1589)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1567)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:294)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:151)\n\tat com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4013)\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3004)\n\tat de.adorsys.aspsp.xs2a.integtest.util.AisConsentService.getConsentFromJsonData(AisConsentService.java:83)\n\tat de.adorsys.aspsp.xs2a.integtest.util.AisConsentService.createConsentWithStatus(AisConsentService.java:63)\n\tat de.adorsys.aspsp.xs2a.integtest.stepdefinitions.ais.CommonSteps.psu_already_has_an_existing_consent(CommonSteps.java:71)\n\tat ✽.Given PSU already has an existing valid consent transaction/transactions-create-consent.json(AIS_01.feature:254)\n",
              "status": "failed"
            },
            "line": 254,
            "name": "PSU already has an existing valid consent transaction/transactions-create-consent.json",
            "match": {
              "arguments": [
                {
                  "val": "valid",
                  "offset": 28
                },
                {
                  "val": "transaction/transactions-create-consent.json",
                  "offset": 42
                }
              ],
              "location": "CommonSteps.psu_already_has_an_existing_consent(String,String)"
            },
            "matchedColumns": [
              0,
              9
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 255,
            "name": "account id 42fb4cc3-91cb-45ba-9159-b87acf6d8add",
            "match": {
              "arguments": [
                {
                  "val": "42fb4cc3-91cb-45ba-9159-b87acf6d8add",
                  "offset": 11
                }
              ],
              "location": "AccountDetailRequestSuccessfulSteps.account_id(String)"
            },
            "matchedColumns": [
              1
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 256,
            "name": "balance  dateFrom 2008-09-15 dateTo  bookingStatus booked entryReferenceFrom  deltaList false",
            "match": {
              "arguments": [
                {
                  "val": "",
                  "offset": 8
                },
                {
                  "val": "2008-09-15",
                  "offset": 18
                },
                {
                  "val": "",
                  "offset": 36
                },
                {
                  "val": "booked",
                  "offset": 51
                },
                {
                  "val": "",
                  "offset": 77
                },
                {
                  "val": "false",
                  "offset": 88
                }
              ],
              "location": "TransactionListRequestSuccessfulSteps.setParameter(Boolean,String,String,String,String,Boolean)"
            },
            "matchedColumns": [
              3,
              4,
              5,
              6,
              7,
              8
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 257,
            "name": "wants to read all transactions using transactionList-successful.json",
            "match": {
              "arguments": [
                {
                  "val": "transactionList-successful.json",
                  "offset": 37
                }
              ],
              "location": "TransactionListRequestSuccessfulSteps.wants_to_read_all_transactions_using(String)"
            },
            "matchedColumns": [
              2
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 258,
            "name": "PSU requests the transactions",
            "match": {
              "location": "TransactionListRequestSuccessfulSteps.psu_requests_the_transactions()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 259,
            "name": "a successful response code and the appropriate list of transaction get returned",
            "match": {
              "location": "TransactionListRequestSuccessfulSteps.a_successful_response_code_and_the_appropriate_list_of_transaction_get_returned()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 20925448,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 268,
        "name": "Read transaction list successfully",
        "description": "",
        "id": "account-information-service;read-transaction-list-successfully;;8",
        "after": [
          {
            "result": {
              "duration": 198023,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 898757,
              "error_message": "com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field \"tppId\" (class de.adorsys.psd2.consent.api.ais.CreateAisConsentRequest), not marked as ignorable (9 known properties: \"tppRedirectPreferred\", \"tppInfo\", \"allowedFrequencyPerDay\", \"access\", \"psuData\", \"requestedFrequencyPerDay\", \"combinedServiceIndicator\", \"validUntil\", \"recurringIndicator\"])\n at [Source: (String)\"{\n  \"access\": {\n    \"transactions\": [\n      {\n        \"resourceId\": \"42fb4cc3-91cb-45ba-9159-b87acf6d8add\",\n        \"currency\": \"EUR\",\n        \"iban\": \"DE52500105173911841934\"\n      }\n    ]\n  },\n  \"psuData\": {\n    \"psuId\": null\n  },\n  \"combinedServiceIndicator\": false,\n  \"allowedFrequencyPerDay\": 4,\n  \"recurringIndicator\": false,\n  \"tppId\": \"12345987\",\n  \"tppRedirectPreferred\": true,\n  \"validUntil\": \"2020-10-10\"\n}\n\"; line: 17, column: 13] (through reference chain: de.adorsys.psd2.consent.api.ais.CreateAisConsentRequest[\"tppId\"])\n\tat com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:60)\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:823)\n\tat com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:1153)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1589)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1567)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:294)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:151)\n\tat com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4013)\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3004)\n\tat de.adorsys.aspsp.xs2a.integtest.util.AisConsentService.getConsentFromJsonData(AisConsentService.java:83)\n\tat de.adorsys.aspsp.xs2a.integtest.util.AisConsentService.createConsentWithStatus(AisConsentService.java:63)\n\tat de.adorsys.aspsp.xs2a.integtest.stepdefinitions.ais.CommonSteps.psu_already_has_an_existing_consent(CommonSteps.java:71)\n\tat ✽.Given PSU already has an existing valid consent transaction/transactions-create-consent.json(AIS_01.feature:254)\n",
              "status": "failed"
            },
            "line": 254,
            "name": "PSU already has an existing valid consent transaction/transactions-create-consent.json",
            "match": {
              "arguments": [
                {
                  "val": "valid",
                  "offset": 28
                },
                {
                  "val": "transaction/transactions-create-consent.json",
                  "offset": 42
                }
              ],
              "location": "CommonSteps.psu_already_has_an_existing_consent(String,String)"
            },
            "matchedColumns": [
              0,
              9
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 255,
            "name": "account id 42fb4cc3-91cb-45ba-9159-b87acf6d8add",
            "match": {
              "arguments": [
                {
                  "val": "42fb4cc3-91cb-45ba-9159-b87acf6d8add",
                  "offset": 11
                }
              ],
              "location": "AccountDetailRequestSuccessfulSteps.account_id(String)"
            },
            "matchedColumns": [
              1
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 256,
            "name": "balance  dateFrom 2008-09-15 dateTo  bookingStatus booked entryReferenceFrom  deltaList true",
            "match": {
              "arguments": [
                {
                  "val": "",
                  "offset": 8
                },
                {
                  "val": "2008-09-15",
                  "offset": 18
                },
                {
                  "val": "",
                  "offset": 36
                },
                {
                  "val": "booked",
                  "offset": 51
                },
                {
                  "val": "",
                  "offset": 77
                },
                {
                  "val": "true",
                  "offset": 88
                }
              ],
              "location": "TransactionListRequestSuccessfulSteps.setParameter(Boolean,String,String,String,String,Boolean)"
            },
            "matchedColumns": [
              3,
              4,
              5,
              6,
              7,
              8
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 257,
            "name": "wants to read all transactions using transactionList-successful.json",
            "match": {
              "arguments": [
                {
                  "val": "transactionList-successful.json",
                  "offset": 37
                }
              ],
              "location": "TransactionListRequestSuccessfulSteps.wants_to_read_all_transactions_using(String)"
            },
            "matchedColumns": [
              2
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 258,
            "name": "PSU requests the transactions",
            "match": {
              "location": "TransactionListRequestSuccessfulSteps.psu_requests_the_transactions()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 259,
            "name": "a successful response code and the appropriate list of transaction get returned",
            "match": {
              "location": "TransactionListRequestSuccessfulSteps.a_successful_response_code_and_the_appropriate_list_of_transaction_get_returned()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 19919650,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 278,
        "name": "Read transaction list erroful",
        "description": "",
        "id": "account-information-service;read-transaction-list-erroful;;2",
        "after": [
          {
            "result": {
              "duration": 206942,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1730934,
              "error_message": "com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field \"tppId\" (class de.adorsys.psd2.consent.api.ais.CreateAisConsentRequest), not marked as ignorable (9 known properties: \"tppRedirectPreferred\", \"tppInfo\", \"allowedFrequencyPerDay\", \"access\", \"psuData\", \"requestedFrequencyPerDay\", \"combinedServiceIndicator\", \"validUntil\", \"recurringIndicator\"])\n at [Source: (String)\"{\n  \"access\": {\n    \"accounts\": [\n      {\n        \"resourceId\": \"42fb4cc3-91cb-45ba-9159-b87acf6d8add\",\n        \"currency\": \"EUR\",\n        \"iban\": \"DE52500105173911841934\"\n      }\n    ]\n  },\n  \"psuData\": {\n    \"psuId\": null\n  },\n  \"combinedServiceIndicator\": false,\n  \"allowedFrequencyPerDay\": 4,\n  \"recurringIndicator\": false,\n  \"tppId\": \"12345987\",\n  \"tppRedirectPreferred\": true,\n  \"validUntil\": \"2020-10-10\"\n}\n\"; line: 17, column: 13] (through reference chain: de.adorsys.psd2.consent.api.ais.CreateAisConsentRequest[\"tppId\"])\n\tat com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:60)\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:823)\n\tat com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:1153)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1589)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1567)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:294)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:151)\n\tat com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4013)\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3004)\n\tat de.adorsys.aspsp.xs2a.integtest.util.AisConsentService.getConsentFromJsonData(AisConsentService.java:83)\n\tat de.adorsys.aspsp.xs2a.integtest.util.AisConsentService.createConsentWithStatus(AisConsentService.java:63)\n\tat de.adorsys.aspsp.xs2a.integtest.stepdefinitions.ais.CommonSteps.psu_already_has_an_existing_consent(CommonSteps.java:71)\n\tat ✽.Given PSU already has an existing valid consent transaction/transactions-create-consent-with-account-access.json(AIS_01.feature:271)\n",
              "status": "failed"
            },
            "line": 271,
            "name": "PSU already has an existing valid consent transaction/transactions-create-consent-with-account-access.json",
            "match": {
              "arguments": [
                {
                  "val": "valid",
                  "offset": 28
                },
                {
                  "val": "transaction/transactions-create-consent-with-account-access.json",
                  "offset": 42
                }
              ],
              "location": "CommonSteps.psu_already_has_an_existing_consent(String,String)"
            },
            "matchedColumns": [
              1,
              2
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 272,
            "name": "account id 42fb4cc3-91cb-45ba-9159-b87acf6d8add",
            "match": {
              "arguments": [
                {
                  "val": "42fb4cc3-91cb-45ba-9159-b87acf6d8add",
                  "offset": 11
                }
              ],
              "location": "AccountDetailRequestSuccessfulSteps.account_id(String)"
            },
            "matchedColumns": [
              3
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 273,
            "name": "wants to read all transactions errorful using transactions-with-wrong-access.json",
            "match": {
              "arguments": [
                {
                  "val": "transactions-with-wrong-access.json",
                  "offset": 46
                }
              ],
              "location": "TransactionListRequestErrofulSteps.wants_to_read_all_transactions_erroful_using(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 274,
            "name": "PSU requests the transactions erroful",
            "match": {
              "location": "TransactionListRequestErrofulSteps.psu_requests_the_transactions()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 275,
            "name": "an error response code is displayed and an appropriate error response is shown",
            "match": {
              "location": "CommonSteps.checkErrorCodeAndResponse()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 17623680,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 279,
        "name": "Read transaction list erroful",
        "description": "",
        "id": "account-information-service;read-transaction-list-erroful;;3",
        "after": [
          {
            "result": {
              "duration": 204343,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1107268,
              "error_message": "com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field \"tppId\" (class de.adorsys.psd2.consent.api.ais.CreateAisConsentRequest), not marked as ignorable (9 known properties: \"tppRedirectPreferred\", \"tppInfo\", \"allowedFrequencyPerDay\", \"access\", \"psuData\", \"requestedFrequencyPerDay\", \"combinedServiceIndicator\", \"validUntil\", \"recurringIndicator\"])\n at [Source: (String)\"{\n  \"access\": {\n    \"balances\": [\n      {\n        \"resourceId\": \"42fb4cc3-91cb-45ba-9159-b87acf6d8add\",\n        \"currency\": \"EUR\",\n        \"iban\": \"DE52500105173911841934\"\n      }\n    ]\n  },\n  \"psuData\": {\n    \"psuId\": null\n  },\n  \"combinedServiceIndicator\": false,\n  \"allowedFrequencyPerDay\": 4,\n  \"recurringIndicator\": false,\n  \"tppId\": \"12345987\",\n  \"tppRedirectPreferred\": true,\n  \"validUntil\": \"2020-10-10\"\n}\n\"; line: 17, column: 13] (through reference chain: de.adorsys.psd2.consent.api.ais.CreateAisConsentRequest[\"tppId\"])\n\tat com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:60)\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:823)\n\tat com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:1153)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1589)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1567)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:294)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:151)\n\tat com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4013)\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3004)\n\tat de.adorsys.aspsp.xs2a.integtest.util.AisConsentService.getConsentFromJsonData(AisConsentService.java:83)\n\tat de.adorsys.aspsp.xs2a.integtest.util.AisConsentService.createConsentWithStatus(AisConsentService.java:63)\n\tat de.adorsys.aspsp.xs2a.integtest.stepdefinitions.ais.CommonSteps.psu_already_has_an_existing_consent(CommonSteps.java:71)\n\tat ✽.Given PSU already has an existing valid consent transaction/transactions-create-consent-with-balance-access.json(AIS_01.feature:271)\n",
              "status": "failed"
            },
            "line": 271,
            "name": "PSU already has an existing valid consent transaction/transactions-create-consent-with-balance-access.json",
            "match": {
              "arguments": [
                {
                  "val": "valid",
                  "offset": 28
                },
                {
                  "val": "transaction/transactions-create-consent-with-balance-access.json",
                  "offset": 42
                }
              ],
              "location": "CommonSteps.psu_already_has_an_existing_consent(String,String)"
            },
            "matchedColumns": [
              1,
              2
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 272,
            "name": "account id 42fb4cc3-91cb-45ba-9159-b87acf6d8add",
            "match": {
              "arguments": [
                {
                  "val": "42fb4cc3-91cb-45ba-9159-b87acf6d8add",
                  "offset": 11
                }
              ],
              "location": "AccountDetailRequestSuccessfulSteps.account_id(String)"
            },
            "matchedColumns": [
              3
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 273,
            "name": "wants to read all transactions errorful using transactions-with-wrong-access.json",
            "match": {
              "arguments": [
                {
                  "val": "transactions-with-wrong-access.json",
                  "offset": 46
                }
              ],
              "location": "TransactionListRequestErrofulSteps.wants_to_read_all_transactions_erroful_using(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 274,
            "name": "PSU requests the transactions erroful",
            "match": {
              "location": "TransactionListRequestErrofulSteps.psu_requests_the_transactions()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 275,
            "name": "an error response code is displayed and an appropriate error response is shown",
            "match": {
              "location": "CommonSteps.checkErrorCodeAndResponse()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 17042919,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 280,
        "name": "Read transaction list erroful",
        "description": "",
        "id": "account-information-service;read-transaction-list-erroful;;4",
        "after": [
          {
            "result": {
              "duration": 226279,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 906610,
              "error_message": "com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field \"tppId\" (class de.adorsys.psd2.consent.api.ais.CreateAisConsentRequest), not marked as ignorable (9 known properties: \"tppRedirectPreferred\", \"tppInfo\", \"allowedFrequencyPerDay\", \"access\", \"psuData\", \"requestedFrequencyPerDay\", \"combinedServiceIndicator\", \"validUntil\", \"recurringIndicator\"])\n at [Source: (String)\"{\n  \"access\": {\n    \"transactions\": [\n      {\n        \"resourceId\": \"42fb4cc3-91cb-45ba-9159-b87acf6d8add\",\n        \"currency\": \"EUR\",\n        \"iban\": \"DE52500105173911841934\"\n      }\n    ]\n  },\n  \"psuData\": {\n    \"psuId\": null\n  },\n  \"combinedServiceIndicator\": false,\n  \"allowedFrequencyPerDay\": 4,\n  \"recurringIndicator\": false,\n  \"tppId\": \"12345987\",\n  \"tppRedirectPreferred\": true,\n  \"validUntil\": \"2020-10-10\"\n}\n\"; line: 17, column: 13] (through reference chain: de.adorsys.psd2.consent.api.ais.CreateAisConsentRequest[\"tppId\"])\n\tat com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:60)\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:823)\n\tat com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:1153)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1589)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1567)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:294)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:151)\n\tat com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4013)\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3004)\n\tat de.adorsys.aspsp.xs2a.integtest.util.AisConsentService.getConsentFromJsonData(AisConsentService.java:83)\n\tat de.adorsys.aspsp.xs2a.integtest.util.AisConsentService.createConsentWithStatus(AisConsentService.java:63)\n\tat de.adorsys.aspsp.xs2a.integtest.stepdefinitions.ais.CommonSteps.psu_already_has_an_existing_consent(CommonSteps.java:71)\n\tat ✽.Given PSU already has an existing valid consent transaction/transactions-create-consent.json(AIS_01.feature:271)\n",
              "status": "failed"
            },
            "line": 271,
            "name": "PSU already has an existing valid consent transaction/transactions-create-consent.json",
            "match": {
              "arguments": [
                {
                  "val": "valid",
                  "offset": 28
                },
                {
                  "val": "transaction/transactions-create-consent.json",
                  "offset": 42
                }
              ],
              "location": "CommonSteps.psu_already_has_an_existing_consent(String,String)"
            },
            "matchedColumns": [
              1,
              2
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 272,
            "name": "account id 11111-999999999",
            "match": {
              "arguments": [
                {
                  "val": "11111-999999999",
                  "offset": 11
                }
              ],
              "location": "AccountDetailRequestSuccessfulSteps.account_id(String)"
            },
            "matchedColumns": [
              3
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 273,
            "name": "wants to read all transactions errorful using transactions-with-accountid-nomatch-consent.json",
            "match": {
              "arguments": [
                {
                  "val": "transactions-with-accountid-nomatch-consent.json",
                  "offset": 46
                }
              ],
              "location": "TransactionListRequestErrofulSteps.wants_to_read_all_transactions_erroful_using(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 274,
            "name": "PSU requests the transactions erroful",
            "match": {
              "location": "TransactionListRequestErrofulSteps.psu_requests_the_transactions()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 275,
            "name": "an error response code is displayed and an appropriate error response is shown",
            "match": {
              "location": "CommonSteps.checkErrorCodeAndResponse()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 17909557,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 281,
        "name": "Read transaction list erroful",
        "description": "",
        "id": "account-information-service;read-transaction-list-erroful;;5",
        "after": [
          {
            "result": {
              "duration": 207095,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 971810,
              "error_message": "com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field \"tppId\" (class de.adorsys.psd2.consent.api.ais.CreateAisConsentRequest), not marked as ignorable (9 known properties: \"tppRedirectPreferred\", \"tppInfo\", \"allowedFrequencyPerDay\", \"access\", \"psuData\", \"requestedFrequencyPerDay\", \"combinedServiceIndicator\", \"validUntil\", \"recurringIndicator\"])\n at [Source: (String)\"{\n  \"access\": {\n    \"transactions\": [\n      {\n        \"resourceId\": \"42fb4cc3-91cb-45ba-9159-b87acf6d8add\",\n        \"currency\": \"EUR\",\n        \"iban\": \"DE52500105173911841934\"\n      }\n    ]\n  },\n  \"psuData\": {\n    \"psuId\": null\n  },\n  \"combinedServiceIndicator\": false,\n  \"allowedFrequencyPerDay\": 4,\n  \"recurringIndicator\": false,\n  \"tppId\": \"12345987\",\n  \"tppRedirectPreferred\": true,\n  \"validUntil\": \"2020-10-10\"\n}\n\"; line: 17, column: 13] (through reference chain: de.adorsys.psd2.consent.api.ais.CreateAisConsentRequest[\"tppId\"])\n\tat com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:60)\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:823)\n\tat com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:1153)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1589)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1567)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:294)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:151)\n\tat com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4013)\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3004)\n\tat de.adorsys.aspsp.xs2a.integtest.util.AisConsentService.getConsentFromJsonData(AisConsentService.java:83)\n\tat de.adorsys.aspsp.xs2a.integtest.util.AisConsentService.createConsentWithStatus(AisConsentService.java:63)\n\tat de.adorsys.aspsp.xs2a.integtest.stepdefinitions.ais.CommonSteps.psu_already_has_an_existing_consent(CommonSteps.java:71)\n\tat ✽.Given PSU already has an existing valid consent transaction/transactions-create-consent.json(AIS_01.feature:271)\n",
              "status": "failed"
            },
            "line": 271,
            "name": "PSU already has an existing valid consent transaction/transactions-create-consent.json",
            "match": {
              "arguments": [
                {
                  "val": "valid",
                  "offset": 28
                },
                {
                  "val": "transaction/transactions-create-consent.json",
                  "offset": 42
                }
              ],
              "location": "CommonSteps.psu_already_has_an_existing_consent(String,String)"
            },
            "matchedColumns": [
              1,
              2
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 272,
            "name": "account id 42fb4cc3-91cb-45ba-9159-b87acf6d8add",
            "match": {
              "arguments": [
                {
                  "val": "42fb4cc3-91cb-45ba-9159-b87acf6d8add",
                  "offset": 11
                }
              ],
              "location": "AccountDetailRequestSuccessfulSteps.account_id(String)"
            },
            "matchedColumns": [
              3
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 273,
            "name": "wants to read all transactions errorful using transactions-wrong-format-request-id.json",
            "match": {
              "arguments": [
                {
                  "val": "transactions-wrong-format-request-id.json",
                  "offset": 46
                }
              ],
              "location": "TransactionListRequestErrofulSteps.wants_to_read_all_transactions_erroful_using(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 274,
            "name": "PSU requests the transactions erroful",
            "match": {
              "location": "TransactionListRequestErrofulSteps.psu_requests_the_transactions()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 275,
            "name": "an error response code is displayed and an appropriate error response is shown",
            "match": {
              "location": "CommonSteps.checkErrorCodeAndResponse()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 17843239,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 282,
        "name": "Read transaction list erroful",
        "description": "",
        "id": "account-information-service;read-transaction-list-erroful;;6",
        "after": [
          {
            "result": {
              "duration": 245780,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 940515,
              "error_message": "com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field \"tppId\" (class de.adorsys.psd2.consent.api.ais.CreateAisConsentRequest), not marked as ignorable (9 known properties: \"tppRedirectPreferred\", \"tppInfo\", \"allowedFrequencyPerDay\", \"access\", \"psuData\", \"requestedFrequencyPerDay\", \"combinedServiceIndicator\", \"validUntil\", \"recurringIndicator\"])\n at [Source: (String)\"{\n  \"access\": {\n    \"transactions\": [\n      {\n        \"resourceId\": \"42fb4cc3-91cb-45ba-9159-b87acf6d8add\",\n        \"currency\": \"EUR\",\n        \"iban\": \"DE52500105173911841934\"\n      }\n    ]\n  },\n  \"psuData\": {\n    \"psuId\": null\n  },\n  \"combinedServiceIndicator\": false,\n  \"allowedFrequencyPerDay\": 4,\n  \"recurringIndicator\": false,\n  \"tppId\": \"12345987\",\n  \"tppRedirectPreferred\": true,\n  \"validUntil\": \"2020-10-10\"\n}\n\"; line: 17, column: 13] (through reference chain: de.adorsys.psd2.consent.api.ais.CreateAisConsentRequest[\"tppId\"])\n\tat com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:60)\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:823)\n\tat com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:1153)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1589)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1567)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:294)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:151)\n\tat com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4013)\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3004)\n\tat de.adorsys.aspsp.xs2a.integtest.util.AisConsentService.getConsentFromJsonData(AisConsentService.java:83)\n\tat de.adorsys.aspsp.xs2a.integtest.util.AisConsentService.createConsentWithStatus(AisConsentService.java:63)\n\tat de.adorsys.aspsp.xs2a.integtest.stepdefinitions.ais.CommonSteps.psu_already_has_an_existing_consent(CommonSteps.java:71)\n\tat ✽.Given PSU already has an existing expired consent transaction/transactions-create-consent.json(AIS_01.feature:271)\n",
              "status": "failed"
            },
            "line": 271,
            "name": "PSU already has an existing expired consent transaction/transactions-create-consent.json",
            "match": {
              "arguments": [
                {
                  "val": "expired",
                  "offset": 28
                },
                {
                  "val": "transaction/transactions-create-consent.json",
                  "offset": 44
                }
              ],
              "location": "CommonSteps.psu_already_has_an_existing_consent(String,String)"
            },
            "matchedColumns": [
              1,
              2
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 272,
            "name": "account id 42fb4cc3-91cb-45ba-9159-b87acf6d8add",
            "match": {
              "arguments": [
                {
                  "val": "42fb4cc3-91cb-45ba-9159-b87acf6d8add",
                  "offset": 11
                }
              ],
              "location": "AccountDetailRequestSuccessfulSteps.account_id(String)"
            },
            "matchedColumns": [
              3
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 273,
            "name": "wants to read all transactions errorful using transactions-with-expired-consent.json",
            "match": {
              "arguments": [
                {
                  "val": "transactions-with-expired-consent.json",
                  "offset": 46
                }
              ],
              "location": "TransactionListRequestErrofulSteps.wants_to_read_all_transactions_erroful_using(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 274,
            "name": "PSU requests the transactions erroful",
            "match": {
              "location": "TransactionListRequestErrofulSteps.psu_requests_the_transactions()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 275,
            "name": "an error response code is displayed and an appropriate error response is shown",
            "match": {
              "location": "CommonSteps.checkErrorCodeAndResponse()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 17297686,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 283,
        "name": "Read transaction list erroful",
        "description": "",
        "id": "account-information-service;read-transaction-list-erroful;;7",
        "after": [
          {
            "result": {
              "duration": 185461,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 827305,
              "error_message": "com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field \"tppId\" (class de.adorsys.psd2.consent.api.ais.CreateAisConsentRequest), not marked as ignorable (9 known properties: \"tppRedirectPreferred\", \"tppInfo\", \"allowedFrequencyPerDay\", \"access\", \"psuData\", \"requestedFrequencyPerDay\", \"combinedServiceIndicator\", \"validUntil\", \"recurringIndicator\"])\n at [Source: (String)\"{\n  \"access\": {\n    \"transactions\": [\n      {\n        \"resourceId\": \"42fb4cc3-91cb-45ba-9159-b87acf6d8add\",\n        \"currency\": \"EUR\",\n        \"iban\": \"DE52500105173911841934\"\n      }\n    ]\n  },\n  \"psuData\": {\n    \"psuId\": null\n  },\n  \"combinedServiceIndicator\": false,\n  \"allowedFrequencyPerDay\": 4,\n  \"recurringIndicator\": false,\n  \"tppId\": \"12345987\",\n  \"tppRedirectPreferred\": true,\n  \"validUntil\": \"2020-10-10\"\n}\n\"; line: 17, column: 13] (through reference chain: de.adorsys.psd2.consent.api.ais.CreateAisConsentRequest[\"tppId\"])\n\tat com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:60)\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:823)\n\tat com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:1153)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1589)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1567)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:294)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:151)\n\tat com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4013)\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3004)\n\tat de.adorsys.aspsp.xs2a.integtest.util.AisConsentService.getConsentFromJsonData(AisConsentService.java:83)\n\tat de.adorsys.aspsp.xs2a.integtest.util.AisConsentService.createConsentWithStatus(AisConsentService.java:63)\n\tat de.adorsys.aspsp.xs2a.integtest.stepdefinitions.ais.CommonSteps.psu_already_has_an_existing_consent(CommonSteps.java:71)\n\tat ✽.Given PSU already has an existing received consent transaction/transactions-create-consent.json(AIS_01.feature:271)\n",
              "status": "failed"
            },
            "line": 271,
            "name": "PSU already has an existing received consent transaction/transactions-create-consent.json",
            "match": {
              "arguments": [
                {
                  "val": "received",
                  "offset": 28
                },
                {
                  "val": "transaction/transactions-create-consent.json",
                  "offset": 45
                }
              ],
              "location": "CommonSteps.psu_already_has_an_existing_consent(String,String)"
            },
            "matchedColumns": [
              1,
              2
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 272,
            "name": "account id 42fb4cc3-91cb-45ba-9159-b87acf6d8add",
            "match": {
              "arguments": [
                {
                  "val": "42fb4cc3-91cb-45ba-9159-b87acf6d8add",
                  "offset": 11
                }
              ],
              "location": "AccountDetailRequestSuccessfulSteps.account_id(String)"
            },
            "matchedColumns": [
              3
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 273,
            "name": "wants to read all transactions errorful using transactions-with-received-consent.json",
            "match": {
              "arguments": [
                {
                  "val": "transactions-with-received-consent.json",
                  "offset": 46
                }
              ],
              "location": "TransactionListRequestErrofulSteps.wants_to_read_all_transactions_erroful_using(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 274,
            "name": "PSU requests the transactions erroful",
            "match": {
              "location": "TransactionListRequestErrofulSteps.psu_requests_the_transactions()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 275,
            "name": "an error response code is displayed and an appropriate error response is shown",
            "match": {
              "location": "CommonSteps.checkErrorCodeAndResponse()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 14614169,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 284,
        "name": "Read transaction list erroful",
        "description": "",
        "id": "account-information-service;read-transaction-list-erroful;;8",
        "after": [
          {
            "result": {
              "duration": 170596,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 845461,
              "error_message": "com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field \"tppId\" (class de.adorsys.psd2.consent.api.ais.CreateAisConsentRequest), not marked as ignorable (9 known properties: \"tppRedirectPreferred\", \"tppInfo\", \"allowedFrequencyPerDay\", \"access\", \"psuData\", \"requestedFrequencyPerDay\", \"combinedServiceIndicator\", \"validUntil\", \"recurringIndicator\"])\n at [Source: (String)\"{\n  \"access\": {\n    \"transactions\": [\n      {\n        \"resourceId\": \"42fb4cc3-91cb-45ba-9159-b87acf6d8add\",\n        \"currency\": \"EUR\",\n        \"iban\": \"DE52500105173911841934\"\n      }\n    ]\n  },\n  \"psuData\": {\n    \"psuId\": null\n  },\n  \"combinedServiceIndicator\": false,\n  \"allowedFrequencyPerDay\": 4,\n  \"recurringIndicator\": false,\n  \"tppId\": \"12345987\",\n  \"tppRedirectPreferred\": true,\n  \"validUntil\": \"2020-10-10\"\n}\n\"; line: 17, column: 13] (through reference chain: de.adorsys.psd2.consent.api.ais.CreateAisConsentRequest[\"tppId\"])\n\tat com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:60)\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:823)\n\tat com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:1153)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1589)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1567)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:294)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:151)\n\tat com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4013)\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3004)\n\tat de.adorsys.aspsp.xs2a.integtest.util.AisConsentService.getConsentFromJsonData(AisConsentService.java:83)\n\tat de.adorsys.aspsp.xs2a.integtest.util.AisConsentService.createConsentWithStatus(AisConsentService.java:63)\n\tat de.adorsys.aspsp.xs2a.integtest.stepdefinitions.ais.CommonSteps.psu_already_has_an_existing_consent(CommonSteps.java:71)\n\tat ✽.Given PSU already has an existing rejected consent transaction/transactions-create-consent.json(AIS_01.feature:271)\n",
              "status": "failed"
            },
            "line": 271,
            "name": "PSU already has an existing rejected consent transaction/transactions-create-consent.json",
            "match": {
              "arguments": [
                {
                  "val": "rejected",
                  "offset": 28
                },
                {
                  "val": "transaction/transactions-create-consent.json",
                  "offset": 45
                }
              ],
              "location": "CommonSteps.psu_already_has_an_existing_consent(String,String)"
            },
            "matchedColumns": [
              1,
              2
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 272,
            "name": "account id 42fb4cc3-91cb-45ba-9159-b87acf6d8add",
            "match": {
              "arguments": [
                {
                  "val": "42fb4cc3-91cb-45ba-9159-b87acf6d8add",
                  "offset": 11
                }
              ],
              "location": "AccountDetailRequestSuccessfulSteps.account_id(String)"
            },
            "matchedColumns": [
              3
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 273,
            "name": "wants to read all transactions errorful using transactions-with-rejected-consent.json",
            "match": {
              "arguments": [
                {
                  "val": "transactions-with-rejected-consent.json",
                  "offset": 46
                }
              ],
              "location": "TransactionListRequestErrofulSteps.wants_to_read_all_transactions_erroful_using(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 274,
            "name": "PSU requests the transactions erroful",
            "match": {
              "location": "TransactionListRequestErrofulSteps.psu_requests_the_transactions()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 275,
            "name": "an error response code is displayed and an appropriate error response is shown",
            "match": {
              "location": "CommonSteps.checkErrorCodeAndResponse()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 16670357,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 285,
        "name": "Read transaction list erroful",
        "description": "",
        "id": "account-information-service;read-transaction-list-erroful;;9",
        "after": [
          {
            "result": {
              "duration": 185345,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 765268,
              "error_message": "com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field \"tppId\" (class de.adorsys.psd2.consent.api.ais.CreateAisConsentRequest), not marked as ignorable (9 known properties: \"tppRedirectPreferred\", \"tppInfo\", \"allowedFrequencyPerDay\", \"access\", \"psuData\", \"requestedFrequencyPerDay\", \"combinedServiceIndicator\", \"validUntil\", \"recurringIndicator\"])\n at [Source: (String)\"{\n  \"access\": {\n    \"transactions\": [\n      {\n        \"resourceId\": \"42fb4cc3-91cb-45ba-9159-b87acf6d8add\",\n        \"currency\": \"EUR\",\n        \"iban\": \"DE52500105173911841934\"\n      }\n    ]\n  },\n  \"psuData\": {\n    \"psuId\": null\n  },\n  \"combinedServiceIndicator\": false,\n  \"allowedFrequencyPerDay\": 4,\n  \"recurringIndicator\": false,\n  \"tppId\": \"12345987\",\n  \"tppRedirectPreferred\": true,\n  \"validUntil\": \"2020-10-10\"\n}\n\"; line: 17, column: 13] (through reference chain: de.adorsys.psd2.consent.api.ais.CreateAisConsentRequest[\"tppId\"])\n\tat com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:60)\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:823)\n\tat com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:1153)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1589)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1567)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:294)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:151)\n\tat com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4013)\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3004)\n\tat de.adorsys.aspsp.xs2a.integtest.util.AisConsentService.getConsentFromJsonData(AisConsentService.java:83)\n\tat de.adorsys.aspsp.xs2a.integtest.util.AisConsentService.createConsentWithStatus(AisConsentService.java:63)\n\tat de.adorsys.aspsp.xs2a.integtest.stepdefinitions.ais.CommonSteps.psu_already_has_an_existing_consent(CommonSteps.java:71)\n\tat ✽.Given PSU already has an existing revokedByPsu consent transaction/transactions-create-consent.json(AIS_01.feature:271)\n",
              "status": "failed"
            },
            "line": 271,
            "name": "PSU already has an existing revokedByPsu consent transaction/transactions-create-consent.json",
            "match": {
              "arguments": [
                {
                  "val": "revokedByPsu",
                  "offset": 28
                },
                {
                  "val": "transaction/transactions-create-consent.json",
                  "offset": 49
                }
              ],
              "location": "CommonSteps.psu_already_has_an_existing_consent(String,String)"
            },
            "matchedColumns": [
              1,
              2
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 272,
            "name": "account id 42fb4cc3-91cb-45ba-9159-b87acf6d8add",
            "match": {
              "arguments": [
                {
                  "val": "42fb4cc3-91cb-45ba-9159-b87acf6d8add",
                  "offset": 11
                }
              ],
              "location": "AccountDetailRequestSuccessfulSteps.account_id(String)"
            },
            "matchedColumns": [
              3
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 273,
            "name": "wants to read all transactions errorful using transactions-with-revokedByPsu-consent.json",
            "match": {
              "arguments": [
                {
                  "val": "transactions-with-revokedByPsu-consent.json",
                  "offset": 46
                }
              ],
              "location": "TransactionListRequestErrofulSteps.wants_to_read_all_transactions_erroful_using(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 274,
            "name": "PSU requests the transactions erroful",
            "match": {
              "location": "TransactionListRequestErrofulSteps.psu_requests_the_transactions()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 275,
            "name": "an error response code is displayed and an appropriate error response is shown",
            "match": {
              "location": "CommonSteps.checkErrorCodeAndResponse()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 14784231,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 286,
        "name": "Read transaction list erroful",
        "description": "",
        "id": "account-information-service;read-transaction-list-erroful;;10",
        "after": [
          {
            "result": {
              "duration": 185562,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 922929,
              "error_message": "com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field \"tppId\" (class de.adorsys.psd2.consent.api.ais.CreateAisConsentRequest), not marked as ignorable (9 known properties: \"tppRedirectPreferred\", \"tppInfo\", \"allowedFrequencyPerDay\", \"access\", \"psuData\", \"requestedFrequencyPerDay\", \"combinedServiceIndicator\", \"validUntil\", \"recurringIndicator\"])\n at [Source: (String)\"{\n  \"access\": {\n    \"transactions\": [\n      {\n        \"resourceId\": \"42fb4cc3-91cb-45ba-9159-b87acf6d8add\",\n        \"currency\": \"EUR\",\n        \"iban\": \"DE52500105173911841934\"\n      }\n    ]\n  },\n  \"psuData\": {\n    \"psuId\": null\n  },\n  \"combinedServiceIndicator\": false,\n  \"allowedFrequencyPerDay\": 4,\n  \"recurringIndicator\": false,\n  \"tppId\": \"12345987\",\n  \"tppRedirectPreferred\": true,\n  \"validUntil\": \"2020-10-10\"\n}\n\"; line: 17, column: 13] (through reference chain: de.adorsys.psd2.consent.api.ais.CreateAisConsentRequest[\"tppId\"])\n\tat com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:60)\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:823)\n\tat com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:1153)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1589)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1567)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:294)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:151)\n\tat com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4013)\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3004)\n\tat de.adorsys.aspsp.xs2a.integtest.util.AisConsentService.getConsentFromJsonData(AisConsentService.java:83)\n\tat de.adorsys.aspsp.xs2a.integtest.util.AisConsentService.createConsentWithStatus(AisConsentService.java:63)\n\tat de.adorsys.aspsp.xs2a.integtest.stepdefinitions.ais.CommonSteps.psu_already_has_an_existing_consent(CommonSteps.java:71)\n\tat ✽.Given PSU already has an existing terminatedByTpp consent transaction/transactions-create-consent.json(AIS_01.feature:271)\n",
              "status": "failed"
            },
            "line": 271,
            "name": "PSU already has an existing terminatedByTpp consent transaction/transactions-create-consent.json",
            "match": {
              "arguments": [
                {
                  "val": "terminatedByTpp",
                  "offset": 28
                },
                {
                  "val": "transaction/transactions-create-consent.json",
                  "offset": 52
                }
              ],
              "location": "CommonSteps.psu_already_has_an_existing_consent(String,String)"
            },
            "matchedColumns": [
              1,
              2
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 272,
            "name": "account id 42fb4cc3-91cb-45ba-9159-b87acf6d8add",
            "match": {
              "arguments": [
                {
                  "val": "42fb4cc3-91cb-45ba-9159-b87acf6d8add",
                  "offset": 11
                }
              ],
              "location": "AccountDetailRequestSuccessfulSteps.account_id(String)"
            },
            "matchedColumns": [
              3
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 273,
            "name": "wants to read all transactions errorful using transactions-with-terminatedByTpp-consent.json",
            "match": {
              "arguments": [
                {
                  "val": "transactions-with-terminatedByTpp-consent.json",
                  "offset": 46
                }
              ],
              "location": "TransactionListRequestErrofulSteps.wants_to_read_all_transactions_erroful_using(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 274,
            "name": "PSU requests the transactions erroful",
            "match": {
              "location": "TransactionListRequestErrofulSteps.psu_requests_the_transactions()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 275,
            "name": "an error response code is displayed and an appropriate error response is shown",
            "match": {
              "location": "CommonSteps.checkErrorCodeAndResponse()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 13156564,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 287,
        "name": "Read transaction list erroful",
        "description": "",
        "id": "account-information-service;read-transaction-list-erroful;;11",
        "after": [
          {
            "result": {
              "duration": 170847,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 851020,
              "error_message": "com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field \"tppId\" (class de.adorsys.psd2.consent.api.ais.CreateAisConsentRequest), not marked as ignorable (9 known properties: \"tppRedirectPreferred\", \"tppInfo\", \"allowedFrequencyPerDay\", \"access\", \"psuData\", \"requestedFrequencyPerDay\", \"combinedServiceIndicator\", \"validUntil\", \"recurringIndicator\"])\n at [Source: (String)\"{\n  \"access\": {\n    \"transactions\": [\n      {\n        \"resourceId\": \"42fb4cc3-91cb-45ba-9159-b87acf6d8add\",\n        \"currency\": \"EUR\",\n        \"iban\": \"DE52500105173911841934\"\n      }\n    ]\n  },\n  \"psuData\": {\n    \"psuId\": null\n  },\n  \"combinedServiceIndicator\": false,\n  \"allowedFrequencyPerDay\": 0,\n  \"recurringIndicator\": false,\n  \"tppId\": \"12345987\",\n  \"tppRedirectPreferred\": true,\n  \"validUntil\": \"2020-10-10\"\n}\n\"; line: 17, column: 13] (through reference chain: de.adorsys.psd2.consent.api.ais.CreateAisConsentRequest[\"tppId\"])\n\tat com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:60)\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:823)\n\tat com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:1153)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1589)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1567)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:294)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:151)\n\tat com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4013)\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3004)\n\tat de.adorsys.aspsp.xs2a.integtest.util.AisConsentService.getConsentFromJsonData(AisConsentService.java:83)\n\tat de.adorsys.aspsp.xs2a.integtest.util.AisConsentService.createConsentWithStatus(AisConsentService.java:63)\n\tat de.adorsys.aspsp.xs2a.integtest.stepdefinitions.ais.CommonSteps.psu_already_has_an_existing_consent(CommonSteps.java:71)\n\tat ✽.Given PSU already has an existing valid consent transaction/transactions-create-consent-exceeded.json(AIS_01.feature:271)\n",
              "status": "failed"
            },
            "line": 271,
            "name": "PSU already has an existing valid consent transaction/transactions-create-consent-exceeded.json",
            "match": {
              "arguments": [
                {
                  "val": "valid",
                  "offset": 28
                },
                {
                  "val": "transaction/transactions-create-consent-exceeded.json",
                  "offset": 42
                }
              ],
              "location": "CommonSteps.psu_already_has_an_existing_consent(String,String)"
            },
            "matchedColumns": [
              1,
              2
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 272,
            "name": "account id 42fb4cc3-91cb-45ba-9159-b87acf6d8add",
            "match": {
              "arguments": [
                {
                  "val": "42fb4cc3-91cb-45ba-9159-b87acf6d8add",
                  "offset": 11
                }
              ],
              "location": "AccountDetailRequestSuccessfulSteps.account_id(String)"
            },
            "matchedColumns": [
              3
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 273,
            "name": "wants to read all transactions errorful using transactions-with-exceeded-frequencePerDay-consent.json",
            "match": {
              "arguments": [
                {
                  "val": "transactions-with-exceeded-frequencePerDay-consent.json",
                  "offset": 46
                }
              ],
              "location": "TransactionListRequestErrofulSteps.wants_to_read_all_transactions_erroful_using(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 274,
            "name": "PSU requests the transactions erroful",
            "match": {
              "location": "TransactionListRequestErrofulSteps.psu_requests_the_transactions()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 275,
            "name": "an error response code is displayed and an appropriate error response is shown",
            "match": {
              "location": "CommonSteps.checkErrorCodeAndResponse()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 20070058,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 299,
        "name": "Read transaction details successfully",
        "description": "",
        "id": "account-information-service;read-transaction-details-successfully;;2",
        "after": [
          {
            "result": {
              "duration": 182557,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 947129,
              "error_message": "com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field \"tppId\" (class de.adorsys.psd2.consent.api.ais.CreateAisConsentRequest), not marked as ignorable (9 known properties: \"tppRedirectPreferred\", \"tppInfo\", \"allowedFrequencyPerDay\", \"access\", \"psuData\", \"requestedFrequencyPerDay\", \"combinedServiceIndicator\", \"validUntil\", \"recurringIndicator\"])\n at [Source: (String)\"{\n  \"access\": {\n    \"transactions\": [\n      {\n        \"resourceId\": \"42fb4cc3-91cb-45ba-9159-b87acf6d8add\",\n        \"currency\": \"EUR\",\n        \"iban\": \"DE52500105173911841934\"\n      }\n    ]\n  },\n  \"psuData\": {\n    \"psuId\": null\n  },\n  \"combinedServiceIndicator\": false,\n  \"allowedFrequencyPerDay\": 4,\n  \"recurringIndicator\": false,\n  \"tppId\": \"12345987\",\n  \"tppRedirectPreferred\": true,\n  \"validUntil\": \"2020-10-10\"\n}\n\"; line: 17, column: 13] (through reference chain: de.adorsys.psd2.consent.api.ais.CreateAisConsentRequest[\"tppId\"])\n\tat com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:60)\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:823)\n\tat com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:1153)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1589)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1567)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:294)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:151)\n\tat com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4013)\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3004)\n\tat de.adorsys.aspsp.xs2a.integtest.util.AisConsentService.getConsentFromJsonData(AisConsentService.java:83)\n\tat de.adorsys.aspsp.xs2a.integtest.util.AisConsentService.createConsentWithStatus(AisConsentService.java:63)\n\tat de.adorsys.aspsp.xs2a.integtest.stepdefinitions.ais.CommonSteps.psu_already_has_an_existing_consent(CommonSteps.java:71)\n\tat ✽.Given PSU already has an existing valid consent transaction/transactions-create-consent.json(AIS_01.feature:291)\n",
              "status": "failed"
            },
            "line": 291,
            "name": "PSU already has an existing valid consent transaction/transactions-create-consent.json",
            "match": {
              "arguments": [
                {
                  "val": "valid",
                  "offset": 28
                },
                {
                  "val": "transaction/transactions-create-consent.json",
                  "offset": 42
                }
              ],
              "location": "CommonSteps.psu_already_has_an_existing_consent(String,String)"
            },
            "matchedColumns": [
              0,
              4
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 292,
            "name": "account id 42fb4cc3-91cb-45ba-9159-b87acf6d8add",
            "match": {
              "arguments": [
                {
                  "val": "42fb4cc3-91cb-45ba-9159-b87acf6d8add",
                  "offset": 11
                }
              ],
              "location": "AccountDetailRequestSuccessfulSteps.account_id(String)"
            },
            "matchedColumns": [
              1
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 293,
            "name": "wants to read the transaction details using transactionDetail-successful.json",
            "match": {
              "arguments": [
                {
                  "val": "transactionDetail-successful.json",
                  "offset": 44
                }
              ],
              "location": "TransactionDetailRequestSuccessfulSteps.wants_to_read_the_transaction_details_using(String)"
            },
            "matchedColumns": [
              2
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 294,
            "name": "resource id ba8f7012-bdaf-4ada-bbf7-4c004d046ffe",
            "match": {
              "arguments": [
                {
                  "val": "ba8f7012-bdaf-4ada-bbf7-4c004d046ffe",
                  "offset": 12
                }
              ],
              "location": "TransactionDetailRequestSuccessfulSteps.resource_id(String)"
            },
            "matchedColumns": [
              3
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 295,
            "name": "PSU requests the transaction details",
            "match": {
              "location": "TransactionDetailRequestSuccessfulSteps.psu_requests_the_transaction_details()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 296,
            "name": "a successful response code and the appropriate detail of transaction get returned",
            "match": {
              "location": "TransactionDetailRequestSuccessfulSteps.a_successful_response_code_and_the_appropriate_detail_of_transaction_get_returned()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 15854168,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 310,
        "name": "Read transaction details errorful",
        "description": "",
        "id": "account-information-service;read-transaction-details-errorful;;2",
        "after": [
          {
            "result": {
              "duration": 185914,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 856935,
              "error_message": "com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field \"tppId\" (class de.adorsys.psd2.consent.api.ais.CreateAisConsentRequest), not marked as ignorable (9 known properties: \"tppRedirectPreferred\", \"tppInfo\", \"allowedFrequencyPerDay\", \"access\", \"psuData\", \"requestedFrequencyPerDay\", \"combinedServiceIndicator\", \"validUntil\", \"recurringIndicator\"])\n at [Source: (String)\"{\n  \"access\": {\n    \"accounts\": [\n      {\n        \"resourceId\": \"42fb4cc3-91cb-45ba-9159-b87acf6d8add\",\n        \"currency\": \"EUR\",\n        \"iban\": \"DE52500105173911841934\"\n      }\n    ]\n  },\n  \"psuData\": {\n    \"psuId\": null\n  },\n  \"combinedServiceIndicator\": false,\n  \"allowedFrequencyPerDay\": 4,\n  \"recurringIndicator\": false,\n  \"tppId\": \"12345987\",\n  \"tppRedirectPreferred\": true,\n  \"validUntil\": \"2020-10-10\"\n}\n\"; line: 17, column: 13] (through reference chain: de.adorsys.psd2.consent.api.ais.CreateAisConsentRequest[\"tppId\"])\n\tat com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:60)\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:823)\n\tat com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:1153)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1589)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1567)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:294)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:151)\n\tat com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4013)\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3004)\n\tat de.adorsys.aspsp.xs2a.integtest.util.AisConsentService.getConsentFromJsonData(AisConsentService.java:83)\n\tat de.adorsys.aspsp.xs2a.integtest.util.AisConsentService.createConsentWithStatus(AisConsentService.java:63)\n\tat de.adorsys.aspsp.xs2a.integtest.stepdefinitions.ais.CommonSteps.psu_already_has_an_existing_consent(CommonSteps.java:71)\n\tat ✽.Given PSU already has an existing valid consent transaction/transactions-create-consent-with-account-access.json(AIS_01.feature:302)\n",
              "status": "failed"
            },
            "line": 302,
            "name": "PSU already has an existing valid consent transaction/transactions-create-consent-with-account-access.json",
            "match": {
              "arguments": [
                {
                  "val": "valid",
                  "offset": 28
                },
                {
                  "val": "transaction/transactions-create-consent-with-account-access.json",
                  "offset": 42
                }
              ],
              "location": "CommonSteps.psu_already_has_an_existing_consent(String,String)"
            },
            "matchedColumns": [
              1,
              2
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 303,
            "name": "account id 42fb4cc3-91cb-45ba-9159-b87acf6d8add",
            "match": {
              "arguments": [
                {
                  "val": "42fb4cc3-91cb-45ba-9159-b87acf6d8add",
                  "offset": 11
                }
              ],
              "location": "AccountDetailRequestSuccessfulSteps.account_id(String)"
            },
            "matchedColumns": [
              3
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 304,
            "name": "wants to read the transaction details errorful using transactions-with-wrong-access.json",
            "match": {
              "arguments": [
                {
                  "val": "transactions-with-wrong-access.json",
                  "offset": 53
                }
              ],
              "location": "TransactionDetailRequestErrorfulSteps.wants_to_read_the_transaction_details_errorful_using(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 305,
            "name": "resource id ba8f7012-bdaf-4ada-bbf7-4c004d046ffe",
            "match": {
              "arguments": [
                {
                  "val": "ba8f7012-bdaf-4ada-bbf7-4c004d046ffe",
                  "offset": 12
                }
              ],
              "location": "TransactionDetailRequestSuccessfulSteps.resource_id(String)"
            },
            "matchedColumns": [
              4
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 306,
            "name": "PSU requests the transaction details errorful",
            "match": {
              "location": "TransactionDetailRequestErrorfulSteps.psu_requests_the_transaction_details_errorful()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 307,
            "name": "an error response code is displayed and an appropriate error response is shown",
            "match": {
              "location": "CommonSteps.checkErrorCodeAndResponse()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 16525141,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 311,
        "name": "Read transaction details errorful",
        "description": "",
        "id": "account-information-service;read-transaction-details-errorful;;3",
        "after": [
          {
            "result": {
              "duration": 211413,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 958170,
              "error_message": "com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field \"tppId\" (class de.adorsys.psd2.consent.api.ais.CreateAisConsentRequest), not marked as ignorable (9 known properties: \"tppRedirectPreferred\", \"tppInfo\", \"allowedFrequencyPerDay\", \"access\", \"psuData\", \"requestedFrequencyPerDay\", \"combinedServiceIndicator\", \"validUntil\", \"recurringIndicator\"])\n at [Source: (String)\"{\n  \"access\": {\n    \"balances\": [\n      {\n        \"resourceId\": \"42fb4cc3-91cb-45ba-9159-b87acf6d8add\",\n        \"currency\": \"EUR\",\n        \"iban\": \"DE52500105173911841934\"\n      }\n    ]\n  },\n  \"psuData\": {\n    \"psuId\": null\n  },\n  \"combinedServiceIndicator\": false,\n  \"allowedFrequencyPerDay\": 4,\n  \"recurringIndicator\": false,\n  \"tppId\": \"12345987\",\n  \"tppRedirectPreferred\": true,\n  \"validUntil\": \"2020-10-10\"\n}\n\"; line: 17, column: 13] (through reference chain: de.adorsys.psd2.consent.api.ais.CreateAisConsentRequest[\"tppId\"])\n\tat com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:60)\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:823)\n\tat com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:1153)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1589)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1567)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:294)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:151)\n\tat com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4013)\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3004)\n\tat de.adorsys.aspsp.xs2a.integtest.util.AisConsentService.getConsentFromJsonData(AisConsentService.java:83)\n\tat de.adorsys.aspsp.xs2a.integtest.util.AisConsentService.createConsentWithStatus(AisConsentService.java:63)\n\tat de.adorsys.aspsp.xs2a.integtest.stepdefinitions.ais.CommonSteps.psu_already_has_an_existing_consent(CommonSteps.java:71)\n\tat ✽.Given PSU already has an existing valid consent transaction/transactions-create-consent-with-balance-access.json(AIS_01.feature:302)\n",
              "status": "failed"
            },
            "line": 302,
            "name": "PSU already has an existing valid consent transaction/transactions-create-consent-with-balance-access.json",
            "match": {
              "arguments": [
                {
                  "val": "valid",
                  "offset": 28
                },
                {
                  "val": "transaction/transactions-create-consent-with-balance-access.json",
                  "offset": 42
                }
              ],
              "location": "CommonSteps.psu_already_has_an_existing_consent(String,String)"
            },
            "matchedColumns": [
              1,
              2
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 303,
            "name": "account id 42fb4cc3-91cb-45ba-9159-b87acf6d8add",
            "match": {
              "arguments": [
                {
                  "val": "42fb4cc3-91cb-45ba-9159-b87acf6d8add",
                  "offset": 11
                }
              ],
              "location": "AccountDetailRequestSuccessfulSteps.account_id(String)"
            },
            "matchedColumns": [
              3
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 304,
            "name": "wants to read the transaction details errorful using transactions-with-wrong-access.json",
            "match": {
              "arguments": [
                {
                  "val": "transactions-with-wrong-access.json",
                  "offset": 53
                }
              ],
              "location": "TransactionDetailRequestErrorfulSteps.wants_to_read_the_transaction_details_errorful_using(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 305,
            "name": "resource id ba8f7012-bdaf-4ada-bbf7-4c004d046ffe",
            "match": {
              "arguments": [
                {
                  "val": "ba8f7012-bdaf-4ada-bbf7-4c004d046ffe",
                  "offset": 12
                }
              ],
              "location": "TransactionDetailRequestSuccessfulSteps.resource_id(String)"
            },
            "matchedColumns": [
              4
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 306,
            "name": "PSU requests the transaction details errorful",
            "match": {
              "location": "TransactionDetailRequestErrorfulSteps.psu_requests_the_transaction_details_errorful()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 307,
            "name": "an error response code is displayed and an appropriate error response is shown",
            "match": {
              "location": "CommonSteps.checkErrorCodeAndResponse()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 13807432,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 312,
        "name": "Read transaction details errorful",
        "description": "",
        "id": "account-information-service;read-transaction-details-errorful;;4",
        "after": [
          {
            "result": {
              "duration": 184988,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 816645,
              "error_message": "com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field \"tppId\" (class de.adorsys.psd2.consent.api.ais.CreateAisConsentRequest), not marked as ignorable (9 known properties: \"tppRedirectPreferred\", \"tppInfo\", \"allowedFrequencyPerDay\", \"access\", \"psuData\", \"requestedFrequencyPerDay\", \"combinedServiceIndicator\", \"validUntil\", \"recurringIndicator\"])\n at [Source: (String)\"{\n  \"access\": {\n    \"transactions\": [\n      {\n        \"resourceId\": \"42fb4cc3-91cb-45ba-9159-b87acf6d8add\",\n        \"currency\": \"EUR\",\n        \"iban\": \"DE52500105173911841934\"\n      }\n    ]\n  },\n  \"psuData\": {\n    \"psuId\": null\n  },\n  \"combinedServiceIndicator\": false,\n  \"allowedFrequencyPerDay\": 4,\n  \"recurringIndicator\": false,\n  \"tppId\": \"12345987\",\n  \"tppRedirectPreferred\": true,\n  \"validUntil\": \"2020-10-10\"\n}\n\"; line: 17, column: 13] (through reference chain: de.adorsys.psd2.consent.api.ais.CreateAisConsentRequest[\"tppId\"])\n\tat com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:60)\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:823)\n\tat com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:1153)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1589)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1567)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:294)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:151)\n\tat com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4013)\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3004)\n\tat de.adorsys.aspsp.xs2a.integtest.util.AisConsentService.getConsentFromJsonData(AisConsentService.java:83)\n\tat de.adorsys.aspsp.xs2a.integtest.util.AisConsentService.createConsentWithStatus(AisConsentService.java:63)\n\tat de.adorsys.aspsp.xs2a.integtest.stepdefinitions.ais.CommonSteps.psu_already_has_an_existing_consent(CommonSteps.java:71)\n\tat ✽.Given PSU already has an existing valid consent transaction/transactions-create-consent.json(AIS_01.feature:302)\n",
              "status": "failed"
            },
            "line": 302,
            "name": "PSU already has an existing valid consent transaction/transactions-create-consent.json",
            "match": {
              "arguments": [
                {
                  "val": "valid",
                  "offset": 28
                },
                {
                  "val": "transaction/transactions-create-consent.json",
                  "offset": 42
                }
              ],
              "location": "CommonSteps.psu_already_has_an_existing_consent(String,String)"
            },
            "matchedColumns": [
              1,
              2
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 303,
            "name": "account id 11111-999999999",
            "match": {
              "arguments": [
                {
                  "val": "11111-999999999",
                  "offset": 11
                }
              ],
              "location": "AccountDetailRequestSuccessfulSteps.account_id(String)"
            },
            "matchedColumns": [
              3
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 304,
            "name": "wants to read the transaction details errorful using transactions-with-accountid-nomatch-consent.json",
            "match": {
              "arguments": [
                {
                  "val": "transactions-with-accountid-nomatch-consent.json",
                  "offset": 53
                }
              ],
              "location": "TransactionDetailRequestErrorfulSteps.wants_to_read_the_transaction_details_errorful_using(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 305,
            "name": "resource id ba8f7012-bdaf-4ada-bbf7-4c004d046ffe",
            "match": {
              "arguments": [
                {
                  "val": "ba8f7012-bdaf-4ada-bbf7-4c004d046ffe",
                  "offset": 12
                }
              ],
              "location": "TransactionDetailRequestSuccessfulSteps.resource_id(String)"
            },
            "matchedColumns": [
              4
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 306,
            "name": "PSU requests the transaction details errorful",
            "match": {
              "location": "TransactionDetailRequestErrorfulSteps.psu_requests_the_transaction_details_errorful()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 307,
            "name": "an error response code is displayed and an appropriate error response is shown",
            "match": {
              "location": "CommonSteps.checkErrorCodeAndResponse()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 12177951,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 313,
        "name": "Read transaction details errorful",
        "description": "",
        "id": "account-information-service;read-transaction-details-errorful;;5",
        "after": [
          {
            "result": {
              "duration": 127798,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 581838,
              "error_message": "com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field \"tppId\" (class de.adorsys.psd2.consent.api.ais.CreateAisConsentRequest), not marked as ignorable (9 known properties: \"tppRedirectPreferred\", \"tppInfo\", \"allowedFrequencyPerDay\", \"access\", \"psuData\", \"requestedFrequencyPerDay\", \"combinedServiceIndicator\", \"validUntil\", \"recurringIndicator\"])\n at [Source: (String)\"{\n  \"access\": {\n    \"transactions\": [\n      {\n        \"resourceId\": \"42fb4cc3-91cb-45ba-9159-b87acf6d8add\",\n        \"currency\": \"EUR\",\n        \"iban\": \"DE52500105173911841934\"\n      }\n    ]\n  },\n  \"psuData\": {\n    \"psuId\": null\n  },\n  \"combinedServiceIndicator\": false,\n  \"allowedFrequencyPerDay\": 4,\n  \"recurringIndicator\": false,\n  \"tppId\": \"12345987\",\n  \"tppRedirectPreferred\": true,\n  \"validUntil\": \"2020-10-10\"\n}\n\"; line: 17, column: 13] (through reference chain: de.adorsys.psd2.consent.api.ais.CreateAisConsentRequest[\"tppId\"])\n\tat com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:60)\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:823)\n\tat com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:1153)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1589)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1567)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:294)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:151)\n\tat com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4013)\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3004)\n\tat de.adorsys.aspsp.xs2a.integtest.util.AisConsentService.getConsentFromJsonData(AisConsentService.java:83)\n\tat de.adorsys.aspsp.xs2a.integtest.util.AisConsentService.createConsentWithStatus(AisConsentService.java:63)\n\tat de.adorsys.aspsp.xs2a.integtest.stepdefinitions.ais.CommonSteps.psu_already_has_an_existing_consent(CommonSteps.java:71)\n\tat ✽.Given PSU already has an existing valid consent transaction/transactions-create-consent.json(AIS_01.feature:302)\n",
              "status": "failed"
            },
            "line": 302,
            "name": "PSU already has an existing valid consent transaction/transactions-create-consent.json",
            "match": {
              "arguments": [
                {
                  "val": "valid",
                  "offset": 28
                },
                {
                  "val": "transaction/transactions-create-consent.json",
                  "offset": 42
                }
              ],
              "location": "CommonSteps.psu_already_has_an_existing_consent(String,String)"
            },
            "matchedColumns": [
              1,
              2
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 303,
            "name": "account id 42fb4cc3-91cb-45ba-9159-b87acf6d8add",
            "match": {
              "arguments": [
                {
                  "val": "42fb4cc3-91cb-45ba-9159-b87acf6d8add",
                  "offset": 11
                }
              ],
              "location": "AccountDetailRequestSuccessfulSteps.account_id(String)"
            },
            "matchedColumns": [
              3
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 304,
            "name": "wants to read the transaction details errorful using transactions-wrong-format-request-id.json",
            "match": {
              "arguments": [
                {
                  "val": "transactions-wrong-format-request-id.json",
                  "offset": 53
                }
              ],
              "location": "TransactionDetailRequestErrorfulSteps.wants_to_read_the_transaction_details_errorful_using(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 305,
            "name": "resource id ba8f7012-bdaf-4ada-bbf7-4c004d046ffe",
            "match": {
              "arguments": [
                {
                  "val": "ba8f7012-bdaf-4ada-bbf7-4c004d046ffe",
                  "offset": 12
                }
              ],
              "location": "TransactionDetailRequestSuccessfulSteps.resource_id(String)"
            },
            "matchedColumns": [
              4
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 306,
            "name": "PSU requests the transaction details errorful",
            "match": {
              "location": "TransactionDetailRequestErrorfulSteps.psu_requests_the_transaction_details_errorful()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 307,
            "name": "an error response code is displayed and an appropriate error response is shown",
            "match": {
              "location": "CommonSteps.checkErrorCodeAndResponse()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 12026169,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 314,
        "name": "Read transaction details errorful",
        "description": "",
        "id": "account-information-service;read-transaction-details-errorful;;6",
        "after": [
          {
            "result": {
              "duration": 121767,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 776298,
              "error_message": "com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field \"tppId\" (class de.adorsys.psd2.consent.api.ais.CreateAisConsentRequest), not marked as ignorable (9 known properties: \"tppRedirectPreferred\", \"tppInfo\", \"allowedFrequencyPerDay\", \"access\", \"psuData\", \"requestedFrequencyPerDay\", \"combinedServiceIndicator\", \"validUntil\", \"recurringIndicator\"])\n at [Source: (String)\"{\n  \"access\": {\n    \"transactions\": [\n      {\n        \"resourceId\": \"42fb4cc3-91cb-45ba-9159-b87acf6d8add\",\n        \"currency\": \"EUR\",\n        \"iban\": \"DE52500105173911841934\"\n      }\n    ]\n  },\n  \"psuData\": {\n    \"psuId\": null\n  },\n  \"combinedServiceIndicator\": false,\n  \"allowedFrequencyPerDay\": 4,\n  \"recurringIndicator\": false,\n  \"tppId\": \"12345987\",\n  \"tppRedirectPreferred\": true,\n  \"validUntil\": \"2020-10-10\"\n}\n\"; line: 17, column: 13] (through reference chain: de.adorsys.psd2.consent.api.ais.CreateAisConsentRequest[\"tppId\"])\n\tat com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:60)\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:823)\n\tat com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:1153)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1589)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1567)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:294)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:151)\n\tat com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4013)\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3004)\n\tat de.adorsys.aspsp.xs2a.integtest.util.AisConsentService.getConsentFromJsonData(AisConsentService.java:83)\n\tat de.adorsys.aspsp.xs2a.integtest.util.AisConsentService.createConsentWithStatus(AisConsentService.java:63)\n\tat de.adorsys.aspsp.xs2a.integtest.stepdefinitions.ais.CommonSteps.psu_already_has_an_existing_consent(CommonSteps.java:71)\n\tat ✽.Given PSU already has an existing expired consent transaction/transactions-create-consent.json(AIS_01.feature:302)\n",
              "status": "failed"
            },
            "line": 302,
            "name": "PSU already has an existing expired consent transaction/transactions-create-consent.json",
            "match": {
              "arguments": [
                {
                  "val": "expired",
                  "offset": 28
                },
                {
                  "val": "transaction/transactions-create-consent.json",
                  "offset": 44
                }
              ],
              "location": "CommonSteps.psu_already_has_an_existing_consent(String,String)"
            },
            "matchedColumns": [
              1,
              2
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 303,
            "name": "account id 42fb4cc3-91cb-45ba-9159-b87acf6d8add",
            "match": {
              "arguments": [
                {
                  "val": "42fb4cc3-91cb-45ba-9159-b87acf6d8add",
                  "offset": 11
                }
              ],
              "location": "AccountDetailRequestSuccessfulSteps.account_id(String)"
            },
            "matchedColumns": [
              3
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 304,
            "name": "wants to read the transaction details errorful using transactions-with-expired-consent.json",
            "match": {
              "arguments": [
                {
                  "val": "transactions-with-expired-consent.json",
                  "offset": 53
                }
              ],
              "location": "TransactionDetailRequestErrorfulSteps.wants_to_read_the_transaction_details_errorful_using(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 305,
            "name": "resource id ba8f7012-bdaf-4ada-bbf7-4c004d046ffe",
            "match": {
              "arguments": [
                {
                  "val": "ba8f7012-bdaf-4ada-bbf7-4c004d046ffe",
                  "offset": 12
                }
              ],
              "location": "TransactionDetailRequestSuccessfulSteps.resource_id(String)"
            },
            "matchedColumns": [
              4
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 306,
            "name": "PSU requests the transaction details errorful",
            "match": {
              "location": "TransactionDetailRequestErrorfulSteps.psu_requests_the_transaction_details_errorful()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 307,
            "name": "an error response code is displayed and an appropriate error response is shown",
            "match": {
              "location": "CommonSteps.checkErrorCodeAndResponse()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 12448288,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 315,
        "name": "Read transaction details errorful",
        "description": "",
        "id": "account-information-service;read-transaction-details-errorful;;7",
        "after": [
          {
            "result": {
              "duration": 170992,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 609428,
              "error_message": "com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field \"tppId\" (class de.adorsys.psd2.consent.api.ais.CreateAisConsentRequest), not marked as ignorable (9 known properties: \"tppRedirectPreferred\", \"tppInfo\", \"allowedFrequencyPerDay\", \"access\", \"psuData\", \"requestedFrequencyPerDay\", \"combinedServiceIndicator\", \"validUntil\", \"recurringIndicator\"])\n at [Source: (String)\"{\n  \"access\": {\n    \"transactions\": [\n      {\n        \"resourceId\": \"42fb4cc3-91cb-45ba-9159-b87acf6d8add\",\n        \"currency\": \"EUR\",\n        \"iban\": \"DE52500105173911841934\"\n      }\n    ]\n  },\n  \"psuData\": {\n    \"psuId\": null\n  },\n  \"combinedServiceIndicator\": false,\n  \"allowedFrequencyPerDay\": 4,\n  \"recurringIndicator\": false,\n  \"tppId\": \"12345987\",\n  \"tppRedirectPreferred\": true,\n  \"validUntil\": \"2020-10-10\"\n}\n\"; line: 17, column: 13] (through reference chain: de.adorsys.psd2.consent.api.ais.CreateAisConsentRequest[\"tppId\"])\n\tat com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:60)\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:823)\n\tat com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:1153)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1589)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1567)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:294)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:151)\n\tat com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4013)\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3004)\n\tat de.adorsys.aspsp.xs2a.integtest.util.AisConsentService.getConsentFromJsonData(AisConsentService.java:83)\n\tat de.adorsys.aspsp.xs2a.integtest.util.AisConsentService.createConsentWithStatus(AisConsentService.java:63)\n\tat de.adorsys.aspsp.xs2a.integtest.stepdefinitions.ais.CommonSteps.psu_already_has_an_existing_consent(CommonSteps.java:71)\n\tat ✽.Given PSU already has an existing received consent transaction/transactions-create-consent.json(AIS_01.feature:302)\n",
              "status": "failed"
            },
            "line": 302,
            "name": "PSU already has an existing received consent transaction/transactions-create-consent.json",
            "match": {
              "arguments": [
                {
                  "val": "received",
                  "offset": 28
                },
                {
                  "val": "transaction/transactions-create-consent.json",
                  "offset": 45
                }
              ],
              "location": "CommonSteps.psu_already_has_an_existing_consent(String,String)"
            },
            "matchedColumns": [
              1,
              2
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 303,
            "name": "account id 42fb4cc3-91cb-45ba-9159-b87acf6d8add",
            "match": {
              "arguments": [
                {
                  "val": "42fb4cc3-91cb-45ba-9159-b87acf6d8add",
                  "offset": 11
                }
              ],
              "location": "AccountDetailRequestSuccessfulSteps.account_id(String)"
            },
            "matchedColumns": [
              3
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 304,
            "name": "wants to read the transaction details errorful using transactions-with-received-consent.json",
            "match": {
              "arguments": [
                {
                  "val": "transactions-with-received-consent.json",
                  "offset": 53
                }
              ],
              "location": "TransactionDetailRequestErrorfulSteps.wants_to_read_the_transaction_details_errorful_using(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 305,
            "name": "resource id ba8f7012-bdaf-4ada-bbf7-4c004d046ffe",
            "match": {
              "arguments": [
                {
                  "val": "ba8f7012-bdaf-4ada-bbf7-4c004d046ffe",
                  "offset": 12
                }
              ],
              "location": "TransactionDetailRequestSuccessfulSteps.resource_id(String)"
            },
            "matchedColumns": [
              4
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 306,
            "name": "PSU requests the transaction details errorful",
            "match": {
              "location": "TransactionDetailRequestErrorfulSteps.psu_requests_the_transaction_details_errorful()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 307,
            "name": "an error response code is displayed and an appropriate error response is shown",
            "match": {
              "location": "CommonSteps.checkErrorCodeAndResponse()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 13432845,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 316,
        "name": "Read transaction details errorful",
        "description": "",
        "id": "account-information-service;read-transaction-details-errorful;;8",
        "after": [
          {
            "result": {
              "duration": 132616,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 868956,
              "error_message": "com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field \"tppId\" (class de.adorsys.psd2.consent.api.ais.CreateAisConsentRequest), not marked as ignorable (9 known properties: \"tppRedirectPreferred\", \"tppInfo\", \"allowedFrequencyPerDay\", \"access\", \"psuData\", \"requestedFrequencyPerDay\", \"combinedServiceIndicator\", \"validUntil\", \"recurringIndicator\"])\n at [Source: (String)\"{\n  \"access\": {\n    \"transactions\": [\n      {\n        \"resourceId\": \"42fb4cc3-91cb-45ba-9159-b87acf6d8add\",\n        \"currency\": \"EUR\",\n        \"iban\": \"DE52500105173911841934\"\n      }\n    ]\n  },\n  \"psuData\": {\n    \"psuId\": null\n  },\n  \"combinedServiceIndicator\": false,\n  \"allowedFrequencyPerDay\": 4,\n  \"recurringIndicator\": false,\n  \"tppId\": \"12345987\",\n  \"tppRedirectPreferred\": true,\n  \"validUntil\": \"2020-10-10\"\n}\n\"; line: 17, column: 13] (through reference chain: de.adorsys.psd2.consent.api.ais.CreateAisConsentRequest[\"tppId\"])\n\tat com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:60)\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:823)\n\tat com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:1153)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1589)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1567)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:294)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:151)\n\tat com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4013)\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3004)\n\tat de.adorsys.aspsp.xs2a.integtest.util.AisConsentService.getConsentFromJsonData(AisConsentService.java:83)\n\tat de.adorsys.aspsp.xs2a.integtest.util.AisConsentService.createConsentWithStatus(AisConsentService.java:63)\n\tat de.adorsys.aspsp.xs2a.integtest.stepdefinitions.ais.CommonSteps.psu_already_has_an_existing_consent(CommonSteps.java:71)\n\tat ✽.Given PSU already has an existing rejected consent transaction/transactions-create-consent.json(AIS_01.feature:302)\n",
              "status": "failed"
            },
            "line": 302,
            "name": "PSU already has an existing rejected consent transaction/transactions-create-consent.json",
            "match": {
              "arguments": [
                {
                  "val": "rejected",
                  "offset": 28
                },
                {
                  "val": "transaction/transactions-create-consent.json",
                  "offset": 45
                }
              ],
              "location": "CommonSteps.psu_already_has_an_existing_consent(String,String)"
            },
            "matchedColumns": [
              1,
              2
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 303,
            "name": "account id 42fb4cc3-91cb-45ba-9159-b87acf6d8add",
            "match": {
              "arguments": [
                {
                  "val": "42fb4cc3-91cb-45ba-9159-b87acf6d8add",
                  "offset": 11
                }
              ],
              "location": "AccountDetailRequestSuccessfulSteps.account_id(String)"
            },
            "matchedColumns": [
              3
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 304,
            "name": "wants to read the transaction details errorful using transactions-with-rejected-consent.json",
            "match": {
              "arguments": [
                {
                  "val": "transactions-with-rejected-consent.json",
                  "offset": 53
                }
              ],
              "location": "TransactionDetailRequestErrorfulSteps.wants_to_read_the_transaction_details_errorful_using(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 305,
            "name": "resource id ba8f7012-bdaf-4ada-bbf7-4c004d046ffe",
            "match": {
              "arguments": [
                {
                  "val": "ba8f7012-bdaf-4ada-bbf7-4c004d046ffe",
                  "offset": 12
                }
              ],
              "location": "TransactionDetailRequestSuccessfulSteps.resource_id(String)"
            },
            "matchedColumns": [
              4
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 306,
            "name": "PSU requests the transaction details errorful",
            "match": {
              "location": "TransactionDetailRequestErrorfulSteps.psu_requests_the_transaction_details_errorful()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 307,
            "name": "an error response code is displayed and an appropriate error response is shown",
            "match": {
              "location": "CommonSteps.checkErrorCodeAndResponse()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 13380676,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 317,
        "name": "Read transaction details errorful",
        "description": "",
        "id": "account-information-service;read-transaction-details-errorful;;9",
        "after": [
          {
            "result": {
              "duration": 165216,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 940425,
              "error_message": "com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field \"tppId\" (class de.adorsys.psd2.consent.api.ais.CreateAisConsentRequest), not marked as ignorable (9 known properties: \"tppRedirectPreferred\", \"tppInfo\", \"allowedFrequencyPerDay\", \"access\", \"psuData\", \"requestedFrequencyPerDay\", \"combinedServiceIndicator\", \"validUntil\", \"recurringIndicator\"])\n at [Source: (String)\"{\n  \"access\": {\n    \"transactions\": [\n      {\n        \"resourceId\": \"42fb4cc3-91cb-45ba-9159-b87acf6d8add\",\n        \"currency\": \"EUR\",\n        \"iban\": \"DE52500105173911841934\"\n      }\n    ]\n  },\n  \"psuData\": {\n    \"psuId\": null\n  },\n  \"combinedServiceIndicator\": false,\n  \"allowedFrequencyPerDay\": 4,\n  \"recurringIndicator\": false,\n  \"tppId\": \"12345987\",\n  \"tppRedirectPreferred\": true,\n  \"validUntil\": \"2020-10-10\"\n}\n\"; line: 17, column: 13] (through reference chain: de.adorsys.psd2.consent.api.ais.CreateAisConsentRequest[\"tppId\"])\n\tat com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:60)\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:823)\n\tat com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:1153)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1589)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1567)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:294)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:151)\n\tat com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4013)\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3004)\n\tat de.adorsys.aspsp.xs2a.integtest.util.AisConsentService.getConsentFromJsonData(AisConsentService.java:83)\n\tat de.adorsys.aspsp.xs2a.integtest.util.AisConsentService.createConsentWithStatus(AisConsentService.java:63)\n\tat de.adorsys.aspsp.xs2a.integtest.stepdefinitions.ais.CommonSteps.psu_already_has_an_existing_consent(CommonSteps.java:71)\n\tat ✽.Given PSU already has an existing revokedByPsu consent transaction/transactions-create-consent.json(AIS_01.feature:302)\n",
              "status": "failed"
            },
            "line": 302,
            "name": "PSU already has an existing revokedByPsu consent transaction/transactions-create-consent.json",
            "match": {
              "arguments": [
                {
                  "val": "revokedByPsu",
                  "offset": 28
                },
                {
                  "val": "transaction/transactions-create-consent.json",
                  "offset": 49
                }
              ],
              "location": "CommonSteps.psu_already_has_an_existing_consent(String,String)"
            },
            "matchedColumns": [
              1,
              2
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 303,
            "name": "account id 42fb4cc3-91cb-45ba-9159-b87acf6d8add",
            "match": {
              "arguments": [
                {
                  "val": "42fb4cc3-91cb-45ba-9159-b87acf6d8add",
                  "offset": 11
                }
              ],
              "location": "AccountDetailRequestSuccessfulSteps.account_id(String)"
            },
            "matchedColumns": [
              3
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 304,
            "name": "wants to read the transaction details errorful using transactions-with-revokedByPsu-consent.json",
            "match": {
              "arguments": [
                {
                  "val": "transactions-with-revokedByPsu-consent.json",
                  "offset": 53
                }
              ],
              "location": "TransactionDetailRequestErrorfulSteps.wants_to_read_the_transaction_details_errorful_using(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 305,
            "name": "resource id ba8f7012-bdaf-4ada-bbf7-4c004d046ffe",
            "match": {
              "arguments": [
                {
                  "val": "ba8f7012-bdaf-4ada-bbf7-4c004d046ffe",
                  "offset": 12
                }
              ],
              "location": "TransactionDetailRequestSuccessfulSteps.resource_id(String)"
            },
            "matchedColumns": [
              4
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 306,
            "name": "PSU requests the transaction details errorful",
            "match": {
              "location": "TransactionDetailRequestErrorfulSteps.psu_requests_the_transaction_details_errorful()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 307,
            "name": "an error response code is displayed and an appropriate error response is shown",
            "match": {
              "location": "CommonSteps.checkErrorCodeAndResponse()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 11751245,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 318,
        "name": "Read transaction details errorful",
        "description": "",
        "id": "account-information-service;read-transaction-details-errorful;;10",
        "after": [
          {
            "result": {
              "duration": 136640,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 658992,
              "error_message": "com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field \"tppId\" (class de.adorsys.psd2.consent.api.ais.CreateAisConsentRequest), not marked as ignorable (9 known properties: \"tppRedirectPreferred\", \"tppInfo\", \"allowedFrequencyPerDay\", \"access\", \"psuData\", \"requestedFrequencyPerDay\", \"combinedServiceIndicator\", \"validUntil\", \"recurringIndicator\"])\n at [Source: (String)\"{\n  \"access\": {\n    \"transactions\": [\n      {\n        \"resourceId\": \"42fb4cc3-91cb-45ba-9159-b87acf6d8add\",\n        \"currency\": \"EUR\",\n        \"iban\": \"DE52500105173911841934\"\n      }\n    ]\n  },\n  \"psuData\": {\n    \"psuId\": null\n  },\n  \"combinedServiceIndicator\": false,\n  \"allowedFrequencyPerDay\": 4,\n  \"recurringIndicator\": false,\n  \"tppId\": \"12345987\",\n  \"tppRedirectPreferred\": true,\n  \"validUntil\": \"2020-10-10\"\n}\n\"; line: 17, column: 13] (through reference chain: de.adorsys.psd2.consent.api.ais.CreateAisConsentRequest[\"tppId\"])\n\tat com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:60)\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:823)\n\tat com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:1153)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1589)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1567)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:294)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:151)\n\tat com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4013)\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3004)\n\tat de.adorsys.aspsp.xs2a.integtest.util.AisConsentService.getConsentFromJsonData(AisConsentService.java:83)\n\tat de.adorsys.aspsp.xs2a.integtest.util.AisConsentService.createConsentWithStatus(AisConsentService.java:63)\n\tat de.adorsys.aspsp.xs2a.integtest.stepdefinitions.ais.CommonSteps.psu_already_has_an_existing_consent(CommonSteps.java:71)\n\tat ✽.Given PSU already has an existing terminatedByTpp consent transaction/transactions-create-consent.json(AIS_01.feature:302)\n",
              "status": "failed"
            },
            "line": 302,
            "name": "PSU already has an existing terminatedByTpp consent transaction/transactions-create-consent.json",
            "match": {
              "arguments": [
                {
                  "val": "terminatedByTpp",
                  "offset": 28
                },
                {
                  "val": "transaction/transactions-create-consent.json",
                  "offset": 52
                }
              ],
              "location": "CommonSteps.psu_already_has_an_existing_consent(String,String)"
            },
            "matchedColumns": [
              1,
              2
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 303,
            "name": "account id 42fb4cc3-91cb-45ba-9159-b87acf6d8add",
            "match": {
              "arguments": [
                {
                  "val": "42fb4cc3-91cb-45ba-9159-b87acf6d8add",
                  "offset": 11
                }
              ],
              "location": "AccountDetailRequestSuccessfulSteps.account_id(String)"
            },
            "matchedColumns": [
              3
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 304,
            "name": "wants to read the transaction details errorful using transactions-with-terminatedByTpp-consent.json",
            "match": {
              "arguments": [
                {
                  "val": "transactions-with-terminatedByTpp-consent.json",
                  "offset": 53
                }
              ],
              "location": "TransactionDetailRequestErrorfulSteps.wants_to_read_the_transaction_details_errorful_using(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 305,
            "name": "resource id ba8f7012-bdaf-4ada-bbf7-4c004d046ffe",
            "match": {
              "arguments": [
                {
                  "val": "ba8f7012-bdaf-4ada-bbf7-4c004d046ffe",
                  "offset": 12
                }
              ],
              "location": "TransactionDetailRequestSuccessfulSteps.resource_id(String)"
            },
            "matchedColumns": [
              4
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 306,
            "name": "PSU requests the transaction details errorful",
            "match": {
              "location": "TransactionDetailRequestErrorfulSteps.psu_requests_the_transaction_details_errorful()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 307,
            "name": "an error response code is displayed and an appropriate error response is shown",
            "match": {
              "location": "CommonSteps.checkErrorCodeAndResponse()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 14457609,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 319,
        "name": "Read transaction details errorful",
        "description": "",
        "id": "account-information-service;read-transaction-details-errorful;;11",
        "after": [
          {
            "result": {
              "duration": 212808,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 737582,
              "error_message": "com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field \"tppId\" (class de.adorsys.psd2.consent.api.ais.CreateAisConsentRequest), not marked as ignorable (9 known properties: \"tppRedirectPreferred\", \"tppInfo\", \"allowedFrequencyPerDay\", \"access\", \"psuData\", \"requestedFrequencyPerDay\", \"combinedServiceIndicator\", \"validUntil\", \"recurringIndicator\"])\n at [Source: (String)\"{\n  \"access\": {\n    \"transactions\": [\n      {\n        \"resourceId\": \"42fb4cc3-91cb-45ba-9159-b87acf6d8add\",\n        \"currency\": \"EUR\",\n        \"iban\": \"DE52500105173911841934\"\n      }\n    ]\n  },\n  \"psuData\": {\n    \"psuId\": null\n  },\n  \"combinedServiceIndicator\": false,\n  \"allowedFrequencyPerDay\": 0,\n  \"recurringIndicator\": false,\n  \"tppId\": \"12345987\",\n  \"tppRedirectPreferred\": true,\n  \"validUntil\": \"2020-10-10\"\n}\n\"; line: 17, column: 13] (through reference chain: de.adorsys.psd2.consent.api.ais.CreateAisConsentRequest[\"tppId\"])\n\tat com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:60)\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:823)\n\tat com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:1153)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1589)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1567)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:294)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:151)\n\tat com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4013)\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3004)\n\tat de.adorsys.aspsp.xs2a.integtest.util.AisConsentService.getConsentFromJsonData(AisConsentService.java:83)\n\tat de.adorsys.aspsp.xs2a.integtest.util.AisConsentService.createConsentWithStatus(AisConsentService.java:63)\n\tat de.adorsys.aspsp.xs2a.integtest.stepdefinitions.ais.CommonSteps.psu_already_has_an_existing_consent(CommonSteps.java:71)\n\tat ✽.Given PSU already has an existing valid consent transaction/transactions-create-consent-exceeded.json(AIS_01.feature:302)\n",
              "status": "failed"
            },
            "line": 302,
            "name": "PSU already has an existing valid consent transaction/transactions-create-consent-exceeded.json",
            "match": {
              "arguments": [
                {
                  "val": "valid",
                  "offset": 28
                },
                {
                  "val": "transaction/transactions-create-consent-exceeded.json",
                  "offset": 42
                }
              ],
              "location": "CommonSteps.psu_already_has_an_existing_consent(String,String)"
            },
            "matchedColumns": [
              1,
              2
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 303,
            "name": "account id 42fb4cc3-91cb-45ba-9159-b87acf6d8add",
            "match": {
              "arguments": [
                {
                  "val": "42fb4cc3-91cb-45ba-9159-b87acf6d8add",
                  "offset": 11
                }
              ],
              "location": "AccountDetailRequestSuccessfulSteps.account_id(String)"
            },
            "matchedColumns": [
              3
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 304,
            "name": "wants to read the transaction details errorful using transactions-with-exceeded-frequencePerDay-consent.json",
            "match": {
              "arguments": [
                {
                  "val": "transactions-with-exceeded-frequencePerDay-consent.json",
                  "offset": 53
                }
              ],
              "location": "TransactionDetailRequestErrorfulSteps.wants_to_read_the_transaction_details_errorful_using(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 305,
            "name": "resource id ba8f7012-bdaf-4ada-bbf7-4c004d046ffe",
            "match": {
              "arguments": [
                {
                  "val": "ba8f7012-bdaf-4ada-bbf7-4c004d046ffe",
                  "offset": 12
                }
              ],
              "location": "TransactionDetailRequestSuccessfulSteps.resource_id(String)"
            },
            "matchedColumns": [
              4
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 306,
            "name": "PSU requests the transaction details errorful",
            "match": {
              "location": "TransactionDetailRequestErrorfulSteps.psu_requests_the_transaction_details_errorful()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 307,
            "name": "an error response code is displayed and an appropriate error response is shown",
            "match": {
              "location": "CommonSteps.checkErrorCodeAndResponse()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 12181460,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 336,
        "name": "Successful Start Authorisation of Consent creation (embedded)",
        "description": "",
        "id": "account-information-service;successful-start-authorisation-of-consent-creation-(embedded);;2",
        "after": [
          {
            "result": {
              "duration": 164278,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 743561,
              "status": "passed"
            },
            "line": 329,
            "name": "PSU wants to create a consent consent-all-accounts-successful.json",
            "match": {
              "arguments": [
                {
                  "val": "consent-all-accounts-successful.json",
                  "offset": 30
                }
              ],
              "location": "ConsentRequestSuccessfulSteps.loadTestData(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1530667224,
              "status": "passed"
            },
            "line": 330,
            "name": "PSU sends the create consent request",
            "match": {
              "location": "ConsentRequestSuccessfulSteps.sendConsentRequest()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7617829,
              "status": "passed"
            },
            "line": 331,
            "name": "PSU wants to start the authorisation for consent creation using the authorisation data startAuth-successful.json",
            "match": {
              "arguments": [
                {
                  "val": "startAuth-successful.json",
                  "offset": 87
                }
              ],
              "location": "AuthorisationStartConsentCreationSuccessfulSteps.loadAuthorisationData(String)"
            },
            "matchedColumns": [
              1
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 454529048,
              "status": "passed"
            },
            "line": 332,
            "name": "PSU sends the start authorisation request for consent creation",
            "match": {
              "location": "AuthorisationStartConsentCreationSuccessfulSteps.sendStartAuthorisationRequestForConsent()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3542145,
              "status": "passed"
            },
            "line": 333,
            "name": "PSU checks if a link is received and the SCA status is correct",
            "match": {
              "location": "StartAuthorisationSuccessfulSteps.checkLinkAndScaStatusEmbedded()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 11839904,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 337,
        "name": "Successful Start Authorisation of Consent creation (embedded)",
        "description": "",
        "id": "account-information-service;successful-start-authorisation-of-consent-creation-(embedded);;3",
        "after": [
          {
            "result": {
              "duration": 180808,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 928913,
              "status": "passed"
            },
            "line": 329,
            "name": "PSU wants to create a consent consent-dedicated-successful.json",
            "match": {
              "arguments": [
                {
                  "val": "consent-dedicated-successful.json",
                  "offset": 30
                }
              ],
              "location": "ConsentRequestSuccessfulSteps.loadTestData(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1438385474,
              "status": "passed"
            },
            "line": 330,
            "name": "PSU sends the create consent request",
            "match": {
              "location": "ConsentRequestSuccessfulSteps.sendConsentRequest()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 494654,
              "status": "passed"
            },
            "line": 331,
            "name": "PSU wants to start the authorisation for consent creation using the authorisation data startAuth-successful.json",
            "match": {
              "arguments": [
                {
                  "val": "startAuth-successful.json",
                  "offset": 87
                }
              ],
              "location": "AuthorisationStartConsentCreationSuccessfulSteps.loadAuthorisationData(String)"
            },
            "matchedColumns": [
              1
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 427637020,
              "status": "passed"
            },
            "line": 332,
            "name": "PSU sends the start authorisation request for consent creation",
            "match": {
              "location": "AuthorisationStartConsentCreationSuccessfulSteps.sendStartAuthorisationRequestForConsent()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 192584,
              "status": "passed"
            },
            "line": 333,
            "name": "PSU checks if a link is received and the SCA status is correct",
            "match": {
              "location": "StartAuthorisationSuccessfulSteps.checkLinkAndScaStatusEmbedded()"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Account Information Service",
    "description": "",
    "id": "account-information-service",
    "keyword": "Feature",
    "uri": "AIS_01.feature"
  },
  {
    "line": 1,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 10037162,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 17,
        "name": "Successful consent creation with explicit start of authorisation",
        "description": "",
        "id": "account-information-service---embedded-approach;successful-consent-creation-with-explicit-start-of-authorisation;;2",
        "after": [
          {
            "result": {
              "duration": 149802,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 539979,
              "status": "passed"
            },
            "line": 9,
            "name": "PSU wants to create a consent consent-dedicated-successful.json",
            "match": {
              "arguments": [
                {
                  "val": "consent-dedicated-successful.json",
                  "offset": 30
                }
              ],
              "location": "ConsentRequestSuccessfulSteps.loadTestData(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 16808107,
              "error_message": "org.springframework.web.client.HttpClientErrorException: 404 null\n\tat org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:108)\n\tat org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:708)\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:661)\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:621)\n\tat org.springframework.web.client.RestTemplate.put(RestTemplate.java:440)\n\tat de.adorsys.aspsp.xs2a.integtest.stepdefinitions.ais.CommonSteps.signingBasketSupportedIsTrue(CommonSteps.java:79)\n\tat ✽.And ASPSP-profile contains parameter signingBasketSupported is true(AIS_Embedded.feature:10)\n",
              "status": "failed"
            },
            "line": 10,
            "name": "ASPSP-profile contains parameter signingBasketSupported is true",
            "match": {
              "arguments": [
                {
                  "val": "true",
                  "offset": 59
                }
              ],
              "location": "CommonSteps.signingBasketSupportedIsTrue(Boolean)"
            },
            "matchedColumns": [
              1
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 11,
            "name": "parameter TPP-Explicit-Authorisation-Preferred is true",
            "match": {
              "arguments": [
                {
                  "val": "true",
                  "offset": 50
                }
              ],
              "location": "CommonSteps.tppExplicitAuthorisationPreferredHeaderIsTrue(Boolean)"
            },
            "matchedColumns": [
              2
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 12,
            "name": "PSU sends the create consent request",
            "match": {
              "location": "ConsentRequestSuccessfulSteps.sendConsentRequest()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 13,
            "name": "a successful response code and the appropriate consent response data is delivered to the PSU",
            "match": {
              "location": "ConsentRequestSuccessfulSteps.checkResponseCode()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 14,
            "name": "response contains link startAuthorisation",
            "match": {
              "location": "ConsentRequestExpliciteStartAuthorizationSuccessfulSteps.checkStartAuthorisation()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 9988973,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 18,
        "name": "Successful consent creation with explicit start of authorisation",
        "description": "",
        "id": "account-information-service---embedded-approach;successful-consent-creation-with-explicit-start-of-authorisation;;3",
        "after": [
          {
            "result": {
              "duration": 156070,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 617954,
              "status": "passed"
            },
            "line": 9,
            "name": "PSU wants to create a consent consent-all-accounts-successful.json",
            "match": {
              "arguments": [
                {
                  "val": "consent-all-accounts-successful.json",
                  "offset": 30
                }
              ],
              "location": "ConsentRequestSuccessfulSteps.loadTestData(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 3602867,
              "error_message": "org.springframework.web.client.HttpClientErrorException: 404 null\n\tat org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:108)\n\tat org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:708)\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:661)\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:621)\n\tat org.springframework.web.client.RestTemplate.put(RestTemplate.java:440)\n\tat de.adorsys.aspsp.xs2a.integtest.stepdefinitions.ais.CommonSteps.signingBasketSupportedIsTrue(CommonSteps.java:79)\n\tat ✽.And ASPSP-profile contains parameter signingBasketSupported is true(AIS_Embedded.feature:10)\n",
              "status": "failed"
            },
            "line": 10,
            "name": "ASPSP-profile contains parameter signingBasketSupported is true",
            "match": {
              "arguments": [
                {
                  "val": "true",
                  "offset": 59
                }
              ],
              "location": "CommonSteps.signingBasketSupportedIsTrue(Boolean)"
            },
            "matchedColumns": [
              1
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 11,
            "name": "parameter TPP-Explicit-Authorisation-Preferred is true",
            "match": {
              "arguments": [
                {
                  "val": "true",
                  "offset": 50
                }
              ],
              "location": "CommonSteps.tppExplicitAuthorisationPreferredHeaderIsTrue(Boolean)"
            },
            "matchedColumns": [
              2
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 12,
            "name": "PSU sends the create consent request",
            "match": {
              "location": "ConsentRequestSuccessfulSteps.sendConsentRequest()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 13,
            "name": "a successful response code and the appropriate consent response data is delivered to the PSU",
            "match": {
              "location": "ConsentRequestSuccessfulSteps.checkResponseCode()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 14,
            "name": "response contains link startAuthorisation",
            "match": {
              "location": "ConsentRequestExpliciteStartAuthorizationSuccessfulSteps.checkStartAuthorisation()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 8651259,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 29,
        "name": "Successful consent creation with implicit start of authorisation",
        "description": "",
        "id": "account-information-service---embedded-approach;successful-consent-creation-with-implicit-start-of-authorisation;;2",
        "after": [
          {
            "result": {
              "duration": 159403,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 687014,
              "status": "passed"
            },
            "line": 21,
            "name": "PSU wants to create a consent consent-dedicated-successful.json",
            "match": {
              "arguments": [
                {
                  "val": "consent-dedicated-successful.json",
                  "offset": 30
                }
              ],
              "location": "ConsentRequestSuccessfulSteps.loadTestData(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 3176742,
              "error_message": "org.springframework.web.client.HttpClientErrorException: 404 null\n\tat org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:108)\n\tat org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:708)\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:661)\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:621)\n\tat org.springframework.web.client.RestTemplate.put(RestTemplate.java:440)\n\tat de.adorsys.aspsp.xs2a.integtest.stepdefinitions.ais.CommonSteps.signingBasketSupportedIsTrue(CommonSteps.java:79)\n\tat ✽.And ASPSP-profile contains parameter signingBasketSupported is false(AIS_Embedded.feature:22)\n",
              "status": "failed"
            },
            "line": 22,
            "name": "ASPSP-profile contains parameter signingBasketSupported is false",
            "match": {
              "arguments": [
                {
                  "val": "false",
                  "offset": 59
                }
              ],
              "location": "CommonSteps.signingBasketSupportedIsTrue(Boolean)"
            },
            "matchedColumns": [
              1
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 23,
            "name": "parameter TPP-Explicit-Authorisation-Preferred is true",
            "match": {
              "arguments": [
                {
                  "val": "true",
                  "offset": 50
                }
              ],
              "location": "CommonSteps.tppExplicitAuthorisationPreferredHeaderIsTrue(Boolean)"
            },
            "matchedColumns": [
              2
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 24,
            "name": "PSU sends the create consent request",
            "match": {
              "location": "ConsentRequestSuccessfulSteps.sendConsentRequest()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 25,
            "name": "a successful response code and the appropriate consent response data is delivered to the PSU",
            "match": {
              "location": "ConsentRequestSuccessfulSteps.checkResponseCode()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 26,
            "name": "response contains link startAuthorisationWIthPsuAuthentication",
            "match": {
              "location": "ConsentRequestImpliciteStartAuthorizationSuccessfulSteps.checkStartAuthorisationWIthPsuAuthentication()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 8995256,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 30,
        "name": "Successful consent creation with implicit start of authorisation",
        "description": "",
        "id": "account-information-service---embedded-approach;successful-consent-creation-with-implicit-start-of-authorisation;;3",
        "after": [
          {
            "result": {
              "duration": 123047,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 503689,
              "status": "passed"
            },
            "line": 21,
            "name": "PSU wants to create a consent consent-dedicated-successful.json",
            "match": {
              "arguments": [
                {
                  "val": "consent-dedicated-successful.json",
                  "offset": 30
                }
              ],
              "location": "ConsentRequestSuccessfulSteps.loadTestData(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 3140588,
              "error_message": "org.springframework.web.client.HttpClientErrorException: 404 null\n\tat org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:108)\n\tat org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:708)\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:661)\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:621)\n\tat org.springframework.web.client.RestTemplate.put(RestTemplate.java:440)\n\tat de.adorsys.aspsp.xs2a.integtest.stepdefinitions.ais.CommonSteps.signingBasketSupportedIsTrue(CommonSteps.java:79)\n\tat ✽.And ASPSP-profile contains parameter signingBasketSupported is true(AIS_Embedded.feature:22)\n",
              "status": "failed"
            },
            "line": 22,
            "name": "ASPSP-profile contains parameter signingBasketSupported is true",
            "match": {
              "arguments": [
                {
                  "val": "true",
                  "offset": 59
                }
              ],
              "location": "CommonSteps.signingBasketSupportedIsTrue(Boolean)"
            },
            "matchedColumns": [
              1
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 23,
            "name": "parameter TPP-Explicit-Authorisation-Preferred is false",
            "match": {
              "arguments": [
                {
                  "val": "false",
                  "offset": 50
                }
              ],
              "location": "CommonSteps.tppExplicitAuthorisationPreferredHeaderIsTrue(Boolean)"
            },
            "matchedColumns": [
              2
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 24,
            "name": "PSU sends the create consent request",
            "match": {
              "location": "ConsentRequestSuccessfulSteps.sendConsentRequest()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 25,
            "name": "a successful response code and the appropriate consent response data is delivered to the PSU",
            "match": {
              "location": "ConsentRequestSuccessfulSteps.checkResponseCode()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 26,
            "name": "response contains link startAuthorisationWIthPsuAuthentication",
            "match": {
              "location": "ConsentRequestImpliciteStartAuthorizationSuccessfulSteps.checkStartAuthorisationWIthPsuAuthentication()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 10572317,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 31,
        "name": "Successful consent creation with implicit start of authorisation",
        "description": "",
        "id": "account-information-service---embedded-approach;successful-consent-creation-with-implicit-start-of-authorisation;;4",
        "after": [
          {
            "result": {
              "duration": 194617,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 602254,
              "status": "passed"
            },
            "line": 21,
            "name": "PSU wants to create a consent consent-dedicated-successful.json",
            "match": {
              "arguments": [
                {
                  "val": "consent-dedicated-successful.json",
                  "offset": 30
                }
              ],
              "location": "ConsentRequestSuccessfulSteps.loadTestData(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 4432446,
              "error_message": "org.springframework.web.client.HttpClientErrorException: 404 null\n\tat org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:108)\n\tat org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:708)\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:661)\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:621)\n\tat org.springframework.web.client.RestTemplate.put(RestTemplate.java:440)\n\tat de.adorsys.aspsp.xs2a.integtest.stepdefinitions.ais.CommonSteps.signingBasketSupportedIsTrue(CommonSteps.java:79)\n\tat ✽.And ASPSP-profile contains parameter signingBasketSupported is false(AIS_Embedded.feature:22)\n",
              "status": "failed"
            },
            "line": 22,
            "name": "ASPSP-profile contains parameter signingBasketSupported is false",
            "match": {
              "arguments": [
                {
                  "val": "false",
                  "offset": 59
                }
              ],
              "location": "CommonSteps.signingBasketSupportedIsTrue(Boolean)"
            },
            "matchedColumns": [
              1
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 23,
            "name": "parameter TPP-Explicit-Authorisation-Preferred is false",
            "match": {
              "arguments": [
                {
                  "val": "false",
                  "offset": 50
                }
              ],
              "location": "CommonSteps.tppExplicitAuthorisationPreferredHeaderIsTrue(Boolean)"
            },
            "matchedColumns": [
              2
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 24,
            "name": "PSU sends the create consent request",
            "match": {
              "location": "ConsentRequestSuccessfulSteps.sendConsentRequest()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 25,
            "name": "a successful response code and the appropriate consent response data is delivered to the PSU",
            "match": {
              "location": "ConsentRequestSuccessfulSteps.checkResponseCode()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 26,
            "name": "response contains link startAuthorisationWIthPsuAuthentication",
            "match": {
              "location": "ConsentRequestImpliciteStartAuthorizationSuccessfulSteps.checkStartAuthorisationWIthPsuAuthentication()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 10192602,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 32,
        "name": "Successful consent creation with implicit start of authorisation",
        "description": "",
        "id": "account-information-service---embedded-approach;successful-consent-creation-with-implicit-start-of-authorisation;;5",
        "after": [
          {
            "result": {
              "duration": 148017,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 455097,
              "status": "passed"
            },
            "line": 21,
            "name": "PSU wants to create a consent consent-dedicated-successful.json",
            "match": {
              "arguments": [
                {
                  "val": "consent-dedicated-successful.json",
                  "offset": 30
                }
              ],
              "location": "ConsentRequestSuccessfulSteps.loadTestData(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 3018462,
              "error_message": "org.springframework.web.client.HttpClientErrorException: 404 null\n\tat org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:108)\n\tat org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:708)\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:661)\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:621)\n\tat org.springframework.web.client.RestTemplate.put(RestTemplate.java:440)\n\tat de.adorsys.aspsp.xs2a.integtest.stepdefinitions.ais.CommonSteps.signingBasketSupportedIsTrue(CommonSteps.java:79)\n\tat ✽.And ASPSP-profile contains parameter signingBasketSupported is true(AIS_Embedded.feature:22)\n",
              "status": "failed"
            },
            "line": 22,
            "name": "ASPSP-profile contains parameter signingBasketSupported is true",
            "match": {
              "arguments": [
                {
                  "val": "true",
                  "offset": 59
                }
              ],
              "location": "CommonSteps.signingBasketSupportedIsTrue(Boolean)"
            },
            "matchedColumns": [
              1
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 23,
            "name": "parameter TPP-Explicit-Authorisation-Preferred is null",
            "match": {
              "arguments": [
                {
                  "val": "null",
                  "offset": 50
                }
              ],
              "location": "CommonSteps.tppExplicitAuthorisationPreferredHeaderIsTrue(Boolean)"
            },
            "matchedColumns": [
              2
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 24,
            "name": "PSU sends the create consent request",
            "match": {
              "location": "ConsentRequestSuccessfulSteps.sendConsentRequest()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 25,
            "name": "a successful response code and the appropriate consent response data is delivered to the PSU",
            "match": {
              "location": "ConsentRequestSuccessfulSteps.checkResponseCode()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 26,
            "name": "response contains link startAuthorisationWIthPsuAuthentication",
            "match": {
              "location": "ConsentRequestImpliciteStartAuthorizationSuccessfulSteps.checkStartAuthorisationWIthPsuAuthentication()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 9908607,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 33,
        "name": "Successful consent creation with implicit start of authorisation",
        "description": "",
        "id": "account-information-service---embedded-approach;successful-consent-creation-with-implicit-start-of-authorisation;;6",
        "after": [
          {
            "result": {
              "duration": 155941,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 455083,
              "status": "passed"
            },
            "line": 21,
            "name": "PSU wants to create a consent consent-dedicated-successful.json",
            "match": {
              "arguments": [
                {
                  "val": "consent-dedicated-successful.json",
                  "offset": 30
                }
              ],
              "location": "ConsentRequestSuccessfulSteps.loadTestData(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 4000054,
              "error_message": "org.springframework.web.client.HttpClientErrorException: 404 null\n\tat org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:108)\n\tat org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:708)\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:661)\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:621)\n\tat org.springframework.web.client.RestTemplate.put(RestTemplate.java:440)\n\tat de.adorsys.aspsp.xs2a.integtest.stepdefinitions.ais.CommonSteps.signingBasketSupportedIsTrue(CommonSteps.java:79)\n\tat ✽.And ASPSP-profile contains parameter signingBasketSupported is false(AIS_Embedded.feature:22)\n",
              "status": "failed"
            },
            "line": 22,
            "name": "ASPSP-profile contains parameter signingBasketSupported is false",
            "match": {
              "arguments": [
                {
                  "val": "false",
                  "offset": 59
                }
              ],
              "location": "CommonSteps.signingBasketSupportedIsTrue(Boolean)"
            },
            "matchedColumns": [
              1
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 23,
            "name": "parameter TPP-Explicit-Authorisation-Preferred is null",
            "match": {
              "arguments": [
                {
                  "val": "null",
                  "offset": 50
                }
              ],
              "location": "CommonSteps.tppExplicitAuthorisationPreferredHeaderIsTrue(Boolean)"
            },
            "matchedColumns": [
              2
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 24,
            "name": "PSU sends the create consent request",
            "match": {
              "location": "ConsentRequestSuccessfulSteps.sendConsentRequest()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 25,
            "name": "a successful response code and the appropriate consent response data is delivered to the PSU",
            "match": {
              "location": "ConsentRequestSuccessfulSteps.checkResponseCode()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 26,
            "name": "response contains link startAuthorisationWIthPsuAuthentication",
            "match": {
              "location": "ConsentRequestImpliciteStartAuthorizationSuccessfulSteps.checkStartAuthorisationWIthPsuAuthentication()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 8999654,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 34,
        "name": "Successful consent creation with implicit start of authorisation",
        "description": "",
        "id": "account-information-service---embedded-approach;successful-consent-creation-with-implicit-start-of-authorisation;;7",
        "after": [
          {
            "result": {
              "duration": 125720,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 488759,
              "status": "passed"
            },
            "line": 21,
            "name": "PSU wants to create a consent consent-all-accounts-successful.json",
            "match": {
              "arguments": [
                {
                  "val": "consent-all-accounts-successful.json",
                  "offset": 30
                }
              ],
              "location": "ConsentRequestSuccessfulSteps.loadTestData(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2686544,
              "error_message": "org.springframework.web.client.HttpClientErrorException: 404 null\n\tat org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:108)\n\tat org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:708)\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:661)\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:621)\n\tat org.springframework.web.client.RestTemplate.put(RestTemplate.java:440)\n\tat de.adorsys.aspsp.xs2a.integtest.stepdefinitions.ais.CommonSteps.signingBasketSupportedIsTrue(CommonSteps.java:79)\n\tat ✽.And ASPSP-profile contains parameter signingBasketSupported is false(AIS_Embedded.feature:22)\n",
              "status": "failed"
            },
            "line": 22,
            "name": "ASPSP-profile contains parameter signingBasketSupported is false",
            "match": {
              "arguments": [
                {
                  "val": "false",
                  "offset": 59
                }
              ],
              "location": "CommonSteps.signingBasketSupportedIsTrue(Boolean)"
            },
            "matchedColumns": [
              1
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 23,
            "name": "parameter TPP-Explicit-Authorisation-Preferred is true",
            "match": {
              "arguments": [
                {
                  "val": "true",
                  "offset": 50
                }
              ],
              "location": "CommonSteps.tppExplicitAuthorisationPreferredHeaderIsTrue(Boolean)"
            },
            "matchedColumns": [
              2
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 24,
            "name": "PSU sends the create consent request",
            "match": {
              "location": "ConsentRequestSuccessfulSteps.sendConsentRequest()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 25,
            "name": "a successful response code and the appropriate consent response data is delivered to the PSU",
            "match": {
              "location": "ConsentRequestSuccessfulSteps.checkResponseCode()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 26,
            "name": "response contains link startAuthorisationWIthPsuAuthentication",
            "match": {
              "location": "ConsentRequestImpliciteStartAuthorizationSuccessfulSteps.checkStartAuthorisationWIthPsuAuthentication()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 8788636,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 35,
        "name": "Successful consent creation with implicit start of authorisation",
        "description": "",
        "id": "account-information-service---embedded-approach;successful-consent-creation-with-implicit-start-of-authorisation;;8",
        "after": [
          {
            "result": {
              "duration": 124808,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 493767,
              "status": "passed"
            },
            "line": 21,
            "name": "PSU wants to create a consent consent-all-accounts-successful.json",
            "match": {
              "arguments": [
                {
                  "val": "consent-all-accounts-successful.json",
                  "offset": 30
                }
              ],
              "location": "ConsentRequestSuccessfulSteps.loadTestData(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2806192,
              "error_message": "org.springframework.web.client.HttpClientErrorException: 404 null\n\tat org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:108)\n\tat org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:708)\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:661)\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:621)\n\tat org.springframework.web.client.RestTemplate.put(RestTemplate.java:440)\n\tat de.adorsys.aspsp.xs2a.integtest.stepdefinitions.ais.CommonSteps.signingBasketSupportedIsTrue(CommonSteps.java:79)\n\tat ✽.And ASPSP-profile contains parameter signingBasketSupported is true(AIS_Embedded.feature:22)\n",
              "status": "failed"
            },
            "line": 22,
            "name": "ASPSP-profile contains parameter signingBasketSupported is true",
            "match": {
              "arguments": [
                {
                  "val": "true",
                  "offset": 59
                }
              ],
              "location": "CommonSteps.signingBasketSupportedIsTrue(Boolean)"
            },
            "matchedColumns": [
              1
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 23,
            "name": "parameter TPP-Explicit-Authorisation-Preferred is false",
            "match": {
              "arguments": [
                {
                  "val": "false",
                  "offset": 50
                }
              ],
              "location": "CommonSteps.tppExplicitAuthorisationPreferredHeaderIsTrue(Boolean)"
            },
            "matchedColumns": [
              2
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 24,
            "name": "PSU sends the create consent request",
            "match": {
              "location": "ConsentRequestSuccessfulSteps.sendConsentRequest()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 25,
            "name": "a successful response code and the appropriate consent response data is delivered to the PSU",
            "match": {
              "location": "ConsentRequestSuccessfulSteps.checkResponseCode()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 26,
            "name": "response contains link startAuthorisationWIthPsuAuthentication",
            "match": {
              "location": "ConsentRequestImpliciteStartAuthorizationSuccessfulSteps.checkStartAuthorisationWIthPsuAuthentication()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 9966587,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 36,
        "name": "Successful consent creation with implicit start of authorisation",
        "description": "",
        "id": "account-information-service---embedded-approach;successful-consent-creation-with-implicit-start-of-authorisation;;9",
        "after": [
          {
            "result": {
              "duration": 128932,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 713487,
              "status": "passed"
            },
            "line": 21,
            "name": "PSU wants to create a consent consent-all-accounts-successful.json",
            "match": {
              "arguments": [
                {
                  "val": "consent-all-accounts-successful.json",
                  "offset": 30
                }
              ],
              "location": "ConsentRequestSuccessfulSteps.loadTestData(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 3837313,
              "error_message": "org.springframework.web.client.HttpClientErrorException: 404 null\n\tat org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:108)\n\tat org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:708)\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:661)\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:621)\n\tat org.springframework.web.client.RestTemplate.put(RestTemplate.java:440)\n\tat de.adorsys.aspsp.xs2a.integtest.stepdefinitions.ais.CommonSteps.signingBasketSupportedIsTrue(CommonSteps.java:79)\n\tat ✽.And ASPSP-profile contains parameter signingBasketSupported is false(AIS_Embedded.feature:22)\n",
              "status": "failed"
            },
            "line": 22,
            "name": "ASPSP-profile contains parameter signingBasketSupported is false",
            "match": {
              "arguments": [
                {
                  "val": "false",
                  "offset": 59
                }
              ],
              "location": "CommonSteps.signingBasketSupportedIsTrue(Boolean)"
            },
            "matchedColumns": [
              1
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 23,
            "name": "parameter TPP-Explicit-Authorisation-Preferred is false",
            "match": {
              "arguments": [
                {
                  "val": "false",
                  "offset": 50
                }
              ],
              "location": "CommonSteps.tppExplicitAuthorisationPreferredHeaderIsTrue(Boolean)"
            },
            "matchedColumns": [
              2
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 24,
            "name": "PSU sends the create consent request",
            "match": {
              "location": "ConsentRequestSuccessfulSteps.sendConsentRequest()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 25,
            "name": "a successful response code and the appropriate consent response data is delivered to the PSU",
            "match": {
              "location": "ConsentRequestSuccessfulSteps.checkResponseCode()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 26,
            "name": "response contains link startAuthorisationWIthPsuAuthentication",
            "match": {
              "location": "ConsentRequestImpliciteStartAuthorizationSuccessfulSteps.checkStartAuthorisationWIthPsuAuthentication()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 10912983,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 37,
        "name": "Successful consent creation with implicit start of authorisation",
        "description": "",
        "id": "account-information-service---embedded-approach;successful-consent-creation-with-implicit-start-of-authorisation;;10",
        "after": [
          {
            "result": {
              "duration": 165618,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1270809,
              "status": "passed"
            },
            "line": 21,
            "name": "PSU wants to create a consent consent-all-accounts-successful.json",
            "match": {
              "arguments": [
                {
                  "val": "consent-all-accounts-successful.json",
                  "offset": 30
                }
              ],
              "location": "ConsentRequestSuccessfulSteps.loadTestData(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 3829683,
              "error_message": "org.springframework.web.client.HttpClientErrorException: 404 null\n\tat org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:108)\n\tat org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:708)\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:661)\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:621)\n\tat org.springframework.web.client.RestTemplate.put(RestTemplate.java:440)\n\tat de.adorsys.aspsp.xs2a.integtest.stepdefinitions.ais.CommonSteps.signingBasketSupportedIsTrue(CommonSteps.java:79)\n\tat ✽.And ASPSP-profile contains parameter signingBasketSupported is true(AIS_Embedded.feature:22)\n",
              "status": "failed"
            },
            "line": 22,
            "name": "ASPSP-profile contains parameter signingBasketSupported is true",
            "match": {
              "arguments": [
                {
                  "val": "true",
                  "offset": 59
                }
              ],
              "location": "CommonSteps.signingBasketSupportedIsTrue(Boolean)"
            },
            "matchedColumns": [
              1
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 23,
            "name": "parameter TPP-Explicit-Authorisation-Preferred is null",
            "match": {
              "arguments": [
                {
                  "val": "null",
                  "offset": 50
                }
              ],
              "location": "CommonSteps.tppExplicitAuthorisationPreferredHeaderIsTrue(Boolean)"
            },
            "matchedColumns": [
              2
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 24,
            "name": "PSU sends the create consent request",
            "match": {
              "location": "ConsentRequestSuccessfulSteps.sendConsentRequest()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 25,
            "name": "a successful response code and the appropriate consent response data is delivered to the PSU",
            "match": {
              "location": "ConsentRequestSuccessfulSteps.checkResponseCode()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 26,
            "name": "response contains link startAuthorisationWIthPsuAuthentication",
            "match": {
              "location": "ConsentRequestImpliciteStartAuthorizationSuccessfulSteps.checkStartAuthorisationWIthPsuAuthentication()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 11856373,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 38,
        "name": "Successful consent creation with implicit start of authorisation",
        "description": "",
        "id": "account-information-service---embedded-approach;successful-consent-creation-with-implicit-start-of-authorisation;;11",
        "after": [
          {
            "result": {
              "duration": 148300,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 807707,
              "status": "passed"
            },
            "line": 21,
            "name": "PSU wants to create a consent consent-all-accounts-successful.json",
            "match": {
              "arguments": [
                {
                  "val": "consent-all-accounts-successful.json",
                  "offset": 30
                }
              ],
              "location": "ConsentRequestSuccessfulSteps.loadTestData(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 3987586,
              "error_message": "org.springframework.web.client.HttpClientErrorException: 404 null\n\tat org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:108)\n\tat org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:708)\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:661)\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:621)\n\tat org.springframework.web.client.RestTemplate.put(RestTemplate.java:440)\n\tat de.adorsys.aspsp.xs2a.integtest.stepdefinitions.ais.CommonSteps.signingBasketSupportedIsTrue(CommonSteps.java:79)\n\tat ✽.And ASPSP-profile contains parameter signingBasketSupported is false(AIS_Embedded.feature:22)\n",
              "status": "failed"
            },
            "line": 22,
            "name": "ASPSP-profile contains parameter signingBasketSupported is false",
            "match": {
              "arguments": [
                {
                  "val": "false",
                  "offset": 59
                }
              ],
              "location": "CommonSteps.signingBasketSupportedIsTrue(Boolean)"
            },
            "matchedColumns": [
              1
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 23,
            "name": "parameter TPP-Explicit-Authorisation-Preferred is null",
            "match": {
              "arguments": [
                {
                  "val": "null",
                  "offset": 50
                }
              ],
              "location": "CommonSteps.tppExplicitAuthorisationPreferredHeaderIsTrue(Boolean)"
            },
            "matchedColumns": [
              2
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 24,
            "name": "PSU sends the create consent request",
            "match": {
              "location": "ConsentRequestSuccessfulSteps.sendConsentRequest()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 25,
            "name": "a successful response code and the appropriate consent response data is delivered to the PSU",
            "match": {
              "location": "ConsentRequestSuccessfulSteps.checkResponseCode()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 26,
            "name": "response contains link startAuthorisationWIthPsuAuthentication",
            "match": {
              "location": "ConsentRequestImpliciteStartAuthorizationSuccessfulSteps.checkStartAuthorisationWIthPsuAuthentication()"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Account Information Service - Embedded approach",
    "description": "",
    "id": "account-information-service---embedded-approach",
    "keyword": "Feature",
    "uri": "AIS_Embedded.feature"
  },
  {
    "line": 1,
    "elements": [
      {
        "comments": [
          {
            "line": 15,
            "value": "#            | payments            | sepa-credit-transfers         | singlePayInit-incorrect-syntax.json            |"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 11363720,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 16,
        "name": "Failed payment initiation request for single payments (redirect)",
        "description": "",
        "id": "payment-initiation-service---common;failed-payment-initiation-request-for-single-payments-(redirect);;2",
        "after": [
          {
            "result": {
              "duration": 158725,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 12489640,
              "status": "passed"
            },
            "line": 10,
            "name": "PSU initiates an errorful single payment singlePayInit-incorrect-payment-product.json using the payment service payments and the payment product sepa-credit-trans",
            "match": {
              "arguments": [
                {
                  "val": "singlePayInit-incorrect-payment-product.json",
                  "offset": 41
                },
                {
                  "val": "payments",
                  "offset": 112
                },
                {
                  "val": "sepa-credit-trans",
                  "offset": 145
                }
              ],
              "location": "SinglePaymentErrorfulSteps.loadTestData(String,String,String)"
            },
            "matchedColumns": [
              0,
              1,
              2
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 23463976,
              "status": "passed"
            },
            "line": 11,
            "name": "PSU sends the single payment initiating request with error",
            "match": {
              "location": "SinglePaymentErrorfulSteps.sendPaymentInitiatingRequestWithError()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 4788435,
              "status": "passed"
            },
            "line": 12,
            "name": "an error response code and the appropriate error response are received",
            "match": {
              "location": "GlobalErrorfulSteps.checkErrorCodeAndResponse()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 10979838,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 17,
        "name": "Failed payment initiation request for single payments (redirect)",
        "description": "",
        "id": "payment-initiation-service---common;failed-payment-initiation-request-for-single-payments-(redirect);;3",
        "after": [
          {
            "result": {
              "duration": 188595,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1037289,
              "status": "passed"
            },
            "line": 10,
            "name": "PSU initiates an errorful single payment singlePayInit-no-request-id.json using the payment service payments and the payment product sepa-credit-transfers",
            "match": {
              "arguments": [
                {
                  "val": "singlePayInit-no-request-id.json",
                  "offset": 41
                },
                {
                  "val": "payments",
                  "offset": 100
                },
                {
                  "val": "sepa-credit-transfers",
                  "offset": 133
                }
              ],
              "location": "SinglePaymentErrorfulSteps.loadTestData(String,String,String)"
            },
            "matchedColumns": [
              0,
              1,
              2
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 23463378,
              "status": "passed"
            },
            "line": 11,
            "name": "PSU sends the single payment initiating request with error",
            "match": {
              "location": "SinglePaymentErrorfulSteps.sendPaymentInitiatingRequestWithError()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 172202,
              "status": "passed"
            },
            "line": 12,
            "name": "an error response code and the appropriate error response are received",
            "match": {
              "location": "GlobalErrorfulSteps.checkErrorCodeAndResponse()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 12539418,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 18,
        "name": "Failed payment initiation request for single payments (redirect)",
        "description": "",
        "id": "payment-initiation-service---common;failed-payment-initiation-request-for-single-payments-(redirect);;4",
        "after": [
          {
            "result": {
              "duration": 119858,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 828038,
              "status": "passed"
            },
            "line": 10,
            "name": "PSU initiates an errorful single payment singlePayInit-no-ip-address.json using the payment service payments and the payment product sepa-credit-transfers",
            "match": {
              "arguments": [
                {
                  "val": "singlePayInit-no-ip-address.json",
                  "offset": 41
                },
                {
                  "val": "payments",
                  "offset": 100
                },
                {
                  "val": "sepa-credit-transfers",
                  "offset": 133
                }
              ],
              "location": "SinglePaymentErrorfulSteps.loadTestData(String,String,String)"
            },
            "matchedColumns": [
              0,
              1,
              2
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 8532032,
              "status": "passed"
            },
            "line": 11,
            "name": "PSU sends the single payment initiating request with error",
            "match": {
              "location": "SinglePaymentErrorfulSteps.sendPaymentInitiatingRequestWithError()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 169928,
              "status": "passed"
            },
            "line": 12,
            "name": "an error response code and the appropriate error response are received",
            "match": {
              "location": "GlobalErrorfulSteps.checkErrorCodeAndResponse()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 19,
            "value": "#            | payments            | sepa-credit-transfers         | singlePayInit-wrong-format-request-id.json     |"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 10251326,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 20,
        "name": "Failed payment initiation request for single payments (redirect)",
        "description": "",
        "id": "payment-initiation-service---common;failed-payment-initiation-request-for-single-payments-(redirect);;5",
        "after": [
          {
            "result": {
              "duration": 141835,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 849045,
              "status": "passed"
            },
            "line": 10,
            "name": "PSU initiates an errorful single payment singlePayInit-wrong-format-psu-ip-address.json using the payment service payments and the payment product sepa-credit-transfers",
            "match": {
              "arguments": [
                {
                  "val": "singlePayInit-wrong-format-psu-ip-address.json",
                  "offset": 41
                },
                {
                  "val": "payments",
                  "offset": 114
                },
                {
                  "val": "sepa-credit-transfers",
                  "offset": 147
                }
              ],
              "location": "SinglePaymentErrorfulSteps.loadTestData(String,String,String)"
            },
            "matchedColumns": [
              0,
              1,
              2
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 58032267,
              "status": "passed"
            },
            "line": 11,
            "name": "PSU sends the single payment initiating request with error",
            "match": {
              "location": "SinglePaymentErrorfulSteps.sendPaymentInitiatingRequestWithError()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 184221,
              "status": "passed"
            },
            "line": 12,
            "name": "an error response code and the appropriate error response are received",
            "match": {
              "location": "GlobalErrorfulSteps.checkErrorCodeAndResponse()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 57,
            "value": "#            | periodic-payments | sepa-credit-transfers | recPayInit-incorrect-syntax.json            |"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 13913651,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 58,
        "name": "Failed payment initiation request for recurring payments (redirect)",
        "description": "",
        "id": "payment-initiation-service---common;failed-payment-initiation-request-for-recurring-payments-(redirect);;2",
        "after": [
          {
            "result": {
              "duration": 192016,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 11420437,
              "status": "passed"
            },
            "line": 52,
            "name": "PSU loads an errorful recurring payment recPayInit-incorrect-payment-product.json using the payment service periodic-payments and the payment product sepa-credit-trans",
            "match": {
              "arguments": [
                {
                  "val": "recPayInit-incorrect-payment-product.json",
                  "offset": 40
                },
                {
                  "val": "periodic-payments",
                  "offset": 108
                },
                {
                  "val": "sepa-credit-trans",
                  "offset": 150
                }
              ],
              "location": "PeriodicPaymentErrorfulSteps.loadTestDataForErrorfulPeriodicPayment(String,String,String)"
            },
            "matchedColumns": [
              0,
              1,
              2
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 10857472,
              "status": "passed"
            },
            "line": 53,
            "name": "PSU sends the recurring payment initiating request with error",
            "match": {
              "location": "PeriodicPaymentErrorfulSteps.sendFalsePeriodicPaymentInitiatingRequest()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 259600,
              "status": "passed"
            },
            "line": 54,
            "name": "an error response code and the appropriate error response are received",
            "match": {
              "location": "GlobalErrorfulSteps.checkErrorCodeAndResponse()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 10110248,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 59,
        "name": "Failed payment initiation request for recurring payments (redirect)",
        "description": "",
        "id": "payment-initiation-service---common;failed-payment-initiation-request-for-recurring-payments-(redirect);;3",
        "after": [
          {
            "result": {
              "duration": 139496,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 884616,
              "status": "passed"
            },
            "line": 52,
            "name": "PSU loads an errorful recurring payment recPayInit-no-frequency.json using the payment service periodic-payments and the payment product sepa-credit-transfers",
            "match": {
              "arguments": [
                {
                  "val": "recPayInit-no-frequency.json",
                  "offset": 40
                },
                {
                  "val": "periodic-payments",
                  "offset": 95
                },
                {
                  "val": "sepa-credit-transfers",
                  "offset": 137
                }
              ],
              "location": "PeriodicPaymentErrorfulSteps.loadTestDataForErrorfulPeriodicPayment(String,String,String)"
            },
            "matchedColumns": [
              0,
              1,
              2
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 50115766,
              "status": "passed"
            },
            "line": 53,
            "name": "PSU sends the recurring payment initiating request with error",
            "match": {
              "location": "PeriodicPaymentErrorfulSteps.sendFalsePeriodicPaymentInitiatingRequest()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 185392,
              "status": "passed"
            },
            "line": 54,
            "name": "an error response code and the appropriate error response are received",
            "match": {
              "location": "GlobalErrorfulSteps.checkErrorCodeAndResponse()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 10213691,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 60,
        "name": "Failed payment initiation request for recurring payments (redirect)",
        "description": "",
        "id": "payment-initiation-service---common;failed-payment-initiation-request-for-recurring-payments-(redirect);;4",
        "after": [
          {
            "result": {
              "duration": 124198,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 904971,
              "status": "passed"
            },
            "line": 52,
            "name": "PSU loads an errorful recurring payment recPayInit-not-defined-frequency.json using the payment service periodic-payments and the payment product sepa-credit-transfers",
            "match": {
              "arguments": [
                {
                  "val": "recPayInit-not-defined-frequency.json",
                  "offset": 40
                },
                {
                  "val": "periodic-payments",
                  "offset": 104
                },
                {
                  "val": "sepa-credit-transfers",
                  "offset": 146
                }
              ],
              "location": "PeriodicPaymentErrorfulSteps.loadTestDataForErrorfulPeriodicPayment(String,String,String)"
            },
            "matchedColumns": [
              0,
              1,
              2
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 11794884,
              "status": "passed"
            },
            "line": 53,
            "name": "PSU sends the recurring payment initiating request with error",
            "match": {
              "location": "PeriodicPaymentErrorfulSteps.sendFalsePeriodicPaymentInitiatingRequest()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 136218,
              "status": "passed"
            },
            "line": 54,
            "name": "an error response code and the appropriate error response are received",
            "match": {
              "location": "GlobalErrorfulSteps.checkErrorCodeAndResponse()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 12569361,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 61,
        "name": "Failed payment initiation request for recurring payments (redirect)",
        "description": "",
        "id": "payment-initiation-service---common;failed-payment-initiation-request-for-recurring-payments-(redirect);;5",
        "after": [
          {
            "result": {
              "duration": 150822,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1206449,
              "status": "passed"
            },
            "line": 52,
            "name": "PSU loads an errorful recurring payment recPayInit-no-request-id.json using the payment service periodic-payments and the payment product sepa-credit-transfers",
            "match": {
              "arguments": [
                {
                  "val": "recPayInit-no-request-id.json",
                  "offset": 40
                },
                {
                  "val": "periodic-payments",
                  "offset": 96
                },
                {
                  "val": "sepa-credit-transfers",
                  "offset": 138
                }
              ],
              "location": "PeriodicPaymentErrorfulSteps.loadTestDataForErrorfulPeriodicPayment(String,String,String)"
            },
            "matchedColumns": [
              0,
              1,
              2
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 10927685,
              "status": "passed"
            },
            "line": 53,
            "name": "PSU sends the recurring payment initiating request with error",
            "match": {
              "location": "PeriodicPaymentErrorfulSteps.sendFalsePeriodicPaymentInitiatingRequest()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 176831,
              "status": "passed"
            },
            "line": 54,
            "name": "an error response code and the appropriate error response are received",
            "match": {
              "location": "GlobalErrorfulSteps.checkErrorCodeAndResponse()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 13399254,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 62,
        "name": "Failed payment initiation request for recurring payments (redirect)",
        "description": "",
        "id": "payment-initiation-service---common;failed-payment-initiation-request-for-recurring-payments-(redirect);;6",
        "after": [
          {
            "result": {
              "duration": 187264,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1349311,
              "status": "passed"
            },
            "line": 52,
            "name": "PSU loads an errorful recurring payment recPayInit-no-ip-address.json using the payment service periodic-payments and the payment product sepa-credit-transfers",
            "match": {
              "arguments": [
                {
                  "val": "recPayInit-no-ip-address.json",
                  "offset": 40
                },
                {
                  "val": "periodic-payments",
                  "offset": 96
                },
                {
                  "val": "sepa-credit-transfers",
                  "offset": 138
                }
              ],
              "location": "PeriodicPaymentErrorfulSteps.loadTestDataForErrorfulPeriodicPayment(String,String,String)"
            },
            "matchedColumns": [
              0,
              1,
              2
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 13145281,
              "status": "passed"
            },
            "line": 53,
            "name": "PSU sends the recurring payment initiating request with error",
            "match": {
              "location": "PeriodicPaymentErrorfulSteps.sendFalsePeriodicPaymentInitiatingRequest()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 172461,
              "status": "passed"
            },
            "line": 54,
            "name": "an error response code and the appropriate error response are received",
            "match": {
              "location": "GlobalErrorfulSteps.checkErrorCodeAndResponse()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 63,
            "value": "#            | periodic-payments | sepa-credit-transfers | recPayInit-wrong-format-request-id.json     |"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 10985197,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 64,
        "name": "Failed payment initiation request for recurring payments (redirect)",
        "description": "",
        "id": "payment-initiation-service---common;failed-payment-initiation-request-for-recurring-payments-(redirect);;7",
        "after": [
          {
            "result": {
              "duration": 229840,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1002630,
              "status": "passed"
            },
            "line": 52,
            "name": "PSU loads an errorful recurring payment recPayInit-wrong-format-psu-ip-address.json using the payment service periodic-payments and the payment product sepa-credit-transfers",
            "match": {
              "arguments": [
                {
                  "val": "recPayInit-wrong-format-psu-ip-address.json",
                  "offset": 40
                },
                {
                  "val": "periodic-payments",
                  "offset": 110
                },
                {
                  "val": "sepa-credit-transfers",
                  "offset": 152
                }
              ],
              "location": "PeriodicPaymentErrorfulSteps.loadTestDataForErrorfulPeriodicPayment(String,String,String)"
            },
            "matchedColumns": [
              0,
              1,
              2
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 11863612,
              "status": "passed"
            },
            "line": 53,
            "name": "PSU sends the recurring payment initiating request with error",
            "match": {
              "location": "PeriodicPaymentErrorfulSteps.sendFalsePeriodicPaymentInitiatingRequest()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 199823,
              "status": "passed"
            },
            "line": 54,
            "name": "an error response code and the appropriate error response are received",
            "match": {
              "location": "GlobalErrorfulSteps.checkErrorCodeAndResponse()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 14355500,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 81,
        "name": "Successful payment status request",
        "description": "",
        "id": "payment-initiation-service---common;successful-payment-status-request;;2",
        "after": [
          {
            "result": {
              "duration": 382398,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2288880589,
              "status": "passed"
            },
            "line": 75,
            "name": "PSU sends the single payment initiation request and receives the paymentId",
            "match": {
              "location": "GlobalSuccessfulSteps.sendSinglePaymentInitiationRequestAndStoreId()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 6676025,
              "status": "passed"
            },
            "line": 76,
            "name": "PSU wants to request the payment status by using a set of data paymentStatus-RCVD-successful.json",
            "match": {
              "arguments": [
                {
                  "val": "paymentStatus-RCVD-successful.json",
                  "offset": 63
                }
              ],
              "location": "PaymentStatusSuccessfulSteps.loadPaymentStatusTestData(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2250659778,
              "status": "passed"
            },
            "line": 77,
            "name": "PSU requests the status of the payment",
            "match": {
              "location": "PaymentStatusSuccessfulSteps.sendPaymentStatusRequest()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 83850,
              "status": "passed"
            },
            "line": 78,
            "name": "a successful response code and the correct payment status is delivered to the PSU",
            "match": {
              "location": "PaymentStatusSuccessfulSteps.checkResponseCodeAndPaymentStatus()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 91,
            "value": "#            |paymentStatus-not-existing-paymentId.json  | payments               |"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 10465837,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 92,
        "name": "Failed payment status request",
        "description": "",
        "id": "payment-initiation-service---common;failed-payment-status-request;;2",
        "after": [
          {
            "result": {
              "duration": 220758,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2613125262,
              "status": "passed"
            },
            "line": 85,
            "name": "PSU sends the single payment initiation request and receives the paymentId",
            "match": {
              "location": "GlobalSuccessfulSteps.sendSinglePaymentInitiationRequestAndStoreId()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 5163086,
              "status": "passed"
            },
            "line": 86,
            "name": "PSU prepares the errorful payment status request data paymentStatus-no-request-id.json with the payment service payments",
            "match": {
              "arguments": [
                {
                  "val": "paymentStatus-no-request-id.json",
                  "offset": 54
                },
                {
                  "val": "payments",
                  "offset": 112
                }
              ],
              "location": "PaymentStatusErrorfulSteps.loadErrorfulPaymentStatusTestData(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10013651,
              "status": "passed"
            },
            "line": 87,
            "name": "PSU requests the status of the payment with error",
            "match": {
              "location": "PaymentStatusErrorfulSteps.sendPaymentStatusRequestWithoutExistingPaymentId()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 240404,
              "status": "passed"
            },
            "line": 88,
            "name": "an error response code and the appropriate error response are received",
            "match": {
              "location": "GlobalErrorfulSteps.checkErrorCodeAndResponse()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 12870323,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 109,
        "name": "Successful Single Payment Information Request",
        "description": "",
        "id": "payment-initiation-service---common;successful-single-payment-information-request;;2",
        "after": [
          {
            "result": {
              "duration": 157356,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2297858857,
              "status": "passed"
            },
            "line": 103,
            "name": "PSU sends the single payment initiation request and receives the paymentId",
            "match": {
              "location": "GlobalSuccessfulSteps.sendSinglePaymentInitiationRequestAndStoreId()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 8114209,
              "status": "passed"
            },
            "line": 104,
            "name": "PSU wants to request the payment information by using a set of data singlePayInformation-successful.json",
            "match": {
              "arguments": [
                {
                  "val": "singlePayInformation-successful.json",
                  "offset": 68
                }
              ],
              "location": "PaymentInformationSuccessfulSteps.loadPaymentInformationTestData(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2196271953,
              "status": "passed"
            },
            "line": 105,
            "name": "PSU requests the information of the payment",
            "match": {
              "location": "PaymentInformationSuccessfulSteps.sendPaymentInformationRequest()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 100055,
              "status": "passed"
            },
            "line": 106,
            "name": "a successful response code and the payment information is delivered to the PSU",
            "match": {
              "location": "PaymentInformationSuccessfulSteps.checkResponseCodeAndPaymentInformation()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 119,
            "value": "#           | singlePayInformation-not-existing-paymentId.json  | payments                    |"
          },
          {
            "line": 120,
            "value": "#           | singlePayInformation-wrong-format-request-id.json | payments                    |"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 10432713,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 121,
        "name": "Failed Payment Information Request",
        "description": "",
        "id": "payment-initiation-service---common;failed-payment-information-request;;2",
        "after": [
          {
            "result": {
              "duration": 158731,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1747951402,
              "status": "passed"
            },
            "line": 113,
            "name": "PSU sends the single payment initiation request and receives the paymentId",
            "match": {
              "location": "GlobalSuccessfulSteps.sendSinglePaymentInitiationRequestAndStoreId()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 3557949,
              "status": "passed"
            },
            "line": 114,
            "name": "PSU prepares the errorful payment information request data singlePayInformation-no-request-id.json with the payment service payments",
            "match": {
              "arguments": [
                {
                  "val": "singlePayInformation-no-request-id.json",
                  "offset": 59
                },
                {
                  "val": "payments",
                  "offset": 124
                }
              ],
              "location": "SinglePaymentInformationErrorfulSteps.loadErrorfulPaymentInformationTestData(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7782392,
              "status": "passed"
            },
            "line": 115,
            "name": "PSU requests the information of the payment with error",
            "match": {
              "location": "SinglePaymentInformationErrorfulSteps.sendPaymentInformationRequestWithError()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 226640,
              "status": "passed"
            },
            "line": 116,
            "name": "an error response code and the appropriate error response are received",
            "match": {
              "location": "GlobalErrorfulSteps.checkErrorCodeAndResponse()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 148,
            "value": "#            | paymentCancellation-not-existing-paymentId.json  | payments                    |"
          },
          {
            "line": 149,
            "value": "#            | paymentCancellation-wrong-format-request-id.json | payments                    |"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 10256225,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 150,
        "name": "Failed payment cancellation request",
        "description": "",
        "id": "payment-initiation-service---common;failed-payment-cancellation-request;;2",
        "after": [
          {
            "result": {
              "duration": 187806,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1733964999,
              "status": "passed"
            },
            "line": 142,
            "name": "PSU sends the single payment initiation request and receives the paymentId",
            "match": {
              "location": "GlobalSuccessfulSteps.sendSinglePaymentInitiationRequestAndStoreId()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 3674096,
              "status": "passed"
            },
            "line": 143,
            "name": "PSU prepares the errorful cancellation request data paymentCancellation-no-request-id.json with the payment service payments",
            "match": {
              "arguments": [
                {
                  "val": "paymentCancellation-no-request-id.json",
                  "offset": 52
                },
                {
                  "val": "payments",
                  "offset": 116
                }
              ],
              "location": "PaymentCancellationErrorfulSteps.loadErrorfulPaymentCancellationTestData(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7430560,
              "status": "passed"
            },
            "line": 144,
            "name": "PSU initiates the cancellation of the payment with error",
            "match": {
              "location": "PaymentCancellationErrorfulSteps.sendPaymentCancellationRequestWithError()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 150029,
              "status": "passed"
            },
            "line": 145,
            "name": "an error response code and the appropriate error response are received",
            "match": {
              "location": "GlobalErrorfulSteps.checkErrorCodeAndResponse()"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Payment Initiation Service - Common",
    "description": "",
    "id": "payment-initiation-service---common",
    "keyword": "Feature",
    "uri": "PIS_Common.feature"
  },
  {
    "line": 1,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 9722483,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 15,
        "name": "Successful payment initiation request for single payments (embedded)",
        "description": "",
        "id": "payment-initiation-service---embedded-approach;successful-payment-initiation-request-for-single-payments-(embedded);;2",
        "after": [
          {
            "result": {
              "duration": 196511,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 507432,
              "status": "passed"
            },
            "line": 10,
            "name": "PSU wants to initiate a single payment singlePayInit-successful.json using the payment service payments and the payment product sepa-credit-transfers",
            "match": {
              "arguments": [
                {
                  "val": "singlePayInit-successful.json",
                  "offset": 39
                },
                {
                  "val": "payments",
                  "offset": 95
                },
                {
                  "val": "sepa-credit-transfers",
                  "offset": 128
                }
              ],
              "location": "GlobalSuccessfulSteps.loadTestData(String,String,String)"
            },
            "matchedColumns": [
              0,
              1,
              2
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1766339381,
              "status": "passed"
            },
            "line": 11,
            "name": "PSU sends the single payment initiating request",
            "match": {
              "location": "GlobalSuccessfulSteps.sendSinglePaymentInitiatingRequest()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2938572,
              "status": "passed"
            },
            "line": 12,
            "name": "a successful response code and the appropriate authentication URL is delivered to the PSU",
            "match": {
              "location": "PaymentInitiationEmbeddedSuccessfulSteps.checkResponseCodeAndAuthorisationLink()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 27601441,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 30,
        "name": "Successful start of authorisation (embedded)",
        "description": "",
        "id": "payment-initiation-service---embedded-approach;successful-start-of-authorisation-(embedded);;2",
        "after": [
          {
            "result": {
              "duration": 401427,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1913443444,
              "status": "passed"
            },
            "line": 24,
            "name": "PSU sends the single payment initiation request and receives the paymentId",
            "match": {
              "location": "GlobalSuccessfulSteps.sendSinglePaymentInitiationRequestAndStoreId()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 3863465,
              "status": "passed"
            },
            "line": 25,
            "name": "PSU wants to start the authorisation using the authorisation data startAuth-successful.json",
            "match": {
              "arguments": [
                {
                  "val": "startAuth-successful.json",
                  "offset": 66
                }
              ],
              "location": "StartAuthorisationSuccessfulSteps.loadAuthorisationData(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 469360867,
              "status": "passed"
            },
            "line": 26,
            "name": "PSU sends the start authorisation request",
            "match": {
              "location": "StartAuthorisationSuccessfulSteps.sendAuthorisationRequest()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 37312,
              "status": "passed"
            },
            "line": 27,
            "name": "PSU checks if a link is received and the SCA status is correct",
            "match": {
              "location": "StartAuthorisationSuccessfulSteps.checkLinkAndScaStatusEmbedded()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 40,
            "value": "#            | payments                  | startAuth-not-existing-paymentId.json  |"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 14697346,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 41,
        "name": "Failed start of authorisation (embedded)",
        "description": "",
        "id": "payment-initiation-service---embedded-approach;failed-start-of-authorisation-(embedded);;2",
        "after": [
          {
            "result": {
              "duration": 278311,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2220227306,
              "status": "passed"
            },
            "line": 34,
            "name": "PSU sends the single payment initiation request and receives the paymentId",
            "match": {
              "location": "GlobalSuccessfulSteps.sendSinglePaymentInitiationRequestAndStoreId()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 938686,
              "status": "passed"
            },
            "line": 35,
            "name": "PSU prepares the errorful data startAuth-no-request-id.json with the payment service payments",
            "match": {
              "arguments": [
                {
                  "val": "startAuth-no-request-id.json",
                  "offset": 31
                },
                {
                  "val": "payments",
                  "offset": 85
                }
              ],
              "location": "GlobalErrorfulSteps.loadErrorfulDataEmbedded(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 16557888,
              "status": "passed"
            },
            "line": 36,
            "name": "PSU sends the errorful start authorisation request",
            "match": {
              "location": "StartAuthorisationErrorfulSteps.sendErrorfulAuthorisationRequest()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 56809,
              "status": "passed"
            },
            "line": 37,
            "name": "an error response code and the appropriate error response are received",
            "match": {
              "location": "GlobalErrorfulSteps.checkErrorCodeAndResponse()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 13352233,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 60,
        "name": "Successful update of identification data (embedded)",
        "description": "",
        "id": "payment-initiation-service---embedded-approach;successful-update-of-identification-data-(embedded);;2",
        "after": [
          {
            "result": {
              "duration": 205203,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 3448236464,
              "status": "passed"
            },
            "line": 53,
            "name": "PSU sends the single payment initiation request and receives the paymentId",
            "match": {
              "location": "GlobalSuccessfulSteps.sendSinglePaymentInitiationRequestAndStoreId()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 513089170,
              "status": "passed"
            },
            "line": 54,
            "name": "PSU sends the start authorisation request and receives the authorisationId",
            "match": {
              "location": "GlobalSuccessfulSteps.startAuthorisationAndStoreId()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 11476262,
              "status": "passed"
            },
            "line": 55,
            "name": "PSU wants to update the resource with his identification data updateIdentificationNoSca-successful.json",
            "match": {
              "arguments": [
                {
                  "val": "updateIdentificationNoSca-successful.json",
                  "offset": 62
                }
              ],
              "location": "UpdateAuthorisationWithIdentificationSuccessfulSteps.loadIdentificationData(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3134462098,
              "status": "passed"
            },
            "line": 56,
            "name": "PSU sends the update identification data request",
            "match": {
              "location": "UpdateAuthorisationWithIdentificationSuccessfulSteps.sendUpdateAuthorisationWithIdentificationRequest()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 83448,
              "status": "passed"
            },
            "line": 57,
            "name": "PSU checks if the correct SCA status and response code is received",
            "match": {
              "location": "UpdateAuthorisationWithIdentificationSuccessfulSteps.checkScaStatusAndResponseCode()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 61,
            "value": "#            | updateIdentificationOneSca-successful.json       |"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 11366182,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 62,
        "name": "Successful update of identification data (embedded)",
        "description": "",
        "id": "payment-initiation-service---embedded-approach;successful-update-of-identification-data-(embedded);;3",
        "after": [
          {
            "result": {
              "duration": 199722,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2278293495,
              "status": "passed"
            },
            "line": 53,
            "name": "PSU sends the single payment initiation request and receives the paymentId",
            "match": {
              "location": "GlobalSuccessfulSteps.sendSinglePaymentInitiationRequestAndStoreId()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 584055218,
              "status": "passed"
            },
            "line": 54,
            "name": "PSU sends the start authorisation request and receives the authorisationId",
            "match": {
              "location": "GlobalSuccessfulSteps.startAuthorisationAndStoreId()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1029741,
              "status": "passed"
            },
            "line": 55,
            "name": "PSU wants to update the resource with his identification data updateIdentificationMultipleSca-successful.json",
            "match": {
              "arguments": [
                {
                  "val": "updateIdentificationMultipleSca-successful.json",
                  "offset": 62
                }
              ],
              "location": "UpdateAuthorisationWithIdentificationSuccessfulSteps.loadIdentificationData(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2026177371,
              "status": "passed"
            },
            "line": 56,
            "name": "PSU sends the update identification data request",
            "match": {
              "location": "UpdateAuthorisationWithIdentificationSuccessfulSteps.sendUpdateAuthorisationWithIdentificationRequest()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 76817,
              "status": "passed"
            },
            "line": 57,
            "name": "PSU checks if the correct SCA status and response code is received",
            "match": {
              "location": "UpdateAuthorisationWithIdentificationSuccessfulSteps.checkScaStatusAndResponseCode()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 10668324,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 73,
        "name": "Errorful update of identification data (embedded)",
        "description": "",
        "id": "payment-initiation-service---embedded-approach;errorful-update-of-identification-data-(embedded);;2",
        "after": [
          {
            "result": {
              "duration": 197341,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1993005530,
              "status": "passed"
            },
            "line": 66,
            "name": "PSU sends the single payment initiation request and receives the paymentId",
            "match": {
              "location": "GlobalSuccessfulSteps.sendSinglePaymentInitiationRequestAndStoreId()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 430755958,
              "status": "passed"
            },
            "line": 67,
            "name": "PSU sends the start authorisation request and receives the authorisationId",
            "match": {
              "location": "GlobalSuccessfulSteps.startAuthorisationAndStoreId()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 836428,
              "status": "passed"
            },
            "line": 68,
            "name": "PSU prepares the errorful data updateIdentification-no-request-id.json with the payment service payments",
            "match": {
              "arguments": [
                {
                  "val": "updateIdentification-no-request-id.json",
                  "offset": 31
                },
                {
                  "val": "payments",
                  "offset": 96
                }
              ],
              "location": "GlobalErrorfulSteps.loadErrorfulDataEmbedded(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7526933,
              "status": "passed"
            },
            "line": 69,
            "name": "PSU sends the errorful update authorisation data request",
            "match": {
              "location": "GlobalErrorfulSteps.sendErrorfulUpdateAuthorisationRequest()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 41540,
              "status": "passed"
            },
            "line": 70,
            "name": "an error response code and the appropriate error response are received",
            "match": {
              "location": "GlobalErrorfulSteps.checkErrorCodeAndResponse()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 108,
            "value": "#             | payments           | selectAuth-not-existing-paymentId.json   |"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 11701287,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 109,
        "name": "Errorful selection of PSU sca method (embedded)",
        "description": "",
        "id": "payment-initiation-service---embedded-approach;errorful-selection-of-psu-sca-method-(embedded);;2",
        "after": [
          {
            "result": {
              "duration": 183676,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1827239678,
              "status": "passed"
            },
            "line": 100,
            "name": "PSU sends the single payment initiation request and receives the paymentId",
            "match": {
              "location": "GlobalSuccessfulSteps.sendSinglePaymentInitiationRequestAndStoreId()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 436049271,
              "status": "passed"
            },
            "line": 101,
            "name": "PSU sends the start authorisation request and receives the authorisationId",
            "match": {
              "location": "GlobalSuccessfulSteps.startAuthorisationAndStoreId()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2869334373,
              "status": "passed"
            },
            "line": 102,
            "name": "PSU updates his identification data",
            "match": {
              "location": "GlobalSuccessfulSteps.updatePsuIdentification()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1071504,
              "status": "passed"
            },
            "line": 103,
            "name": "PSU prepares the errorful data selectAuth-no-request-id.json with the payment service payments",
            "match": {
              "arguments": [
                {
                  "val": "selectAuth-no-request-id.json",
                  "offset": 31
                },
                {
                  "val": "payments",
                  "offset": 86
                }
              ],
              "location": "GlobalErrorfulSteps.loadErrorfulDataEmbedded(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10059092,
              "status": "passed"
            },
            "line": 104,
            "name": "PSU sends the errorful update authorisation data request",
            "match": {
              "location": "GlobalErrorfulSteps.sendErrorfulUpdateAuthorisationRequest()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 233256,
              "status": "passed"
            },
            "line": 105,
            "name": "an error response code and the appropriate error response are received",
            "match": {
              "location": "GlobalErrorfulSteps.checkErrorCodeAndResponse()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 13216607,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 146,
        "name": "get authorisations (embedded)",
        "description": "",
        "id": "payment-initiation-service---embedded-approach;get-authorisations-(embedded);;2",
        "after": [
          {
            "result": {
              "duration": 194157,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1774060288,
              "status": "passed"
            },
            "line": 139,
            "name": "PSU sends the single payment initiation request and receives the paymentId",
            "match": {
              "location": "GlobalSuccessfulSteps.sendSinglePaymentInitiationRequestAndStoreId()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 429157468,
              "status": "passed"
            },
            "line": 140,
            "name": "PSU sends the start authorisation request and receives the authorisationId",
            "match": {
              "location": "GlobalSuccessfulSteps.startAuthorisationAndStoreId()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6999429,
              "status": "passed"
            },
            "line": 141,
            "name": "PSU prepares the successful data RequestAuthorisationIDs-successful.json request",
            "match": {
              "arguments": [
                {
                  "val": "RequestAuthorisationIDs-successful.json ",
                  "offset": 33
                }
              ],
              "location": "SuccessfulRequestForAuthorisationsIDs.prepareData(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 438889620,
              "status": "passed"
            },
            "line": 142,
            "name": "PSU sends the successful authorisation IDs data request",
            "match": {
              "location": "SuccessfulRequestForAuthorisationsIDs.sendGetAuthorisationIdsRequest()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 88835,
              "status": "passed"
            },
            "line": 143,
            "name": "a successful response code and the appropriate list of authorisation Ids are received",
            "match": {
              "location": "SuccessfulRequestForAuthorisationsIDs.aSuccessfulResponseCodeAndTheAppropriateListOfAuthorisationIdsAreReceived()"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Payment Initiation Service - Embedded approach",
    "description": "",
    "id": "payment-initiation-service---embedded-approach",
    "keyword": "Feature",
    "uri": "PIS_Embedded.feature"
  },
  {
    "line": 1,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 9790380,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 16,
        "name": "Successful payment initiation request for single payments (redirect)",
        "description": "",
        "id": "payment-initiation-service---redirect-approach;successful-payment-initiation-request-for-single-payments-(redirect);;2",
        "after": [
          {
            "result": {
              "duration": 222875,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 412830,
              "status": "passed"
            },
            "line": 10,
            "name": "PSU wants to initiate a single payment singlePayInit-successful.json using the payment service payments and the payment product sepa-credit-transfers",
            "match": {
              "arguments": [
                {
                  "val": "singlePayInit-successful.json",
                  "offset": 39
                },
                {
                  "val": "payments",
                  "offset": 95
                },
                {
                  "val": "sepa-credit-transfers",
                  "offset": 128
                }
              ],
              "location": "GlobalSuccessfulSteps.loadTestData(String,String,String)"
            },
            "matchedColumns": [
              0,
              1,
              2
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1786717186,
              "status": "passed"
            },
            "line": 11,
            "name": "PSU sends the single payment initiating request",
            "match": {
              "location": "GlobalSuccessfulSteps.sendSinglePaymentInitiatingRequest()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 60402,
              "status": "passed"
            },
            "line": 12,
            "name": "a successful response code and the appropriate payment response data are received",
            "match": {
              "location": "GlobalSuccessfulSteps.checkResponseCode()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1175588,
              "error_message": "java.lang.AssertionError: \nExpected: not null\n     but: was null\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)\n\tat de.adorsys.aspsp.xs2a.integtest.stepdefinitions.pis.GlobalSuccessfulSteps.checkRedirectUrl(GlobalSuccessfulSteps.java:135)\n\tat ✽.And a redirect URL is delivered to the PSU(PIS_Redirect.feature:13)\n",
              "status": "failed"
            },
            "line": 13,
            "name": "a redirect URL is delivered to the PSU",
            "match": {
              "location": "GlobalSuccessfulSteps.checkRedirectUrl()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 9798718,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 17,
        "name": "Successful payment initiation request for single payments (redirect)",
        "description": "",
        "id": "payment-initiation-service---redirect-approach;successful-payment-initiation-request-for-single-payments-(redirect);;3",
        "after": [
          {
            "result": {
              "duration": 180810,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 716818,
              "status": "passed"
            },
            "line": 10,
            "name": "PSU wants to initiate a single payment singlePayInit-exceeding-amount.json using the payment service payments and the payment product sepa-credit-transfers",
            "match": {
              "arguments": [
                {
                  "val": "singlePayInit-exceeding-amount.json",
                  "offset": 39
                },
                {
                  "val": "payments",
                  "offset": 101
                },
                {
                  "val": "sepa-credit-transfers",
                  "offset": 134
                }
              ],
              "location": "GlobalSuccessfulSteps.loadTestData(String,String,String)"
            },
            "matchedColumns": [
              0,
              1,
              2
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1778394377,
              "status": "passed"
            },
            "line": 11,
            "name": "PSU sends the single payment initiating request",
            "match": {
              "location": "GlobalSuccessfulSteps.sendSinglePaymentInitiatingRequest()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 43433,
              "status": "passed"
            },
            "line": 12,
            "name": "a successful response code and the appropriate payment response data are received",
            "match": {
              "location": "GlobalSuccessfulSteps.checkResponseCode()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 155989,
              "error_message": "java.lang.AssertionError: \nExpected: not null\n     but: was null\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)\n\tat de.adorsys.aspsp.xs2a.integtest.stepdefinitions.pis.GlobalSuccessfulSteps.checkRedirectUrl(GlobalSuccessfulSteps.java:135)\n\tat ✽.And a redirect URL is delivered to the PSU(PIS_Redirect.feature:13)\n",
              "status": "failed"
            },
            "line": 13,
            "name": "a redirect URL is delivered to the PSU",
            "match": {
              "location": "GlobalSuccessfulSteps.checkRedirectUrl()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 10155796,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 50,
        "name": "Payment initiation request for recurring payments (redirect)",
        "description": "",
        "id": "payment-initiation-service---redirect-approach;payment-initiation-request-for-recurring-payments-(redirect);;2",
        "after": [
          {
            "result": {
              "duration": 175762,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 3575312,
              "status": "passed"
            },
            "line": 44,
            "name": "PSU wants to initiate a recurring payment recPayInit-successful.json using the payment service periodic-payments and the payment product sepa-credit-transfers",
            "match": {
              "arguments": [
                {
                  "val": "recPayInit-successful.json",
                  "offset": 42
                },
                {
                  "val": "periodic-payments",
                  "offset": 95
                },
                {
                  "val": "sepa-credit-transfers",
                  "offset": 137
                }
              ],
              "location": "PeriodicPaymentSuccessfulSteps.loadTestDataForSuccessfulPeriodicPayment(String,String,String)"
            },
            "matchedColumns": [
              0,
              1,
              2
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1797322060,
              "status": "passed"
            },
            "line": 45,
            "name": "PSU sends the recurring payment initiating request",
            "match": {
              "location": "PeriodicPaymentSuccessfulSteps.sendSuccessfulPeriodicPaymentInitiatingRequest()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 32982,
              "status": "passed"
            },
            "line": 46,
            "name": "a successful response code and the appropriate payment response data are received",
            "match": {
              "location": "GlobalSuccessfulSteps.checkResponseCode()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 150813,
              "error_message": "java.lang.AssertionError: \nExpected: not null\n     but: was null\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)\n\tat de.adorsys.aspsp.xs2a.integtest.stepdefinitions.pis.GlobalSuccessfulSteps.checkRedirectUrl(GlobalSuccessfulSteps.java:135)\n\tat ✽.And a redirect URL is delivered to the PSU(PIS_Redirect.feature:47)\n",
              "status": "failed"
            },
            "line": 47,
            "name": "a redirect URL is delivered to the PSU",
            "match": {
              "location": "GlobalSuccessfulSteps.checkRedirectUrl()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 9773492,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.loadTestDataIntoDb()"
            }
          }
        ],
        "line": 51,
        "name": "Payment initiation request for recurring payments (redirect)",
        "description": "",
        "id": "payment-initiation-service---redirect-approach;payment-initiation-request-for-recurring-payments-(redirect);;3",
        "after": [
          {
            "result": {
              "duration": 192362,
              "status": "passed"
            },
            "match": {
              "location": "GlobalSuccessfulSteps.afterScenario()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 950687,
              "status": "passed"
            },
            "line": 44,
            "name": "PSU wants to initiate a recurring payment recPayInit-exceeding-amount.json using the payment service periodic-payments and the payment product sepa-credit-transfers",
            "match": {
              "arguments": [
                {
                  "val": "recPayInit-exceeding-amount.json",
                  "offset": 42
                },
                {
                  "val": "periodic-payments",
                  "offset": 101
                },
                {
                  "val": "sepa-credit-transfers",
                  "offset": 143
                }
              ],
              "location": "PeriodicPaymentSuccessfulSteps.loadTestDataForSuccessfulPeriodicPayment(String,String,String)"
            },
            "matchedColumns": [
              0,
              1,
              2
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1729462415,
              "status": "passed"
            },
            "line": 45,
            "name": "PSU sends the recurring payment initiating request",
            "match": {
              "location": "PeriodicPaymentSuccessfulSteps.sendSuccessfulPeriodicPaymentInitiatingRequest()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 63936,
              "status": "passed"
            },
            "line": 46,
            "name": "a successful response code and the appropriate payment response data are received",
            "match": {
              "location": "GlobalSuccessfulSteps.checkResponseCode()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 169096,
              "error_message": "java.lang.AssertionError: \nExpected: not null\n     but: was null\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)\n\tat de.adorsys.aspsp.xs2a.integtest.stepdefinitions.pis.GlobalSuccessfulSteps.checkRedirectUrl(GlobalSuccessfulSteps.java:135)\n\tat ✽.And a redirect URL is delivered to the PSU(PIS_Redirect.feature:47)\n",
              "status": "failed"
            },
            "line": 47,
            "name": "a redirect URL is delivered to the PSU",
            "match": {
              "location": "GlobalSuccessfulSteps.checkRedirectUrl()"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Payment Initiation Service - Redirect approach",
    "description": "",
    "id": "payment-initiation-service---redirect-approach",
    "keyword": "Feature",
    "uri": "PIS_Redirect.feature"
  }
]